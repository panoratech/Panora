# this docker compose is for development purposes.
# use it to run a development environnement locally without pulling pre-built images from cloud

name: panora
version: "3.8"

services:
  postgres:
    image: postgres:16.1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./packages/api/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./packages/api/scripts/automatic_timestamps.sql:/docker-entrypoint-initdb.d/automatic_timestamps.sql
      - ./packages/api/scripts/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      - backend

  api:
    build:
      context: ./
      dockerfile: ./packages/api/Dockerfile.dev
    environment:
      ENV: ${ENV}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?ssl=false
      DISTRIBUTION: ${DISTRIBUTION}
      WEBHOOK_INGRESS: ${WEBHOOK_INGRESS}
      REDIRECT_TUNNEL_INGRESS: ${REDIRECT_TUNNEL_INGRESS}
      JWT_SECRET: ${JWT_SECRET}
      AXIOM_DATASET: ${AXIOM_DATASET}
      AXIOM_TOKEN: ${AXIOM_TOKEN}
      SENTRY_ENABLED: ${SENTRY_ENABLED}
      SENTRY_DSN: ${SENTRY_DSN}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASS: ${REDIS_PASS}
      REDIS_USER: ${REDIS_USER}
      REDIS_PORT: ${REDIS_PORT}
      WEBAPP_URL: ${NEXT_PUBLIC_WEBAPP_DOMAIN}
      #REDIS_TLS: 1 # set this variable to 1 when Redis is AWS hosted 
      REDIS_DB: ${REDIS_DB} 
      ENCRYPT_CRYPTO_SECRET_KEY: ${ENCRYPT_CRYPTO_SECRET_KEY}
      HUBSPOT_CRM_CLOUD_CLIENT_ID: ${HUBSPOT_CRM_CLOUD_CLIENT_ID}
      HUBSPOT_CRM_CLOUD_CLIENT_SECRET: ${HUBSPOT_CRM_CLOUD_CLIENT_SECRET}
      ATTIO_CRM_CLOUD_CLIENT_ID: ${ATTIO_CRM_CLOUD_CLIENT_ID}
      ATTIO_CRM_CLOUD_CLIENT_SECRET: ${ATTIO_CRM_CLOUD_CLIENT_SECRET}
      ZOHO_CRM_CLOUD_CLIENT_ID: ${ZOHO_CRM_CLOUD_CLIENT_ID}
      ZOHO_CRM_CLOUD_CLIENT_SECRET: ${ZOHO_CRM_CLOUD_CLIENT_SECRET}
      PIPEDRIVE_CRM_CLOUD_CLIENT_ID: ${PIPEDRIVE_CRM_CLOUD_CLIENT_ID}
      PIPEDRIVE_CRM_CLOUD_CLIENT_SECRET: ${PIPEDRIVE_CRM_CLOUD_CLIENT_SECRET}
      ZENDESK_CRM_CLOUD_CLIENT_ID: ${ZENDESK_CRM_CLOUD_CLIENT_ID}
      ZENDESK_CRM_CLOUD_CLIENT_SECRET: ${ZENDESK_CRM_CLOUD_CLIENT_SECRET}
      PANORA_BASE_API_URL: ${PANORA_BASE_API_URL}
      ZENDESK_TICKETING_CLOUD_CLIENT_ID: ${ZENDESK_TICKETING_CLOUD_CLIENT_ID}
      ZENDESK_TICKETING_CLOUD_CLIENT_SECRET: ${ZENDESK_TICKETING_CLOUD_CLIENT_SECRET}
      ZENDESK_TICKETING_CLOUD_SUBDOMAIN: ${ZENDESK_TICKETING_CLOUD_SUBDOMAIN}
      FRONT_TICKETING_CLOUD_CLIENT_ID: ${FRONT_TICKETING_CLOUD_CLIENT_ID}
      FRONT_TICKETING_CLOUD_CLIENT_SECRET: ${FRONT_TICKETING_CLOUD_CLIENT_SECRET}
      CLICKUP_TICKETING_CLOUD_CLIENT_ID: ${CLICKUP_TICKETING_CLOUD_CLIENT_ID}
      CLICKUP_TICKETING_CLOUD_CLIENT_SECRET: ${CLICKUP_TICKETING_CLOUD_CLIENT_SECRET}
      GITHUB_TICKETING_CLOUD_CLIENT_ID: ${GITHUB_TICKETING_CLOUD_CLIENT_ID}
      GITHUB_TICKETING_CLOUD_CLIENT_SECRET: ${GITHUB_TICKETING_CLOUD_CLIENT_SECRET}
      GITLAB_TICKETING_CLOUD_CLIENT_ID: ${GITLAB_TICKETING_CLOUD_CLIENT_ID}
      GITLAB_TICKETING_CLOUD_CLIENT_SECRET: ${GITLAB_TICKETING_CLOUD_CLIENT_SECRET}
      GORGIAS_TICKETING_CLOUD_CLIENT_ID: ${GORGIAS_TICKETING_CLOUD_CLIENT_ID}
      GORGIAS_TICKETING_CLOUD_CLIENT_SECRET: ${GORGIAS_TICKETING_CLOUD_CLIENT_SECRET}
      GORGIAS_TICKETING_CLOUD_SUBDOMAIN: ${GORGIAS_TICKETING_CLOUD_SUBDOMAIN}
      JIRA_TICKETING_CLOUD_CLIENT_ID: ${JIRA_TICKETING_CLOUD_CLIENT_ID}
      JIRA_TICKETING_CLOUD_CLIENT_SECRET: ${JIRA_TICKETING_CLOUD_CLIENT_SECRET}
      JIRA_SERVICEMGMT_TICKETING_CLOUD_CLIENT_ID: ${JIRA_SERVICEMGMT_TICKETING_CLOUD_CLIENT_ID}
      JIRA_SERVICEMGMT_TICKETING_CLOUD_CLIENT_SECRET: ${JIRA_SERVICEMGMT_TICKETING_CLOUD_CLIENT_SECRET}
      LINEAR_TICKETING_CLOUD_CLIENT_ID: ${LINEAR_TICKETING_CLOUD_CLIENT_ID}
      LINEAR_TICKETING_CLOUD_CLIENT_SECRET: ${LINEAR_TICKETING_CLOUD_CLIENT_SECRET}
      ACCELO_CRM_CLOUD_CLIENT_ID: ${ACCELO_CRM_CLOUD_CLIENT_ID}
      ACCELO_CRM_CLOUD_CLIENT_SECRET: ${ACCELO_CRM_CLOUD_CLIENT_SECRET}
      ACCELO_CRM_CLOUD_SUBDOMAIN: ${ACCELO_CRM_CLOUD_SUBDOMAIN}
      CAPSULE_CRM_CLOUD_CLIENT_ID: ${CAPSULE_CRM_CLOUD_CLIENT_ID}
      CAPSULE_CRM_CLOUD_CLIENT_SECRET: ${CAPSULE_CRM_CLOUD_CLIENT_SECRET}
      CLOSE_CRM_CLOUD_CLIENT_ID: ${CLOSE_CRM_CLOUD_CLIENT_ID}
      CLOSE_CRM_CLOUD_CLIENT_SECRET: ${CLOSE_CRM_CLOUD_CLIENT_SECRET}
      COPPER_CRM_CLOUD_CLIENT_ID: ${COPPER_CRM_CLOUD_CLIENT_ID}
      COPPER_CRM_CLOUD_CLIENT_SECRET: ${COPPER_CRM_CLOUD_CLIENT_SECRET}
      KEAP_CRM_CLOUD_CLIENT_ID: ${KEAP_CRM_CLOUD_CLIENT_ID}
      KEAP_CRM_CLOUD_CLIENT_SECRET: ${KEAP_CRM_CLOUD_CLIENT_SECRET}
      TEAMLEADER_CRM_CLOUD_CLIENT_ID: ${TEAMLEADER_CRM_CLOUD_CLIENT_ID}
      TEAMLEADER_CRM_CLOUD_CLIENT_SECRET: ${TEAMLEADER_CRM_CLOUD_CLIENT_SECRET}
      TEAMWORK_CRM_CLOUD_CLIENT_ID: ${TEAMWORK_CRM_CLOUD_CLIENT_ID}
      TEAMWORK_CRM_CLOUD_CLIENT_SECRET: ${TEAMWORK_CRM_CLOUD_CLIENT_SECRET}
      AHA_TICKETING_CLOUD_CLIENT_ID: ${AHA_TICKETING_CLOUD_CLIENT_ID}
      AHA_TICKETING_CLOUD_CLIENT_SECRET: ${AHA_TICKETING_CLOUD_CLIENT_SECRET}
      AHA_TICKETING_CLOUD_SUBDOMAIN: ${AHA_TICKETING_CLOUD_SUBDOMAIN}
      WRIKE_TICKETING_CLOUD_CLIENT_ID: ${WRIKE_TICKETING_CLOUD_CLIENT_ID}
      WRIKE_TICKETING_CLOUD_CLIENT_SECRET: ${WRIKE_TICKETING_CLOUD_CLIENT_SECRET}
      ASANA_TICKETING_CLOUD_CLIENT_ID: ${ASANA_TICKETING_CLOUD_CLIENT_ID}
      ASANA_TICKETING_CLOUD_CLIENT_SECRET: ${ASANA_TICKETING_CLOUD_CLIENT_SECRET}
      PENNYLANE_ACCOUNTING_CLOUD_CLIENT_ID: ${PENNYLANE_ACCOUNTING_CLOUD_CcLIENT_ID}
      PENNYLANE_ACCOUNTING_CLOUD_CLIENT_SECRET: ${PENNYLANE_ACCOUNTING_CLOUD_CLIENT_SECRET}
      FRESHBOOKS_ACCOUNTING_CLOUD_CLIENT_ID: ${FRESHBOOKS_ACCOUNTING_CLOUD_CLIENT_ID}
      FRESHBOOKS_ACCOUNTING_CLOUD_CLIENT_SECRET: ${FRESHBOOKS_ACCOUNTING_CLOUD_CLIENT_SECRET}
      FREEAGENT_ACCOUNTING_CLOUD_CLIENT_ID: ${FREEAGENT_ACCOUNTING_CLOUD_CLIENT_ID}
      FREEAGENT_ACCOUNTING_CLOUD_CLIENT_SECRET: ${FREEAGENT_ACCOUNTING_CLOUD_CLIENT_SECRET}
      SAGE_ACCOUNTING_CLOUD_CLIENT_ID: ${SAGE_ACCOUNTING_CLOUD_CLIENT_ID}
      SAGE_ACCOUNTING_CLOUD_CLIENT_SECRET: ${SAGE_ACCOUNTING_CLOUD_CLIENT_SECRET}
      MONEYBIRD_ACCOUNTING_CLOUD_CLIENT_ID: ${MONEYBIRD_ACCOUNTING_CLOUD_CLIENT_ID}
      MONEYBIRD_ACCOUNTING_CLOUD_CLIENT_SECRET: ${MONEYBIRD_ACCOUNTING_CLOUD_CLIENT_SECRET}
      QUICKBOOKS_ACCOUNTING_CLOUD_CLIENT_ID: ${QUICKBOOKS_ACCOUNTING_CLOUD_CLIENT_ID}
      QUICKBOOKS_ACCOUNTING_CLOUD_CLIENT_SECRET: ${QUICKBOOKS_ACCOUNTING_CLOUD_CLIENT_SECRET}
      WAVE_FINANCIAL_ACCOUNTING_CLOUD_CLIENT_ID: ${WAVE_FINANCIAL_ACCOUNTING_CLOUD_CLIENT_ID}
      WAVE_FINANCIAL_ACCOUNTING_CLOUD_CLIENT_SECRET: ${WAVE_FINANCIAL_ACCOUNTING_CLOUD_CLIENT_SECRET}
      GETRESPONSE_MARKETINGAUTOMATION_CLOUD_CLIENT_ID: ${GETRESPONSE_MARKETINGAUTOMATION_CLOUD_CLIENT_ID}
      GETRESPONSE_MARKETINGAUTOMATION_CLOUD_CLIENT_SECRET: ${GETRESPONSE_MARKETINGAUTOMATION_CLOUD_CLIENT_SECRET}
      MAILCHIMP_MARKETINGAUTOMATION_CLOUD_CLIENT_ID: ${MAILCHIMP_MARKETINGAUTOMATION_CLOUD_CLIENT_ID}
      MAILCHIMP_MARKETINGAUTOMATION_CLOUD_CLIENT_SECRET: ${MAILCHIMP_MARKETINGAUTOMATION_CLOUD_CLIENT_SECRET}
      PODIUM_MARKETINGAUTOMATION_CLOUD_CLIENT_ID: ${PODIUM_MARKETINGAUTOMATION_CLOUD_CLIENT_ID}
      PODIUM_MARKETINGAUTOMATION_CLOUD_CLIENT_SECRET: ${PODIUM_MARKETINGAUTOMATION_CLOUD_CLIENT_SECRET}
      XERO_ACCOUNTING_CLOUD_CLIENT_ID: ${XERO_ACCOUNTING_CLOUD_CLIENT_ID}
      XERO_ACCOUNTING_CLOUD_CLIENT_SECRET: ${XERO_ACCOUNTING_CLOUD_CLIENT_ID}
      GOOGLEDRIVE_FILESTORAGE_CLOUD_CLIENT_ID: ${GOOGLEDRIVE_FILESTORAGE_CLOUD_CLIENT_ID}
      GOOGLEDRIVE_FILESTORAGE_CLOUD_CLIENT_SECRET: ${GOOGLEDRIVE_FILESTORAGE_CLOUD_CLIENT_SECRET}
      ONEDRIVE_FILESTORAGE_CLOUD_CLIENT_ID: ${ONEDRIVE_FILESTORAGE_CLOUD_CLIENT_ID}
      ONEDRIVE_FILESTORAGE_CLOUD_CLIENT_SECRET: ${ONEDRIVE_FILESTORAGE_CLOUD_CLIENT_SECRET}
      SHAREPOINT_FILESTORAGE_CLOUD_CLIENT_ID: ${SHAREPOINT_FILESTORAGE_CLOUD_CLIENT_ID}
      SHAREPOINT_FILESTORAGE_CLOUD_CLIENT_SECRET: ${SHAREPOINT_FILESTORAGE_CLOUD_CLIENT_SECRET}
      DROPBOX_FILESTORAGE_CLOUD_CLIENT_ID: ${DROPBOX_FILESTORAGE_CLOUD_CLIENT_ID}
      DROPBOX_FILESTORAGE_CLOUD_CLIENT_SECRET: ${DROPBOX_FILESTORAGE_CLOUD_CLIENT_SECRET}
      BOX_FILESTORAGE_CLOUD_CLIENT_ID: ${BOX_FILESTORAGE_CLOUD_CLIENT_ID}
      BOX_FILESTORAGE_CLOUD_CLIENT_SECRET: ${BOX_FILESTORAGE_CLOUD_CLIENT_SECRET}
      KEAP_MARKETINGAUTOMATION_CLOUD_CLIENT_ID: ${KEAP_MARKETINGAUTOMATION_CLOUD_CLIENT_ID}
      KEAP_MARKETINGAUTOMATION_CLOUD_CLIENT_SECRET: ${KEAP_MARKETINGAUTOMATION_CLOUD_CLIENT_SECRET}
      NOTION_PRODUCTIVITY_CLOUD_CLIENT_ID: ${NOTION_PRODUCTIVITY_CLOUD_CLIENT_ID}
      NOTION_PRODUCTIVITY_CLOUD_CLIENT_SECRET: ${NOTION_PRODUCTIVITY_CLOUD_CLIENT_SECRET}
      SLACK_PRODUCTIVITY_CLOUD_CLIENT_ID: ${SLACK_PRODUCTIVITY_CLOUD_CLIENT_ID}
      SLACK_PRODUCTIVITY_CLOUD_CLIENT_SECRET: ${SLACK_PRODUCTIVITY_CLOUD_CLIENT_SECRET}
      KLAVIYO_TICKETING_CLOUD_CLIENT_ID: ${KLAVIYO_TICKETING_CLOUD_CLIENT_ID}
      KLAVIYO_TICKETING_CLOUD_CLIENT_SECRET: ${KLAVIYO_TICKETING_CLOUD_CLIENT_SECRET}
      HELPSCOUT_TICKETING_CLOUD_CLIENT_ID: ${HELPSCOUT_TICKETING_CLOUD_CLIENT_ID}
      HELPSCOUT_TICKETING_CLOUD_CLIENT_SECRET: ${HELPSCOUT_TICKETING_CLOUD_CLIENT_SECRET}
      IRONCLAD_TICKETING_CLOUD_CLIENT_ID: ${IRONCLAD_TICKETING_CLOUD_CLIENT_ID}
      IRONCLAD_TICKETING_CLOUD_CLIENT_SECRET: ${IRONCLAD_TICKETING_CLOUD_CLIENT_SECRET}
      SHOPIFY_ECOMMERCE_CLOUD_CLIENT_ID: ${SHOPIFY_ECOMMERCE_CLOUD_CLIENT_ID}
      SHOPIFY_ECOMMERCE_CLOUD_CLIENT_SECRET: ${SHOPIFY_ECOMMERCE_CLOUD_CLIENT_SECRET}
      SQUARESPACE_ECOMMERCE_CLOUD_CLIENT_ID: ${SQUARESPACE_ECOMMERCE_CLOUD_CLIENT_ID}
      SQUARESPACE_ECOMMERCE_CLOUD_CLIENT_SECRET: ${SQUARESPACE_ECOMMERCE_CLOUD_CLIENT_SECRET}
      EBAY_ECOMMERCE_CLOUD_CLIENT_ID: ${EBAY_ECOMMERCE_CLOUD_CLIENT_ID}
      EBAY_ECOMMERCE_CLOUD_CLIENT_SECRET: ${EBAY_ECOMMERCE_CLOUD_CLIENT_SECRET}
      EBAY_ECOMMERCE_CLOUD_RUVALUE: ${EBAY_ECOMMERCE_CLOUD_RUVALUE}
      FAIRE_ECOMMERCE_CLOUD_CLIENT_ID: ${FAIRE_ECOMMERCE_CLOUD_CLIENT_ID}
      FAIRE_ECOMMERCE_CLOUD_CLIENT_SECRET: ${FAIRE_ECOMMERCE_CLOUD_CLIENT_SECRET}
      WEBFLOW_ECOMMERCE_CLOUD_CLIENT_ID: ${WEBFLOW_ECOMMERCE_CLOUD_CLIENT_ID}
      WEBFLOW_ECOMMERCE_CLOUD_CLIENT_SECRET: ${WEBFLOW_ECOMMERCE_CLOUD_CLIENT_SECRET}
      AMAZON_ECOMMERCE_CLOUD_CLIENT_ID: ${AMAZON_ECOMMERCE_CLOUD_CLIENT_ID}
      AMAZON_ECOMMERCE_CLOUD_CLIENT_SECRET: ${AMAZON_ECOMMERCE_CLOUD_CLIENT_SECRET}
      AMAZON_ECOMMERCE_CLOUD_APPLICATION_ID: ${AMAZON_ECOMMERCE_CLOUD_APPLICATION_ID}
      EMAIL_SENDING_ADDRESS: ${EMAIL_SENDING_ADDRESS}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      MICROSOFTDYNAMICSSALES_CRM_CLOUD_CLIENT_ID: ${MICROSOFTDYNAMICSSALES_CRM_CLOUD_CLIENT_ID}
      MICROSOFTDYNAMICSSALES_CRM_CLOUD_CLIENT_SECRET: ${MICROSOFTDYNAMICSSALES_CRM_CLOUD_CLIENT_SECRET}
      POSTHOG_HOST: ${POSTHOG_HOST}
      POSTHOG_KEY:  ${POSTHOG_KEY}
      PH_TELEMETRY: ${PH_TELEMETRY}
      SALESFORCE_CRM_CLOUD_CLIENT_ID: ${SALESFORCE_CRM_CLOUD_CLIENT_ID}
      SALESFORCE_CRM_CLOUD_CLIENT_SECRET: ${SALESFORCE_CRM_CLOUD_CLIENT_SECRET}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    restart: unless-stopped
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 1000 # Try launching the API service as long as possible. Required for other services to start

  redis:
    image: valkey/valkey:7.2-alpine
    container_name: 'Redis'
    command: valkey-server --requirepass ${REDIS_PASS}
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    volumes:
      - ./redis-data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    
  webapp-nextjs:
    build:
      dockerfile: ./apps/webapp/Dockerfile.dev
      context: ./
      args:
        VITE_BACKEND_DOMAIN: http://localhost:3000
    environment:
      NEXT_PUBLIC_POSTHOG_KEY: ${POSTHOG_KEY}
      NEXT_PUBLIC_POSTHOG_HOST: ${POSTHOG_HOST}
      NEXT_PUBLIC_DISTRIBUTION: ${DISTRIBUTION}
      NEXT_PUBLIC_BACKEND_DOMAIN: http://localhost:3000
      NEXT_PUBLIC_MAGIC_LINK_DOMAIN: ${NEXT_PUBLIC_MAGIC_LINK_DOMAIN}
      NEXT_PUBLIC_WEBAPP_DOMAIN: ${NEXT_PUBLIC_WEBAPP_DOMAIN}
      NEXT_PUBLIC_REDIRECT_WEBHOOK_INGRESS: ${REDIRECT_TUNNEL_INGRESS} 
    restart: unless-stopped
    ports:
      - 80:8090
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - backend
      - frontend

  # # # # # # # # # # 
  # Developer tools #
  # # # # # # # # # # 

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin4_container
  #   restart: always
  #   ports:
  #     - "8888:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
  #     PGADMIN_DEFAULT_PASSWORD: strong-password
  #   networks:
  #    - backend
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin

  # ngrok:
  #   image: ngrok/ngrok:latest
  #   restart: always
  #   command:
  #     - "start"
  #     - "--all"
  #     - "--config"
  #     - "/etc/ngrok.yml"
  #   volumes:
  #     - ./ngrok.yml:/etc/ngrok.yml
  #   ports:
  #   - 4040:4040
  #   depends_on:
  #     api:
  #       condition: service_healthy
  #   network_mode: "host"

  # docs:
  #   build:
  #     dockerfile: ./Dockerfile.dev
  #     context: ./docs/
  #   ports:
  #     - 911:3000
  #   volumes:
  #     - ./docs/:/app

volumes:
  local_pgdata:
  pgadmin-data:

networks:
  frontend:
  backend: