generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model crm_deals_stages {
  id_crm_deals_stage String      @id(map: "pk_crm_deal_stages") @db.Uuid
  stage_name         String?
  created_at         DateTime    @db.Timestamptz(6)
  modified_at        DateTime    @db.Timestamptz(6)
  id_linked_user     String?     @db.Uuid
  remote_id          String?
  remote_platform    String?
  id_connection      String      @db.Uuid
  crm_deals          crm_deals[]
}

model crm_users {
  id_crm_user     String            @id(map: "pk_crm_users") @db.Uuid
  name            String?
  email           String?
  created_at      DateTime          @db.Timestamptz(6)
  modified_at     DateTime          @db.Timestamptz(6)
  id_linked_user  String?           @db.Uuid
  remote_id       String?
  remote_platform String?
  id_connection   String            @db.Uuid
  crm_companies   crm_companies[]
  crm_contacts    crm_contacts[]
  crm_deals       crm_deals[]
  crm_engagements crm_engagements[]
  crm_tasks       crm_tasks[]
}

model cs_attributes {
  id_cs_attribute String @id(map: "pk_ct_attributes") @db.Uuid
  attribute_slug  String
  data_type       String
  id_cs_entity    String @db.Uuid
}

model cs_entities {
  id_cs_entity           String @id(map: "pk_ct_entities") @db.Uuid
  id_connection_strategy String @db.Uuid
}

model cs_values {
  id_cs_value     String @id(map: "pk_ct_values") @db.Uuid
  value           String
  id_cs_attribute String @db.Uuid
}

model ecom_customers {
  id_ecom_customer String           @id(map: "pk_ecom_customers") @db.Uuid
  remote_id        String?
  email            String?
  first_name       String?
  last_name        String?
  phone_number     String?
  modified_at      DateTime         @db.Timestamptz(6)
  created_at       DateTime         @db.Timestamptz(6)
  id_connection    String           @db.Uuid
  remote_deleted   Boolean
  ecom_addresses   ecom_addresses[]
  ecom_orders      ecom_orders[]
}

model ecom_fulfilment_orders {
  id_ecom_fulfilment_order String @id(map: "pk_ecom_fulfilment_order") @db.Uuid
}

model ecom_order_line_items {
  id_ecom_order_line_item String @id(map: "pk_106") @db.Uuid
}

model ecom_products {
  id_ecom_product       String                  @id(map: "pk_ecom_products") @db.Uuid
  remote_id             String?
  product_url           String?
  product_type          String?
  product_status        String?
  images_urls           String[]
  description           String?
  vendor                String?
  tags                  String[]
  modified_at           DateTime                @db.Timestamptz(6)
  created_at            DateTime                @db.Timestamptz(6)
  id_connection         String                  @db.Uuid
  remote_deleted        Boolean
  ecom_product_variants ecom_product_variants[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model entity {
  id_entity          String      @id(map: "pk_entity") @db.Uuid
  ressource_owner_id String      @db.Uuid
  created_at         DateTime    @db.Timestamptz(6)
  modified_at        DateTime    @db.Timestamptz(6)
  attribute          attribute[]
  value              value[]
}

model fs_drives {
  id_fs_drive       String    @id(map: "pk_fs_drives") @db.Uuid
  drive_url         String?
  name              String?
  remote_created_at DateTime? @db.Timestamptz(6)
  remote_id         String?
  created_at        DateTime  @db.Timestamptz(6)
  modified_at       DateTime  @db.Timestamptz(6)
  id_connection     String    @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fs_groups {
  id_fs_group        String   @id(map: "pk_fs_groups") @db.Uuid
  name               String?
  users              String[]
  remote_id          String?
  remote_was_deleted Boolean
  created_at         DateTime @db.Timestamptz(6)
  modified_at        DateTime @db.Timestamptz(6)
  id_connection      String   @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fs_permissions {
  id_fs_permission String   @id(map: "pk_fs_permissions") @db.Uuid
  remote_id        String?
  user             String?  @db.Uuid
  group            String?  @db.Uuid
  type             String?
  roles            String[]
  created_at       DateTime @db.Timestamptz(6)
  modified_at      DateTime @db.Timestamptz(6)
  id_connection    String   @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fs_shared_links {
  id_fs_shared_link  String    @id(map: "pk_fs_shared_links") @db.Uuid
  url                String?
  download_url       String?
  scope              String?
  password_protected Boolean
  password           String?
  expires_at         DateTime? @db.Timestamptz(6)
  created_at         DateTime  @db.Timestamptz(6)
  modified_at        DateTime  @db.Timestamptz(6)
  id_connection      String    @db.Uuid
  id_fs_folder       String?   @db.Uuid
  id_fs_file         String?   @db.Uuid
  remote_id          String?
}

model fs_users {
  id_fs_user    String   @id(map: "pk_fs_users") @db.Uuid
  name          String?
  email         String?
  is_me         Boolean
  remote_id     String?
  created_at    DateTime @db.Timestamptz(6)
  modified_at   DateTime @db.Timestamptz(6)
  id_connection String   @db.Uuid
}

model hris_companies {
  id_hris_company    String           @id(map: "pk_hris_companies") @db.Uuid
  legal_name         String?
  display_name       String?
  eins               String[]
  remote_id          String?
  remote_created_at  DateTime?        @db.Timestamptz(6)
  created_at         DateTime         @db.Timestamptz(6)
  modified_at        DateTime         @db.Timestamptz(6)
  remote_was_deleted Boolean
  id_connection      String           @db.Uuid
  hris_employees     hris_employees[]
}

model hris_employer_benefits {
  id_hris_employer_benefit String          @id(map: "pk_hris_employer_benefits") @db.Uuid
  id_connection            String          @db.Uuid
  benefit_plan_type        String?
  name                     String?
  description              String?
  deduction_code           String?
  remote_id                String?
  remote_created_at        DateTime?       @db.Timestamptz(6)
  remote_was_deleted       Boolean
  created_at               DateTime        @db.Timestamptz(6)
  modified_at              DateTime        @db.Timestamptz(6)
  hris_benefits            hris_benefits[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model hris_groups {
  id_hris_group      String   @id(map: "pk_hris_groups") @db.Uuid
  parent_group       String?  @db.Uuid
  name               String?
  type               String?
  remote_id          String
  remote_created_at  DateTime @db.Timestamptz(6)
  created_at         DateTime @db.Timestamptz(6)
  modified_at        DateTime @db.Timestamptz(6)
  remote_was_deleted Boolean
  id_connection      String   @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model hris_locations {
  id_hris_location   String   @id(map: "pk_hris_locations") @db.Uuid
  name               String?
  phone_number       String?
  street_1           String?
  street_2           String?
  city               String?
  state              String?
  id_hris_company    String?  @db.Uuid
  id_hris_employee   String?  @db.Uuid
  zip_code           String?
  country            String?
  location_type      String?
  remote_id          String?
  remote_created_at  DateTime @db.Timestamptz(6)
  created_at         DateTime @db.Timestamptz(6)
  modified_at        DateTime @db.Timestamptz(6)
  remote_was_deleted Boolean
  id_connection      String   @db.Uuid
}

model hris_pay_groups {
  id_hris_pay_group  String             @id(map: "pk_hris_pay_groups") @db.Uuid
  pay_group_name     String?
  remote_id          String?
  remote_created_at  DateTime?          @db.Timestamptz(6)
  created_at         DateTime           @db.Timestamptz(6)
  modified_at        DateTime           @db.Timestamptz(6)
  remote_was_deleted Boolean
  id_connection      String             @db.Uuid
  hris_employments   hris_employments[]
}

model hris_payroll_runs {
  id_hris_payroll_run        String                       @id(map: "pk_hris_payroll_runs") @db.Uuid
  run_state                  String?
  run_type                   String?
  start_date                 DateTime?                    @db.Timestamptz(6)
  end_date                   DateTime?                    @db.Timestamptz(6)
  check_date                 DateTime?                    @db.Timestamptz(6)
  remote_id                  String?
  remote_created_at          DateTime?                    @db.Timestamptz(6)
  created_at                 DateTime                     @db.Timestamptz(6)
  modified_at                DateTime                     @db.Timestamptz(6)
  remote_was_deleted         Boolean
  id_connection              String                       @db.Uuid
  hris_employee_payroll_runs hris_employee_payroll_runs[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model hris_time_off {
  id_hris_time_off   String    @id(map: "pk_hris_time_off") @db.Uuid
  employee           String?   @db.Uuid
  approver           String?   @db.Uuid
  status             String?
  employee_note      String?
  units              String?
  amount             BigInt?
  request_type       String?
  start_time         DateTime? @db.Timestamptz(6)
  end_time           DateTime? @db.Timestamptz(6)
  remote_id          String?
  remote_created_at  DateTime? @db.Timestamptz(6)
  created_at         DateTime  @db.Timestamptz(6)
  modified_at        DateTime  @db.Timestamptz(6)
  remote_was_deleted Boolean
  id_connection      String    @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model managed_webhooks {
  id_managed_webhook    String   @id(map: "pk_managed_webhooks") @db.Uuid
  active                Boolean
  id_connection         String   @db.Uuid
  endpoint              String   @db.Uuid
  api_version           String?
  active_events         String[]
  remote_signing_secret String?
  modified_at           DateTime @db.Timestamptz(6)
  created_at            DateTime @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model remote_data {
  id_remote_data     String    @id(map: "pk_remote_data") @db.Uuid
  ressource_owner_id String?   @unique(map: "force_unique_ressourceownerid") @db.Uuid
  format             String?
  data               String?
  created_at         DateTime? @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tcg_accounts {
  id_tcg_account  String         @id(map: "pk_tcg_account") @db.Uuid
  remote_id       String?
  name            String?
  domains         String[]
  remote_platform String?
  created_at      DateTime       @db.Timestamptz(6)
  modified_at     DateTime       @db.Timestamptz(6)
  id_linked_user  String?        @db.Uuid
  id_connection   String         @db.Uuid
  tcg_contacts    tcg_contacts[]
}

model tcg_collections {
  id_tcg_collection String   @id(map: "pk_tcg_collections") @db.Uuid
  name              String?
  description       String?
  remote_id         String?
  remote_platform   String?
  collection_type   String?
  parent_collection String?  @db.Uuid
  id_tcg_ticket     String?  @db.Uuid
  created_at        DateTime @db.Timestamptz(6)
  modified_at       DateTime @db.Timestamptz(6)
  id_linked_user    String   @db.Uuid
  id_connection     String   @db.Uuid
}

model tcg_teams {
  id_tcg_team     String   @id(map: "pk_tcg_teams") @db.Uuid
  remote_id       String?
  remote_platform String?
  name            String?
  description     String?
  created_at      DateTime @db.Timestamp(6)
  modified_at     DateTime @db.Timestamp(6)
  id_linked_user  String?  @db.Uuid
  id_connection   String   @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tcg_users {
  id_tcg_user     String         @id(map: "pk_tcg_users") @db.Uuid
  name            String?
  email_address   String?
  remote_id       String?
  remote_platform String?
  teams           String[]
  id_linked_user  String?        @db.Uuid
  id_connection   String         @db.Uuid
  created_at      DateTime?      @db.Timestamptz(6)
  modified_at     DateTime?      @db.Timestamptz(6)
  tcg_comments    tcg_comments[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  id_user                 String     @id(map: "pk_users") @db.Uuid
  identification_strategy String
  email                   String?    @unique(map: "unique_email")
  password_hash           String?
  first_name              String
  last_name               String
  id_stytch               String?    @unique(map: "force_stytch_id_unique")
  created_at              DateTime   @default(now()) @db.Timestamptz(6)
  modified_at             DateTime   @default(now()) @db.Timestamptz(6)
  reset_token             String?
  reset_token_expires_at  DateTime?  @db.Timestamptz(6)
  api_keys                api_keys[]
  projects                projects[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model webhook_endpoints {
  id_webhook_endpoint       String                      @id(map: "pk_webhook_endpoint") @db.Uuid
  endpoint_description      String?
  url                       String
  secret                    String
  active                    Boolean
  created_at                DateTime                    @db.Timestamptz(6)
  scope                     String[]
  id_project                String                      @db.Uuid
  last_update               DateTime?                   @db.Timestamptz(6)
  webhook_delivery_attempts webhook_delivery_attempts[]
}

model webhooks_payloads {
  id_webhooks_payload       String                      @id(map: "pk_webhooks_payload") @db.Uuid
  data                      Json                        @db.Json
  webhook_delivery_attempts webhook_delivery_attempts[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model webhooks_reponses {
  id_webhooks_reponse       String                      @id(map: "pk_webhooks_reponse") @db.Uuid
  http_response_data        String
  http_status_code          String
  webhook_delivery_attempts webhook_delivery_attempts[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_accounting_periods {
  id_acc_accounting_period String    @id(map: "pk_acc_accounting_periods") @db.Uuid
  remote_id                String?
  created_at               DateTime  @db.Timestamptz(6)
  modified_at              DateTime  @db.Timestamptz(6)
  name                     String?
  status                   String?
  start_date               DateTime? @db.Timestamptz(6)
  end_date                 DateTime? @db.Timestamptz(6)
  id_connection            String    @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_accounts {
  id_acc_account      String   @id(map: "pk_acc_accounts") @db.Uuid
  name                String?
  description         String?
  classification      String?
  type                String?
  status              String?
  current_balance     BigInt?
  currency            String?
  account_number      String?
  parent_account      String?  @db.Uuid
  remote_id           String?
  id_acc_company_info String?  @db.Uuid
  created_at          DateTime @db.Timestamptz(6)
  modified_at         DateTime @db.Timestamptz(6)
  id_connection       String   @db.Uuid

  @@index([id_acc_company_info], map: "fk_accounts_companyinfo_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_addresses {
  id_acc_address      String   @id(map: "pk_acc_addresses") @db.Uuid
  type                String?
  street_1            String?
  street_2            String?
  city                String?
  remote_id           String?
  state               String?
  country_subdivision String?
  country             String?
  zip                 String?
  created_at          DateTime @db.Timestamptz(6)
  modified_at         DateTime @db.Timestamptz(6)
  id_acc_contact      String?  @db.Uuid
  id_acc_company_info String?  @db.Uuid
  id_connection       String   @db.Uuid

  @@index([id_acc_company_info], map: "fk_acc_company_info_acc_adresses")
  @@index([id_acc_contact], map: "fk_acc_contact_acc_addresses")
}

model acc_attachments {
  id_acc_attachment String   @id(map: "pk_acc_attachments") @db.Uuid
  file_name         String?
  file_url          String?
  remote_id         String?
  id_acc_account    String?  @db.Uuid
  created_at        DateTime @db.Timestamptz(6)
  modified_at       DateTime @db.Timestamptz(6)
  id_connection     String   @db.Uuid

  @@index([id_acc_account], map: "fk_acc_attachments_accountid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_balance_sheets {
  id_acc_balance_sheet String    @id(map: "pk_acc_balance_sheets") @db.Uuid
  name                 String?
  currency             String?
  id_acc_company_info  String?   @db.Uuid
  date                 DateTime? @db.Timestamptz(6)
  net_assets           BigInt?
  assets               String[]
  liabilities          String[]
  equity               String[]
  remote_generated_at  DateTime? @db.Timestamptz(6)
  remote_id            String?
  created_at           DateTime  @db.Timestamptz(6)
  modified_at          DateTime  @db.Timestamptz(6)
  id_connection        String    @db.Uuid

  @@index([id_acc_company_info], map: "fk_balancesheetcompanyinfoid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_balance_sheets_report_items {
  id_acc_balance_sheets_report_item String   @id(map: "pk_acc_balance_sheets_report_items") @db.Uuid
  remote_id                         String?
  created_at                        DateTime @db.Timestamptz(6)
  modified_at                       DateTime @db.Timestamptz(6)
  name                              String?
  value                             BigInt?
  parent_item                       String?  @db.Uuid
  id_acc_company_info               String?  @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_cash_flow_statement_report_items {
  id_acc_cash_flow_statement_report_item String    @id(map: "pk_acc_cash_flow_statement_report_items") @db.Uuid
  name                                   String?
  value                                  BigInt?
  type                                   String?
  parent_item                            String?   @db.Uuid
  remote_generated_at                    DateTime? @db.Timestamptz(6)
  remote_id                              String?
  modified_at                            DateTime  @db.Timestamptz(6)
  created_at                             DateTime  @db.Timestamptz(6)
  id_acc_cash_flow_statement             String?   @db.Uuid

  @@index([id_acc_cash_flow_statement], map: "fk_cashflow_statement_acc_cash_flow_statement_report_item")
}

model acc_cash_flow_statements {
  id_acc_cash_flow_statement  String    @id(map: "pk_acc_cash_flow_statements") @db.Uuid
  name                        String?
  currency                    String?
  company                     String?   @db.Uuid
  start_period                DateTime? @db.Timestamptz(6)
  end_period                  DateTime? @db.Timestamptz(6)
  cash_at_beginning_of_period BigInt?
  cash_at_end_of_period       BigInt?
  remote_generated_at         DateTime? @db.Timestamptz(6)
  remote_id                   String?
  modified_at                 DateTime  @db.Timestamptz(6)
  created_at                  DateTime  @db.Timestamptz(6)
  id_connection               String    @db.Uuid
}

model acc_company_infos {
  id_acc_company_info   String    @id(map: "pk_acc_company_infos") @db.Uuid
  name                  String?
  legal_name            String?
  tax_number            String?
  fiscal_year_end_month Int?
  fiscal_year_end_day   Int?
  currency              String?
  remote_created_at     DateTime? @db.Timestamptz(6)
  remote_id             String?
  urls                  String[]
  created_at            DateTime  @db.Timestamptz(6)
  modified_at           DateTime  @db.Timestamptz(6)
  id_connection         String    @db.Uuid
  tracking_categories   String[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_contacts {
  id_acc_contact      String   @id(map: "pk_acc_contacts") @db.Uuid
  name                String?
  is_supplier         Boolean?
  is_customer         Boolean?
  email_address       String?
  tax_number          String?
  status              String?
  currency            String?
  remote_updated_at   String?
  id_acc_company_info String?  @db.Uuid
  id_connection       String   @db.Uuid
  remote_id           String?
  created_at          DateTime @db.Timestamptz(6)
  modified_at         DateTime @db.Timestamptz(6)

  @@index([id_acc_company_info], map: "fk_acc_contact_company")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_credit_notes {
  id_acc_credit_note       String    @id(map: "pk_acc_credit_notes") @db.Uuid
  transaction_date         DateTime? @db.Timestamptz(6)
  status                   String?
  number                   String?
  id_acc_contact           String?   @db.Uuid
  company                  String?   @db.Uuid
  exchange_rate            String?
  total_amount             BigInt?
  remaining_credit         BigInt?
  tracking_categories      String[]
  currency                 String?
  remote_created_at        DateTime? @db.Timestamptz(6)
  remote_updated_at        DateTime? @db.Timestamptz(6)
  payments                 String[]
  applied_payments         String[]
  id_acc_accounting_period String?   @db.Uuid
  remote_id                String?
  modified_at              DateTime  @db.Timetz(6)
  created_at               DateTime  @db.Timetz(6)
  id_connection            String    @db.Uuid
}

model acc_expense_lines {
  id_acc_expense_line String   @id(map: "pk_acc_expense_lines") @db.Uuid
  id_acc_expense      String   @db.Uuid
  remote_id           String?
  net_amount          BigInt?
  currency            String?
  description         String?
  exchange_rate       String?
  created_at          DateTime @db.Timestamptz(6)
  modified_at         DateTime @db.Timestamptz(6)
  id_connection       String   @db.Uuid

  @@index([id_acc_expense], map: "fk_acc_expense_expense_lines_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_expenses {
  id_acc_expense      String    @id(map: "pk_acc_expenses") @db.Uuid
  transaction_date    DateTime? @db.Timestamptz(6)
  total_amount        BigInt?
  sub_total           BigInt?
  total_tax_amount    BigInt?
  currency            String?
  exchange_rate       String?
  memo                String?
  id_acc_account      String?   @db.Uuid
  id_acc_contact      String?   @db.Uuid
  id_acc_company_info String?   @db.Uuid
  remote_id           String?
  remote_created_at   DateTime? @db.Timestamptz(6)
  created_at          DateTime  @db.Timestamptz(6)
  modified_at         DateTime  @db.Timestamptz(6)
  id_connection       String    @db.Uuid
  tracking_categories String[]

  @@index([id_acc_account], map: "fk_acc_account_acc_expense_index")
  @@index([id_acc_company_info], map: "fk_acc_expense_acc_company_index")
  @@index([id_acc_contact], map: "fk_acc_expense_acc_contact_index")
}

model acc_income_statements {
  id_acc_income_statement String    @id(map: "pk_acc_income_statements") @db.Uuid
  name                    String?
  currency                String?
  start_period            DateTime? @db.Timestamptz(6)
  end_period              DateTime? @db.Timestamptz(6)
  gross_profit            BigInt?
  net_operating_income    BigInt?
  net_income              BigInt?
  remote_id               String?
  created_at              DateTime  @db.Timestamptz(6)
  modified_at             DateTime  @db.Timestamptz(6)
  id_connection           String    @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_invoices {
  id_acc_invoice           String    @id(map: "pk_acc_invoices") @db.Uuid
  type                     String?
  number                   String?
  issue_date               DateTime? @db.Timestamptz(6)
  due_date                 DateTime? @db.Timestamptz(6)
  paid_on_date             DateTime? @db.Timestamptz(6)
  memo                     String?
  currency                 String?
  exchange_rate            String?
  total_discount           BigInt?
  sub_total                BigInt?
  status                   String?
  total_tax_amount         BigInt?
  total_amount             BigInt?
  balance                  BigInt?
  remote_updated_at        DateTime? @db.Timestamptz(6)
  remote_id                String?
  created_at               DateTime  @db.Timestamptz(6)
  modified_at              DateTime  @db.Timestamptz(6)
  id_connection            String    @db.Uuid
  id_acc_contact           String?   @db.Uuid
  id_acc_accounting_period String?   @db.Uuid
  tracking_categories      String[]

  @@index([id_acc_accounting_period], map: "fk_acc_invoice_accounting_period_index")
  @@index([id_acc_contact], map: "fk_invoice_contactid")
}

model acc_invoices_line_items {
  id_acc_invoices_line_item String   @id(map: "pk_acc_invoices_line_items") @db.Uuid
  remote_id                 String?
  description               String?
  unit_price                BigInt?
  quantity                  BigInt?
  total_amount              BigInt?
  currency                  String?
  exchange_rate             String?
  id_acc_invoice            String   @db.Uuid
  id_acc_item               String   @db.Uuid
  created_at                DateTime @db.Timestamptz(6)
  modified_at               DateTime @db.Timestamptz(6)
  id_connection             String   @db.Uuid
  acc_tracking_categories   String[]

  @@index([id_acc_invoice], map: "fk_acc_invoice_line_items_index")
  @@index([id_acc_item], map: "fk_acc_items_lines_invoice_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_items {
  id_acc_item         String    @id(map: "pk_acc_items") @db.Uuid
  name                String?
  status              String?
  unit_price          BigInt?
  purchase_price      BigInt?
  remote_updated_at   DateTime? @db.Timestamptz(6)
  remote_id           String?
  sales_account       String?   @db.Uuid
  purchase_account    String?   @db.Uuid
  id_acc_company_info String?   @db.Uuid
  created_at          DateTime  @db.Timestamptz(6)
  modified_at         DateTime  @db.Timestamptz(6)
  id_connection       String    @db.Uuid

  @@index([purchase_account], map: "fk_acc_item_acc_account")
  @@index([id_acc_company_info], map: "fk_acc_item_acc_company_infos")
  @@index([sales_account], map: "fk_acc_items_sales_account")
}

model acc_journal_entries {
  id_acc_journal_entry     String    @id(map: "pk_acc_journal_entries") @db.Uuid
  transaction_date         DateTime? @db.Timestamptz(6)
  payments                 String[]
  applied_payments         String[]
  memo                     String?
  currency                 String?
  exchange_rate            String?
  id_acc_company_info      String    @db.Uuid
  journal_number           String?
  tracking_categories      String[]
  id_acc_accounting_period String?   @db.Uuid
  posting_status           String?
  remote_created_at        DateTime? @db.Timestamptz(6)
  remote_modiified_at      DateTime? @db.Timestamptz(6)
  id_connection            String    @db.Uuid
  remote_id                String
  created_at               DateTime  @db.Timestamptz(6)
  modified_at              DateTime  @db.Timestamptz(6)

  @@index([id_acc_accounting_period], map: "fk_journal_entry_accounting_period")
  @@index([id_acc_company_info], map: "fk_journal_entry_companyinfo")
}

model acc_journal_entries_lines {
  id_acc_journal_entries_line String   @id(map: "pk_acc_journal_entries_lines") @db.Uuid
  net_amount                  BigInt?
  tracking_categories         String[]
  currency                    String?
  description                 String?
  company                     String?  @db.Uuid
  contact                     String?  @db.Uuid
  exchange_rate               String?
  remote_id                   String?
  created_at                  DateTime @db.Timestamptz(6)
  modified_at                 DateTime @db.Timestamptz(6)
  id_acc_journal_entry        String   @db.Uuid

  @@index([id_acc_journal_entry], map: "fk_journal_entries_entries_lines")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_payments {
  id_acc_payment           String    @id(map: "pk_acc_payments") @db.Uuid
  id_acc_invoice           String?   @db.Uuid
  transaction_date         DateTime? @db.Timestamptz(6)
  id_acc_contact           String?   @db.Uuid
  id_acc_account           String?   @db.Uuid
  currency                 String?
  exchange_rate            String?
  total_amount             BigInt?
  remote_id                String?
  type                     String?
  remote_updated_at        DateTime? @db.Timestamptz(6)
  id_acc_company_info      String?   @db.Uuid
  id_acc_accounting_period String?   @db.Uuid
  created_at               DateTime  @db.Timestamptz(6)
  modified_at              DateTime  @db.Timestamptz(6)
  id_connection            String    @db.Uuid
  tracking_categories      String[]

  @@index([id_acc_account], map: "fk_acc_payment_acc_account_index")
  @@index([id_acc_company_info], map: "fk_acc_payment_acc_company_index")
  @@index([id_acc_contact], map: "fk_acc_payment_acc_contact")
  @@index([id_acc_accounting_period], map: "fk_acc_payment_accounting_period_index")
  @@index([id_acc_invoice], map: "fk_acc_payment_invoiceid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_payments_line_items {
  acc_payments_line_item String    @id(map: "pk_acc_payments_line_items") @db.Uuid
  id_acc_payment         String    @db.Uuid
  applied_amount         BigInt?
  applied_date           DateTime? @db.Timestamptz(6)
  related_object_id      String?   @db.Uuid
  related_object_type    String?
  remote_id              String?
  created_at             DateTime  @db.Timestamptz(6)
  modified_at            DateTime  @db.Timestamptz(6)
  id_connection          String    @db.Uuid

  @@index([id_acc_payment], map: "fk_acc_payment_line_items_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_phone_numbers {
  id_acc_phone_number String   @id(map: "pk_acc_phone_numbers") @db.Uuid
  number              String?
  type                String?
  remote_id           String?
  created_at          DateTime @db.Timestamptz(6)
  modified_at         DateTime @db.Timestamptz(6)
  id_acc_company_info String?  @db.Uuid
  id_acc_contact      String   @db.Uuid
  id_connection       String   @db.Uuid

  @@index([id_acc_contact], map: "fk_acc_phone_number_contact")
  @@index([id_acc_company_info], map: "fk_company_infos_phone_number")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_purchase_orders {
  id_acc_purchase_order    String    @id(map: "pk_acc_purchase_orders") @db.Uuid
  remote_id                String?
  status                   String?
  issue_date               DateTime? @db.Timestamptz(6)
  purchase_order_number    String?
  delivery_date            DateTime? @db.Timestamptz(6)
  delivery_address         String?   @db.Uuid
  customer                 String?   @db.Uuid
  vendor                   String?   @db.Uuid
  memo                     String?
  company                  String?   @db.Uuid
  total_amount             BigInt?
  currency                 String?
  exchange_rate            String?
  tracking_categories      String[]
  remote_created_at        DateTime? @db.Timestamptz(6)
  remote_updated_at        DateTime? @db.Timestamptz(6)
  created_at               DateTime  @db.Timestamptz(6)
  modified_at              DateTime  @db.Timestamptz(6)
  id_connection            String    @db.Uuid
  id_acc_accounting_period String?   @db.Uuid

  @@index([id_acc_accounting_period], map: "fk_purchaseorder_accountingperiod")
}

model acc_purchase_orders_line_items {
  id_acc_purchase_orders_line_item String   @id(map: "pk_acc_purchase_orders_line_items") @db.Uuid
  id_acc_purchase_order            String   @db.Uuid
  remote_id                        String?
  modified_at                      DateTime @db.Timestamptz(6)
  created_at                       DateTime @db.Timestamptz(6)
  description                      String?
  unit_price                       BigInt?
  quantity                         BigInt?
  tracking_categories              String[]
  tax_amount                       BigInt?
  total_line_amount                BigInt?
  currency                         String?
  exchange_rate                    String?
  id_acc_account                   String?  @db.Uuid
  id_acc_company                   String?  @db.Uuid

  @@index([id_acc_purchase_order], map: "fk_purchaseorder_purchaseorderlineitems")
}

model acc_report_items {
  id_acc_report_item String   @id(map: "pk_acc_report_items") @db.Uuid
  name               String?
  value              BigInt?
  company            String?  @db.Uuid
  parent_item        String?  @db.Uuid
  remote_id          String?
  created_at         DateTime @db.Timestamptz(6)
  modified_at        DateTime @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_tax_rates {
  id_acc_tax_rate    String   @id(map: "pk_acc_tax_rates") @db.Uuid
  remote_id          String?
  description        String?
  total_tax_ratge    BigInt?
  effective_tax_rate BigInt?
  company            String?  @db.Uuid
  id_connection      String   @db.Uuid
  created_at         DateTime @db.Timestamptz(6)
  modified_at        DateTime @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_tracking_categories {
  id_acc_tracking_category String   @id(map: "pk_acc_tracking_categories") @db.Uuid
  remote_id                String?
  name                     String?
  status                   String?
  category_type            String?
  parent_category          String?  @db.Uuid
  created_at               DateTime @db.Timestamptz(6)
  modified_at              DateTime @db.Timestamptz(6)
  id_connection            String   @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_transactions {
  id_acc_transaction       String    @id(map: "pk_acc_transactions") @db.Uuid
  transaction_type         String?
  number                   BigInt?
  transaction_date         DateTime? @db.Timestamptz(6)
  total_amount             String?
  exchange_rate            String?
  currency                 String?
  tracking_categories      String[]
  id_acc_account           String?   @db.Uuid
  id_acc_contact           String?   @db.Uuid
  id_acc_company_info      String?   @db.Uuid
  id_acc_accounting_period String?   @db.Uuid
  remote_id                String
  created_at               DateTime  @db.Timestamptz(6)
  modified_at              DateTime  @db.Timestamptz(6)
  id_connection            String    @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_transactions_lines_items {
  id_acc_transactions_lines_item String   @id(map: "pk_acc_transactions_lines_items") @db.Uuid
  memo                           String?
  unit_price                     String?
  quantity                       String?
  total_line_amount              String?
  id_acc_tax_rate                String?  @db.Uuid
  currency                       String?
  exchange_rate                  String?
  tracking_categories            String[]
  id_acc_company_info            String?  @db.Uuid
  id_acc_item                    String?  @db.Uuid
  id_acc_account                 String?  @db.Uuid
  remote_id                      String?
  created_at                     DateTime @db.Timetz(6)
  modified_at                    DateTime @db.Timetz(6)
  id_acc_transaction             String?  @db.Uuid

  @@index([id_acc_transaction], map: "fk_acc_transactions_lineitems")
}

model acc_vendor_credit_lines {
  id_acc_vendor_credit_line String   @id(map: "pk_acc_vendor_credit_lines") @db.Uuid
  net_amount                BigInt?
  tracking_categories       String[]
  description               String?
  account                   String?  @db.Uuid
  id_acc_account            String?  @db.Uuid
  exchange_rate             String?
  id_acc_company_info       String?  @db.Uuid
  remote_id                 String?
  created_at                DateTime @db.Timestamptz(6)
  modified_at               DateTime @db.Timestamptz(6)
  id_acc_vendor_credit      String?  @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acc_vendor_credits {
  id_acc_vendor_credit String    @id(map: "pk_acc_vendor_credits") @db.Uuid
  id_connection        String    @db.Uuid
  remote_id            String?
  created_at           DateTime  @db.Timestamptz(6)
  modified_at          DateTime  @db.Timestamptz(6)
  number               String?
  transaction_date     DateTime? @db.Timestamptz(6)
  vendor               String?   @db.Uuid
  total_amount         BigInt?
  currency             String?
  exchange_rate        String?
  company              String?   @db.Uuid
  tracking_categories  String[]
  accounting_period    String?   @db.Uuid
}

model api_keys {
  id_api_key   String   @id(map: "id_") @db.Uuid
  api_key_hash String   @unique(map: "unique_api_keys")
  name         String?
  id_project   String   @db.Uuid
  id_user      String   @db.Uuid
  projects     projects @relation(fields: [id_project], references: [id_project], onDelete: NoAction, onUpdate: NoAction, map: "fk_api_key_project_id")
  users        users    @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_api_keys_user_id")

  @@index([id_project], map: "fk_api_keys_projects")
  @@index([id_user], map: "fkx_api_keys_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_activities {
  id_ats_activity   String    @id(map: "pk_ats_activities") @db.Uuid
  activity_type     String?
  subject           String?
  body              String?
  visibility        String?
  id_ats_candidate  String?   @db.Uuid
  remote_id         String?
  remote_created_at DateTime? @db.Timestamptz(6)
  created_at        DateTime  @db.Timestamptz(6)
  modified_at       DateTime  @db.Timestamptz(6)
  id_connection     String    @db.Uuid

  @@index([id_ats_candidate], map: "fk_activity_candidate")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_applications {
  id_ats_application String    @id(map: "pk_ats_applications") @db.Uuid
  remote_id          String?
  applied_at         DateTime? @db.Timestamptz(6)
  rejected_at        DateTime? @db.Timestamptz(6)
  offers             String[]
  source             String?
  credited_to        String?   @db.Uuid
  current_stage      String?   @db.Uuid
  reject_reason      String?
  id_ats_candidate   String?   @db.Uuid
  id_ats_job         String?   @db.Uuid
  created_at         DateTime  @db.Timestamptz(6)
  modified_at        DateTime  @db.Timestamptz(6)
  id_connection      String    @db.Uuid

  @@index([id_ats_job], map: "fk_ats_application_ats_job_id")
  @@index([id_ats_candidate], map: "fk_ats_application_atscandidateid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_candidate_attachments {
  id_ats_candidate_attachment String    @id(map: "pk_ats_candidate_attachments") @db.Uuid
  remote_id                   String?
  file_url                    String?
  file_name                   String?
  remote_created_at           DateTime? @db.Timestamptz(6)
  remote_modified_at          DateTime? @db.Timestamptz(6)
  file_type                   String?
  created_at                  DateTime  @db.Timestamptz(6)
  modified_at                 DateTime  @db.Timestamptz(6)
  id_ats_candidate            String    @db.Uuid
  id_connection               String    @db.Uuid

  @@index([id_ats_candidate], map: "fk_ats_candidate_attachment_candidateid_index")
}

model ats_candidate_email_addresses {
  id_ats_candidate_email_address String   @id(map: "pk_ats_candidate_email_addresses") @db.Uuid
  value                          String?
  type                           String?
  created_at                     DateTime @db.Timestamptz(6)
  modified_at                    DateTime @db.Timestamptz(6)
  id_ats_candidate               String   @db.Uuid

  @@index([id_ats_candidate], map: "fk_candidate_email_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_candidate_phone_numbers {
  id_ats_candidate_phone_number String   @id(map: "pk_ats_candidate_phone_numbers") @db.Uuid
  value                         String?
  type                          String?
  created_at                    DateTime @db.Timestamptz(6)
  modified_at                   DateTime @db.Timestamptz(6)
  id_ats_candidate              String   @db.Uuid

  @@index([id_ats_candidate], map: "fk_candidate_phone_id")
}

model ats_candidate_tags {
  id_ats_candidate_tag String   @id(map: "pk_ats_candidate_tags") @db.Uuid
  name                 String?
  remote_id            String?
  created_at           DateTime @db.Timestamptz(6)
  modified_at          DateTime @db.Timestamptz(6)
  id_connection        String   @db.Uuid
}

model ats_candidate_urls {
  id_ats_candidate_url String   @id(map: "pk_ats_candidate_urls") @db.Uuid
  value                String?
  type                 String?
  created_at           DateTime @db.Timestamptz(6)
  modified_at          DateTime @db.Timestamptz(6)
  id_ats_candidate     String   @db.Uuid

  @@index([id_ats_candidate], map: "fk_candidate_url_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_candidates {
  id_ats_candidate    String    @id(map: "pk_ats_candidates") @db.Uuid
  remote_id           String?
  created_at          DateTime  @db.Timestamptz(6)
  modified_at         DateTime  @db.Timestamptz(6)
  first_name          String?
  last_name           String?
  company             String?
  title               String?
  remote_created_at   DateTime? @db.Timestamptz(6)
  remote_modified_at  DateTime? @db.Timestamptz(6)
  last_interaction_at DateTime? @db.Timestamptz(6)
  is_private          Boolean?
  email_reachable     Boolean?
  locations           String?
  tags                String[]
  id_connection       String    @db.Uuid
}

model ats_departments {
  id_ats_department String   @id(map: "pk_ats_departments") @db.Uuid
  name              String?
  remote_id         String?
  created_at        DateTime @db.Timestamptz(6)
  modified_at       DateTime @db.Timestamptz(6)
  id_connection     String   @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_eeocs {
  id_ats_eeoc       String    @id(map: "pk_ats_eeocs") @db.Uuid
  id_ats_candidate  String?   @db.Uuid
  submitted_at      DateTime? @db.Timestamptz(6)
  race              String?
  gender            String?
  veteran_status    String?
  disability_status String?
  remote_id         String?
  created_at        DateTime  @db.Timestamptz(6)
  modified_at       DateTime  @db.Timestamptz(6)
  id_connection     String    @db.Uuid

  @@index([id_ats_candidate], map: "fk_candidate_eeocsid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_interviews {
  id_ats_interview           String    @id(map: "pk_ats_interviews") @db.Uuid
  status                     String?
  organized_by               String?   @db.Uuid
  interviewers               String[]
  location                   String?
  start_at                   DateTime? @db.Timestamptz(6)
  end_at                     DateTime? @db.Timestamptz(6)
  remote_created_at          DateTime? @db.Timestamptz(6)
  remote_updated_at          DateTime? @db.Timestamptz(6)
  remote_id                  String?
  id_ats_application         String?   @db.Uuid
  id_ats_job_interview_stage String?   @db.Uuid
  created_at                 DateTime  @db.Timestamptz(6)
  modified_at                DateTime  @db.Timestamptz(6)
  id_connection              String    @db.Uuid

  @@index([id_ats_application], map: "fk_applications_interviews")
  @@index([id_ats_job_interview_stage], map: "fk_id_ats_job_interview_stageid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_job_interview_stages {
  id_ats_job_interview_stage String   @id(map: "pk_ats_job_interview_stages") @db.Uuid
  name                       String?
  stage_order                Int?
  remote_id                  String?
  created_at                 DateTime @db.Timestamptz(6)
  modified_at                DateTime @db.Timestamptz(6)
  id_ats_job                 String?  @db.Uuid
  id_connection              String   @db.Uuid

  @@index([id_ats_job], map: "fk_ats_jobs_ats_jobinterview_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_jobs {
  id_ats_job        String    @id(map: "pk_ats_jobs") @db.Uuid
  name              String?
  description       String?
  code              String?
  status            String?
  type              String?
  confidential      Boolean?
  ats_departments   String[]
  ats_offices       String[]
  managers          String[]
  recruiters        String[]
  remote_id         String?
  remote_created_at DateTime? @db.Timestamptz(6)
  remote_updated_at DateTime? @db.Timestamptz(6)
  created_at        DateTime  @db.Timestamptz(6)
  modified_at       DateTime  @db.Timestamptz(6)
  id_connection     String    @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_offers {
  id_ats_offer       String    @id(map: "pk_ats_offers") @db.Uuid
  remote_id          String?
  created_by         String?   @db.Uuid
  remote_created_at  DateTime? @db.Timestamptz(6)
  closed_at          DateTime? @db.Timestamptz(6)
  sent_at            DateTime? @db.Timestamptz(6)
  start_date         DateTime? @db.Timestamptz(6)
  status             String?
  created_at         DateTime  @db.Timestamptz(6)
  modified_at        DateTime  @db.Timestamptz(6)
  id_ats_application String    @db.Uuid
  id_connection      String    @db.Uuid

  @@index([id_ats_application], map: "fk_ats_offers_applicationid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_offices {
  id_ats_office String   @id(map: "pk_ats_offices") @db.Uuid
  remote_id     String?
  created_at    DateTime @db.Timestamptz(6)
  modified_at   DateTime @db.Timestamptz(6)
  name          String?
  location      String?
  id_connection String   @db.Uuid
}

model ats_reject_reasons {
  id_ats_reject_reason String   @id(map: "pk_ats_reject_reasons") @db.Uuid
  name                 String?
  remote_id            String?
  modified_at          DateTime @db.Timestamptz(6)
  created_at           DateTime @db.Timestamptz(6)
  id_connection        String   @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_scorecards {
  id_ats_scorecard       String    @id(map: "pk_ats_scorecards") @db.Uuid
  overall_recommendation String?
  id_ats_application     String?   @db.Uuid
  id_ats_interview       String?   @db.Uuid
  remote_id              String?
  remote_created_at      DateTime? @db.Timestamptz(6)
  submitted_at           DateTime? @db.Timestamptz(6)
  created_at             DateTime  @db.Timestamptz(6)
  modified_at            DateTime  @db.Timestamptz(6)
  id_connection          String    @db.Uuid

  @@index([id_ats_application], map: "fk_applications_scorecard")
  @@index([id_ats_interview], map: "fk_interviews_scorecards")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ats_users {
  id_ats_user        String    @id(map: "pk_ats_users") @db.Uuid
  remote_id          String?
  first_name         String?
  last_name          String?
  email              String?
  disabled           Boolean?
  access_role        String?
  remote_created_at  DateTime? @db.Timestamp(6)
  remote_modified_at DateTime? @db.Timestamp(6)
  created_at         DateTime  @db.Timestamp(6)
  modified_at        DateTime  @db.Timestamp(6)
  id_connection      String    @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model attribute {
  id_attribute         String   @id(map: "pk_attribute") @db.Uuid
  status               String
  ressource_owner_type String
  slug                 String
  description          String
  data_type            String
  remote_id            String
  source               String
  id_entity            String?  @db.Uuid
  id_project           String   @db.Uuid
  scope                String
  id_consumer          String?  @db.Uuid
  created_at           DateTime @db.Timestamptz(6)
  modified_at          DateTime @db.Timestamptz(6)
  entity               entity?  @relation(fields: [id_entity], references: [id_entity], onDelete: NoAction, onUpdate: NoAction, map: "fk_32")
  value                value[]

  @@index([id_entity], map: "fk_attribute_entityid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model connection_strategies {
  id_connection_strategy String  @id(map: "pk_connection_strategies") @db.Uuid
  status                 Boolean
  type                   String
  id_project             String? @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model connections {
  id_connection                    String                             @id(map: "pk_connections") @db.Uuid
  status                           String
  provider_slug                    String
  vertical                         String
  account_url                      String?
  token_type                       String
  access_token                     String?
  refresh_token                    String?
  expiration_timestamp             DateTime?                          @db.Timestamptz(6)
  created_at                       DateTime                           @db.Timestamptz(6)
  connection_token                 String?
  id_project                       String                             @db.Uuid
  id_linked_user                   String                             @db.Uuid
  linked_users                     linked_users                       @relation(fields: [id_linked_user], references: [id_linked_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_11")
  projects                         projects                           @relation(fields: [id_project], references: [id_project], onDelete: NoAction, onUpdate: NoAction, map: "fk_9")
  vertical_objects_sync_track_data vertical_objects_sync_track_data[]

  @@index([id_project], map: "fk_1")
  @@index([id_linked_user], map: "fk_connections_to_linkedusersid")
}

model connector_sets {
  id_connector_set           String     @id(map: "pk_project_connector") @db.Uuid
  crm_hubspot                Boolean?
  crm_zoho                   Boolean?
  crm_attio                  Boolean?
  crm_pipedrive              Boolean?
  tcg_zendesk                Boolean?
  tcg_jira                   Boolean?
  tcg_gorgias                Boolean?
  tcg_gitlab                 Boolean?
  tcg_front                  Boolean?
  crm_zendesk                Boolean?
  crm_close                  Boolean?
  fs_box                     Boolean?
  tcg_github                 Boolean?
  hris_gusto                 Boolean?
  hris_deel                  Boolean?
  hris_sage                  Boolean?
  ecom_woocommerce           Boolean?
  ecom_shopify               Boolean?
  ecom_amazon                Boolean?
  ecom_squarespace           Boolean?
  tcg_linear                 Boolean?
  ats_ashby                  Boolean?
  ecom_webflow               Boolean?
  crm_microsoftdynamicssales Boolean?
  fs_dropbox                 Boolean?
  fs_googledrive             Boolean?
  fs_sharepoint              Boolean?
  fs_onedrive                Boolean?
  crm_salesforce             Boolean?
  projects                   projects[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model crm_addresses {
  id_crm_address String         @id(map: "pk_crm_addresses") @db.Uuid
  street_1       String?
  street_2       String?
  city           String?
  state          String?
  postal_code    String?
  country        String?
  address_type   String?
  id_crm_company String?        @db.Uuid
  id_crm_contact String?        @db.Uuid
  id_connection  String         @db.Uuid
  created_at     DateTime       @db.Timestamptz(6)
  modified_at    DateTime       @db.Timestamptz(6)
  owner_type     String
  crm_contacts   crm_contacts?  @relation(fields: [id_crm_contact], references: [id_crm_contact], onDelete: NoAction, onUpdate: NoAction, map: "fk_14")
  crm_companies  crm_companies? @relation(fields: [id_crm_company], references: [id_crm_company], onDelete: NoAction, onUpdate: NoAction, map: "fk_15")

  @@index([id_crm_contact], map: "fk_crm_addresses_to_crm_contacts")
  @@index([id_crm_company], map: "fk_crm_adresses_to_crm_companies")
}

model crm_companies {
  id_crm_company      String                @id(map: "pk_crm_companies") @db.Uuid
  name                String?
  industry            String?
  number_of_employees BigInt?
  created_at          DateTime              @db.Timestamptz(6)
  modified_at         DateTime              @db.Timestamptz(6)
  remote_id           String?
  remote_platform     String?
  id_crm_user         String?               @db.Uuid
  id_linked_user      String?               @db.Uuid
  id_connection       String                @db.Uuid
  crm_addresses       crm_addresses[]
  crm_users           crm_users?            @relation(fields: [id_crm_user], references: [id_crm_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_24")
  crm_deals           crm_deals[]
  crm_email_addresses crm_email_addresses[]
  crm_engagements     crm_engagements[]
  crm_notes           crm_notes[]
  crm_phone_numbers   crm_phone_numbers[]
  crm_tasks           crm_tasks[]

  @@index([id_crm_user], map: "fk_crm_company_crm_userid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model crm_contacts {
  id_crm_contact      String                @id(map: "pk_crm_contacts") @db.Uuid
  first_name          String?
  last_name           String?
  created_at          DateTime?             @db.Timestamptz(6)
  modified_at         DateTime?             @db.Timestamptz(6)
  remote_id           String?
  remote_platform     String?
  id_crm_user         String?               @db.Uuid
  id_linked_user      String?               @db.Uuid
  id_connection       String                @db.Uuid
  crm_addresses       crm_addresses[]
  crm_users           crm_users?            @relation(fields: [id_crm_user], references: [id_crm_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_23")
  crm_email_addresses crm_email_addresses[]
  crm_notes           crm_notes[]
  crm_phone_numbers   crm_phone_numbers[]

  @@index([id_crm_user], map: "fk_crm_contact_userid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model crm_deals {
  id_crm_deal        String            @id(map: "pk_crm_deal") @db.Uuid
  name               String
  description        String?
  amount             BigInt
  created_at         DateTime          @db.Timestamptz(6)
  modified_at        DateTime          @db.Timestamptz(6)
  remote_id          String?
  remote_platform    String?
  id_crm_user        String?           @db.Uuid
  id_crm_deals_stage String?           @db.Uuid
  id_linked_user     String?           @db.Uuid
  id_crm_company     String?           @db.Uuid
  id_connection      String            @db.Uuid
  crm_deals_stages   crm_deals_stages? @relation(fields: [id_crm_deals_stage], references: [id_crm_deals_stage], onDelete: NoAction, onUpdate: NoAction, map: "fk_21")
  crm_users          crm_users?        @relation(fields: [id_crm_user], references: [id_crm_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_22")
  crm_companies      crm_companies?    @relation(fields: [id_crm_company], references: [id_crm_company], onDelete: NoAction, onUpdate: NoAction, map: "fk_47_1")
  crm_notes          crm_notes[]
  crm_tasks          crm_tasks[]

  @@index([id_crm_user], map: "crm_deal_crm_userid")
  @@index([id_crm_deals_stage], map: "crm_deal_deal_stageid")
  @@index([id_crm_company], map: "fk_crm_deal_crmcompanyid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model crm_email_addresses {
  id_crm_email       String         @id(map: "pk_crm_contact_email_addresses") @db.Uuid
  email_address      String
  email_address_type String
  owner_type         String
  created_at         DateTime       @db.Timestamptz(6)
  modified_at        DateTime       @db.Timestamptz(6)
  id_crm_company     String?        @db.Uuid
  id_crm_contact     String?        @db.Uuid
  id_connection      String         @db.Uuid
  crm_companies      crm_companies? @relation(fields: [id_crm_company], references: [id_crm_company], onDelete: NoAction, onUpdate: NoAction, map: "fk_16")
  crm_contacts       crm_contacts?  @relation(fields: [id_crm_contact], references: [id_crm_contact], onDelete: NoAction, onUpdate: NoAction, map: "fk_3")

  @@index([id_crm_contact], map: "crm_contactid_crm_contact_email_address")
  @@index([id_crm_company], map: "fk_contact_email_adress_companyid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model crm_engagements {
  id_crm_engagement String         @id(map: "pk_crm_engagement") @db.Uuid
  content           String?
  type              String?
  direction         String?
  subject           String?
  start_at          DateTime?      @db.Timestamptz(6)
  end_time          DateTime?      @db.Timestamptz(6)
  remote_id         String?
  id_linked_user    String?        @db.Uuid
  remote_platform   String?
  id_crm_company    String?        @db.Uuid
  id_crm_user       String?        @db.Uuid
  id_connection     String         @db.Uuid
  contacts          String[]
  created_at        DateTime       @db.Timestamptz(6)
  modified_at       DateTime       @db.Timestamptz(6)
  crm_companies     crm_companies? @relation(fields: [id_crm_company], references: [id_crm_company], onDelete: NoAction, onUpdate: NoAction, map: "fk_29")
  crm_users         crm_users?     @relation(fields: [id_crm_user], references: [id_crm_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_crm_engagement_crm_user")

  @@index([id_crm_user], map: "fk_crm_engagement_crm_user_id")
  @@index([id_crm_company], map: "fk_crm_engagement_crmcompanyid")
}

model crm_notes {
  id_crm_note     String         @id(map: "pk_crm_notes") @db.Uuid
  content         String
  created_at      DateTime       @db.Timestamptz(6)
  modified_at     DateTime       @db.Timestamptz(6)
  id_crm_company  String?        @db.Uuid
  id_crm_contact  String?        @db.Uuid
  id_crm_deal     String?        @db.Uuid
  id_linked_user  String?        @db.Uuid
  remote_id       String?
  remote_platform String?
  id_crm_user     String?        @db.Uuid
  id_connection   String         @db.Uuid
  crm_companies   crm_companies? @relation(fields: [id_crm_company], references: [id_crm_company], onDelete: NoAction, onUpdate: NoAction, map: "fk_18")
  crm_contacts    crm_contacts?  @relation(fields: [id_crm_contact], references: [id_crm_contact], onDelete: NoAction, onUpdate: NoAction, map: "fk_19")
  crm_deals       crm_deals?     @relation(fields: [id_crm_deal], references: [id_crm_deal], onDelete: NoAction, onUpdate: NoAction, map: "fk_20")

  @@index([id_crm_contact], map: "fk_crm_note_crm_companyid")
  @@index([id_crm_company], map: "fk_crm_note_crm_contactid")
  @@index([id_crm_user], map: "fk_crm_note_crm_userid")
  @@index([id_crm_deal], map: "fk_crm_notes_crm_dealid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model crm_phone_numbers {
  id_crm_phone_number String         @id(map: "pk_crm_contacts_phone_numbers") @db.Uuid
  phone_number        String?
  phone_type          String?
  owner_type          String?
  created_at          DateTime       @db.Timestamptz(6)
  modified_at         DateTime       @db.Timestamptz(6)
  id_crm_company      String?        @db.Uuid
  id_crm_contact      String?        @db.Uuid
  id_connection       String         @db.Uuid
  crm_companies       crm_companies? @relation(fields: [id_crm_company], references: [id_crm_company], onDelete: NoAction, onUpdate: NoAction, map: "fk_17")
  crm_contacts        crm_contacts?  @relation(fields: [id_crm_contact], references: [id_crm_contact], onDelete: NoAction, onUpdate: NoAction, map: "fk_phonenumber_crm_contactid")

  @@index([id_crm_contact], map: "crm_contactid_crm_contact_phone_number")
  @@index([id_crm_company], map: "fk_phone_number_companyid")
}

model crm_tasks {
  id_crm_task     String         @id(map: "pk_crm_task") @db.Uuid
  subject         String?
  content         String?
  status          String?
  due_date        DateTime?      @db.Timestamptz(6)
  finished_date   DateTime?      @db.Timestamptz(6)
  created_at      DateTime       @db.Timestamptz(6)
  modified_at     DateTime       @db.Timestamptz(6)
  id_crm_user     String?        @db.Uuid
  id_crm_company  String?        @db.Uuid
  id_crm_deal     String?        @db.Uuid
  id_linked_user  String?        @db.Uuid
  remote_id       String?
  remote_platform String?
  id_connection   String         @db.Uuid
  crm_users       crm_users?     @relation(fields: [id_crm_user], references: [id_crm_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_25")
  crm_companies   crm_companies? @relation(fields: [id_crm_company], references: [id_crm_company], onDelete: NoAction, onUpdate: NoAction, map: "fk_26")
  crm_deals       crm_deals?     @relation(fields: [id_crm_deal], references: [id_crm_deal], onDelete: NoAction, onUpdate: NoAction, map: "fk_27")

  @@index([id_crm_company], map: "fk_crm_task_companyid")
  @@index([id_crm_user], map: "fk_crm_task_userid")
  @@index([id_crm_deal], map: "fk_crmtask_dealid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ecom_addresses {
  id_ecom_address  String         @id(map: "pk_ecom_customer_addresses") @db.Uuid
  address_type     String?
  street_1         String?
  street_2         String?
  city             String?
  state            String?
  postal_code      String?
  country          String?
  id_ecom_customer String         @db.Uuid
  modified_at      DateTime       @db.Timestamptz(6)
  created_at       DateTime       @db.Timestamptz(6)
  remote_deleted   Boolean
  id_ecom_order    String         @db.Uuid
  ecom_customers   ecom_customers @relation(fields: [id_ecom_customer], references: [id_ecom_customer], onDelete: NoAction, onUpdate: NoAction, map: "fk_ecom_customer_customeraddress")
  ecom_orders      ecom_orders    @relation(fields: [id_ecom_order], references: [id_ecom_order], onDelete: NoAction, onUpdate: NoAction, map: "fk_ecom_order_address")

  @@index([id_ecom_customer], map: "fk_index_ecom_customer_customeraddress")
  @@index([id_ecom_order], map: "fk_index_fk_ecom_order_address")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ecom_fulfilments {
  id_ecom_fulfilment String       @id(map: "pk_ecom_fulfilments") @db.Uuid
  carrier            String?
  tracking_urls      String[]
  tracking_numbers   String[]
  items              Json?
  remote_id          String?
  id_ecom_order      String?      @db.Uuid
  id_connection      String       @db.Uuid
  modified_at        DateTime     @db.Timestamptz(6)
  created_at         DateTime     @db.Timestamptz(6)
  remote_deleted     Boolean
  ecom_orders        ecom_orders? @relation(fields: [id_ecom_order], references: [id_ecom_order], onDelete: NoAction, onUpdate: NoAction, map: "fk_ecom_order_fulfilment")

  @@index([id_ecom_order], map: "fk_index_ecom_order_fulfilment")
}

model ecom_orders {
  id_ecom_order      String             @id(map: "pk_ecom_orders") @db.Uuid
  order_status       String?
  order_number       String?
  payment_status     String?
  currency           String?
  total_price        BigInt?
  total_discount     BigInt?
  total_shipping     BigInt?
  total_tax          BigInt?
  fulfillment_status String?
  remote_id          String?
  id_ecom_customer   String?            @db.Uuid
  id_connection      String             @db.Uuid
  modified_at        DateTime           @db.Timestamptz(6)
  created_at         DateTime           @db.Timestamptz(6)
  remote_deleted     Boolean
  ecom_addresses     ecom_addresses[]
  ecom_fulfilments   ecom_fulfilments[]
  ecom_customers     ecom_customers?    @relation(fields: [id_ecom_customer], references: [id_ecom_customer], onDelete: NoAction, onUpdate: NoAction, map: "fk_ecom_customer_orders")

  @@index([id_ecom_customer], map: "fk_index_ecom_customer_orders")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ecom_product_variants {
  id_ecom_product_variant String         @id(map: "pk_ecom_product_variants") @db.Uuid
  id_connection           String         @db.Uuid
  remote_id               String?
  title                   String?
  price                   BigInt?
  sku                     String?
  options                 Json?
  weight                  BigInt?
  inventory_quantity      BigInt?
  id_ecom_product         String?        @db.Uuid
  modified_at             DateTime       @db.Timestamptz(6)
  created_at              DateTime       @db.Timestamptz(6)
  remote_deleted          Boolean
  ecom_products           ecom_products? @relation(fields: [id_ecom_product], references: [id_ecom_product], onDelete: NoAction, onUpdate: NoAction, map: "fk_ecom_products_variants")

  @@index([id_ecom_product], map: "fk_index_ecom_products_variants")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model events {
  id_event                  String                      @id(map: "pk_jobs") @db.Uuid
  id_connection             String?                     @db.Uuid
  id_project                String                      @db.Uuid
  type                      String
  status                    String
  direction                 String
  method                    String
  url                       String
  provider                  String
  timestamp                 DateTime                    @default(now()) @db.Timestamptz(6)
  id_linked_user            String?                     @db.Uuid
  linked_users              linked_users?               @relation(fields: [id_linked_user], references: [id_linked_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_12")
  jobs_status_history       jobs_status_history[]
  webhook_delivery_attempts webhook_delivery_attempts[]

  @@index([id_linked_user], map: "fk_linkeduserid_projectid")
}

model fs_files {
  id_fs_file       String   @id(map: "pk_fs_files") @db.Uuid
  name             String?
  file_url         String?
  mime_type        String?
  size             BigInt?
  remote_id        String?
  id_fs_permission String?  @db.Uuid
  id_fs_folder     String?  @db.Uuid
  created_at       DateTime @db.Timestamptz(6)
  modified_at      DateTime @db.Timestamptz(6)
  id_connection    String   @db.Uuid

  @@index([id_fs_folder], map: "fk_fs_file_folderid")
  @@index([id_fs_permission], map: "fk_fs_file_permissionid")
}

model fs_folders {
  id_fs_folder     String   @id(map: "pk_fs_folders") @db.Uuid
  folder_url       String?
  size             BigInt?
  name             String?
  description      String?
  parent_folder    String?  @db.Uuid
  remote_id        String?
  created_at       DateTime @db.Timestamptz(6)
  modified_at      DateTime @db.Timestamptz(6)
  id_fs_drive      String?  @db.Uuid
  id_connection    String   @db.Uuid
  id_fs_permission String?  @db.Uuid

  @@index([id_fs_drive], map: "fk_fs_folder_driveid")
  @@index([id_fs_permission], map: "fk_fs_folder_permissionid")
}

model hris_bank_infos {
  id_hris_bank_info  String          @id(map: "pk_hris_bank_infos") @db.Uuid
  account_type       String?
  bank_name          String?
  account_number     String?
  routing_number     String?
  remote_id          String?
  remote_created_at  DateTime?       @db.Timestamptz(6)
  created_at         DateTime        @db.Timestamptz(6)
  modified_at        DateTime        @db.Timestamptz(6)
  remote_was_deleted Boolean
  id_connection      String          @db.Uuid
  id_hris_employee   String?         @db.Uuid
  hris_employees     hris_employees? @relation(fields: [id_hris_employee], references: [id_hris_employee], onDelete: NoAction, onUpdate: NoAction, map: "fk_bank_infos_employeeid")

  @@index([id_hris_employee], map: "fkx_bank_infos_employeeid")
}

model hris_benefits {
  id_hris_benefit          String                  @id(map: "pk_hris_benefits") @db.Uuid
  remote_id                String?
  remote_created_at        DateTime?               @db.Timestamptz(6)
  created_at               DateTime                @db.Timestamptz(6)
  modified_at              DateTime                @db.Timestamptz(6)
  remote_was_deleted       Boolean
  id_connection            String                  @db.Uuid
  provider_name            String?
  id_hris_employee         String?                 @db.Uuid
  employee_contribution    BigInt?
  company_contribution     BigInt?
  start_date               DateTime?               @db.Timestamptz(6)
  end_date                 DateTime?               @db.Timestamptz(6)
  id_hris_employer_benefit String?                 @db.Uuid
  hris_employer_benefits   hris_employer_benefits? @relation(fields: [id_hris_employer_benefit], references: [id_hris_employer_benefit], onDelete: NoAction, onUpdate: NoAction, map: "fk_hris_benefit_employer_benefit_id")
  hris_employees           hris_employees?         @relation(fields: [id_hris_employee], references: [id_hris_employee], onDelete: NoAction, onUpdate: NoAction, map: "fk_hris_benefits_employeeid")

  @@index([id_hris_employer_benefit], map: "fkx_hris_benefit_employer_benefit_id")
  @@index([id_hris_employee], map: "fkx_hris_benefits_employeeid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model hris_dependents {
  id_hris_dependents String          @id(map: "pk_hris_dependents") @db.Uuid
  first_name         String?
  last_name          String?
  middle_name        String?
  relationship       String?
  date_of_birth      DateTime?       @db.Date
  gender             String?
  phone_number       String?
  home_location      String?         @db.Uuid
  is_student         Boolean?
  ssn                String?
  id_hris_employee   String?         @db.Uuid
  remote_id          String?
  remote_created_at  DateTime?       @db.Timestamptz(6)
  created_at         DateTime        @db.Timestamptz(6)
  modified_at        DateTime        @db.Timestamptz(6)
  remote_was_deleted Boolean
  id_connection      String          @db.Uuid
  hris_employees     hris_employees? @relation(fields: [id_hris_employee], references: [id_hris_employee], onDelete: NoAction, onUpdate: NoAction, map: "fk_hris_dependant_hris_employee_id")

  @@index([id_hris_employee], map: "fkx_hris_dependant_hris_employee_id")
}

model hris_employee_payroll_runs {
  id_hris_employee_payroll_run          String                                  @id(map: "pk_hris_employee_payroll_runs") @db.Uuid
  id_hris_employee                      String?                                 @db.Uuid
  id_hris_payroll_run                   String?                                 @db.Uuid
  gross_pay                             BigInt?
  net_pay                               BigInt?
  start_date                            DateTime?                               @db.Timestamptz(6)
  end_date                              DateTime?                               @db.Timestamptz(6)
  check_date                            DateTime?                               @db.Timestamptz(6)
  remote_id                             String?
  remote_created_at                     DateTime?                               @db.Timestamptz(6)
  created_at                            DateTime                                @db.Timestamptz(6)
  modified_at                           DateTime                                @db.Timestamptz(6)
  remote_was_deleted                    Boolean
  id_connection                         String                                  @db.Uuid
  hris_payroll_runs                     hris_payroll_runs?                      @relation(fields: [id_hris_payroll_run], references: [id_hris_payroll_run], onDelete: NoAction, onUpdate: NoAction, map: "fk_employee_payroll_run_payroll_run_id")
  hris_employees                        hris_employees?                         @relation(fields: [id_hris_employee], references: [id_hris_employee], onDelete: NoAction, onUpdate: NoAction, map: "fk_hris_employee_payroll_run_employee_id")
  hris_employee_payroll_runs_deductions hris_employee_payroll_runs_deductions[]
  hris_employee_payroll_runs_earnings   hris_employee_payroll_runs_earnings[]
  hris_employee_payroll_runs_taxes      hris_employee_payroll_runs_taxes[]

  @@index([id_hris_payroll_run], map: "fkx_employee_payroll_run_payroll_run_id")
  @@index([id_hris_employee], map: "fkx_hris_employee_payroll_run_employee_id")
}

model hris_employee_payroll_runs_deductions {
  id_hris_employee_payroll_runs_deduction String                      @id(map: "pk_hris_employee_payroll_runs_deductions") @db.Uuid
  remote_id                               String?
  created_at                              DateTime                    @db.Timestamptz(6)
  modified_at                             DateTime                    @db.Timestamptz(6)
  id_hris_employee_payroll_run            String?                     @db.Uuid
  name                                    String?
  employee_deduction                      BigInt?
  company_deduction                       BigInt?
  hris_employee_payroll_runs              hris_employee_payroll_runs? @relation(fields: [id_hris_employee_payroll_run], references: [id_hris_employee_payroll_run], onDelete: NoAction, onUpdate: NoAction, map: "fk_hris_employee_payroll_runs_deduction_hris_employee_payroll_i")

  @@index([id_hris_employee_payroll_run], map: "fkx_hris_employee_payroll_runs_deduction_hris_employee_payroll_")
}

model hris_employee_payroll_runs_earnings {
  id_hris_employee_payroll_runs_earning String                      @id(map: "pk_hris_employee_payroll_runs_earnings") @db.Uuid
  amount                                BigInt?
  type                                  String?
  id_hris_employee_payroll_run          String?                     @db.Uuid
  remote_id                             String?
  created_at                            DateTime                    @db.Timestamptz(6)
  modified_at                           DateTime                    @db.Timestamptz(6)
  hris_employee_payroll_runs            hris_employee_payroll_runs? @relation(fields: [id_hris_employee_payroll_run], references: [id_hris_employee_payroll_run], onDelete: NoAction, onUpdate: NoAction, map: "fk_hris_employee_payroll_runs_earning_hris_employee_payroll_run")

  @@index([id_hris_employee_payroll_run], map: "fkx_hris_employee_payroll_runs_earning_hris_employee_payroll_ru")
}

model hris_employee_payroll_runs_taxes {
  id_hris_employee_payroll_runs_tax String                      @id(map: "pk_hris_employee_payroll_runs_taxes") @db.Uuid
  name                              String?
  amount                            BigInt?
  employer_tax                      Boolean?
  id_hris_employee_payroll_run      String?                     @db.Uuid
  remote_id                         String?
  created_at                        DateTime                    @db.Timestamptz(6)
  modified_at                       DateTime                    @db.Timestamptz(6)
  hris_employee_payroll_runs        hris_employee_payroll_runs? @relation(fields: [id_hris_employee_payroll_run], references: [id_hris_employee_payroll_run], onDelete: NoAction, onUpdate: NoAction, map: "fk_hris_employee_payroll_run_tax_hris_employee_payroll_run_id")

  @@index([id_hris_employee_payroll_run], map: "fkx_hris_employee_payroll_run_tax_hris_employee_payroll_run_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model hris_employees {
  id_hris_employee           String                       @id(map: "pk_hris_employees") @db.Uuid
  remote_id                  String?
  remote_created_at          DateTime?                    @db.Timestamptz(6)
  created_at                 DateTime                     @db.Timestamptz(6)
  modified_at                DateTime                     @db.Timestamptz(6)
  remote_was_deleted         Boolean
  id_connection              String                       @db.Uuid
  manager                    String?                      @db.Uuid
  groups                     String[]
  employee_number            String?
  id_hris_company            String?                      @db.Uuid
  first_name                 String?
  last_name                  String?
  preferred_name             String?
  display_full_name          String?
  username                   String?
  work_email                 String?
  personal_email             String?
  mobile_phone_number        String?
  employments                String[]
  ssn                        String?
  gender                     String?
  ethnicity                  String?
  marital_status             String?
  date_of_birth              DateTime?                    @db.Date
  start_date                 DateTime?                    @db.Date
  employment_status          String?
  termination_date           DateTime?                    @db.Date
  avatar_url                 String?
  hris_bank_infos            hris_bank_infos[]
  hris_benefits              hris_benefits[]
  hris_dependents            hris_dependents[]
  hris_employee_payroll_runs hris_employee_payroll_runs[]
  hris_companies             hris_companies?              @relation(fields: [id_hris_company], references: [id_hris_company], onDelete: NoAction, onUpdate: NoAction, map: "fk_employee_companyid")
  hris_employments           hris_employments[]
  hris_time_off_balances     hris_time_off_balances[]
  hris_timesheet_entries     hris_timesheet_entries[]

  @@index([id_hris_company], map: "fkx_employee_companyid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model hris_employments {
  id_hris_employment String           @id(map: "pk_hris_employments") @db.Uuid
  job_title          String
  pay_rate           BigInt?
  pay_period         String?
  pay_frequency      String?
  pay_currency       String?
  flsa_status        String?
  effective_date     DateTime?        @db.Date
  employment_type    String?
  remote_id          String?
  remote_created_at  DateTime?        @db.Timestamptz(6)
  created_at         DateTime         @db.Timestamptz(6)
  modified_at        DateTime         @db.Timestamptz(6)
  remote_was_deleted Boolean
  id_connection      String           @db.Uuid
  id_hris_pay_group  String?          @db.Uuid
  id_hris_employee   String?          @db.Uuid
  hris_employees     hris_employees?  @relation(fields: [id_hris_employee], references: [id_hris_employee], onDelete: NoAction, onUpdate: NoAction, map: "fk_107")
  hris_pay_groups    hris_pay_groups? @relation(fields: [id_hris_pay_group], references: [id_hris_pay_group], onDelete: NoAction, onUpdate: NoAction, map: "fk_employments_pay_group_id")

  @@index([id_hris_employee], map: "fk_2")
  @@index([id_hris_pay_group], map: "fkx_employments_pay_group_id")
}

model hris_time_off_balances {
  id_hris_time_off_balance String          @id(map: "pk_hris_time_off_balances") @db.Uuid
  balance                  BigInt?
  id_hris_employee         String?         @db.Uuid
  used                     BigInt?
  policy_type              String?
  remote_id                String?
  remote_created_at        DateTime?       @db.Timestamptz(6)
  created_at               DateTime        @db.Timestamptz(6)
  modified_at              DateTime        @db.Timestamptz(6)
  remote_was_deleted       Boolean
  id_connection            String          @db.Uuid
  hris_employees           hris_employees? @relation(fields: [id_hris_employee], references: [id_hris_employee], onDelete: NoAction, onUpdate: NoAction, map: "fk_hris_timeoff_balance_hris_employee_id")

  @@index([id_hris_employee], map: "fkx_hris_timeoff_balance_hris_employee_id")
}

model hris_timesheet_entries {
  id_hris_timesheet_entry String          @id(map: "pk_hris_timesheet_entries") @db.Uuid
  hours_worked            BigInt?
  start_time              DateTime?       @db.Timestamptz(6)
  end_time                DateTime?       @db.Timestamptz(6)
  id_hris_employee        String?         @db.Uuid
  remote_id               String?
  remote_created_at       DateTime?       @db.Timestamptz(6)
  created_at              DateTime        @db.Timestamptz(6)
  modified_at             DateTime        @db.Timestamptz(6)
  remote_was_deleted      Boolean
  id_connection           String          @db.Uuid
  hris_employees          hris_employees? @relation(fields: [id_hris_employee], references: [id_hris_employee], onDelete: NoAction, onUpdate: NoAction, map: "fk_timesheet_entry_employee_id")

  @@index([id_hris_employee], map: "fkx_timesheet_entry_employee_id")
}

model invite_links {
  id_invite_link      String       @id(map: "pk_invite_links") @db.Uuid
  status              String
  email               String?
  id_linked_user      String       @db.Uuid
  displayed_verticals String[]
  displayed_providers String[]
  linked_users        linked_users @relation(fields: [id_linked_user], references: [id_linked_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_37")

  @@index([id_linked_user], map: "fk_invite_link_linkeduserid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model jobs_status_history {
  id_jobs_status_history String   @id(map: "pk_jobs_status_history") @db.Uuid
  timestamp              DateTime @default(now()) @db.Timestamptz(6)
  previous_status        String
  new_status             String
  id_event               String   @db.Uuid
  events                 events   @relation(fields: [id_event], references: [id_event], onDelete: NoAction, onUpdate: NoAction, map: "fk_4")

  @@index([id_event], map: "id_job_jobs_status_history")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model linked_users {
  id_linked_user        String         @id(map: "key_id_linked_users") @db.Uuid
  linked_user_origin_id String
  alias                 String
  id_project            String         @db.Uuid
  connections           connections[]
  events                events[]
  invite_links          invite_links[]
  projects              projects       @relation(fields: [id_project], references: [id_project], onDelete: NoAction, onUpdate: NoAction, map: "fk_10")

  @@index([id_project], map: "fk_proectid_linked_users")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model projects {
  id_project              String                   @id(map: "pk_projects") @db.Uuid
  name                    String
  sync_mode               String
  pull_frequency          BigInt?
  redirect_url            String?
  id_user                 String                   @db.Uuid
  id_connector_set        String                   @db.Uuid
  api_keys                api_keys[]
  connections             connections[]
  linked_users            linked_users[]
  users                   users                    @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_46_1")
  connector_sets          connector_sets           @relation(fields: [id_connector_set], references: [id_connector_set], onDelete: NoAction, onUpdate: NoAction, map: "fk_project_connectorsetid")
  projects_pull_frequency projects_pull_frequency?

  @@index([id_connector_set], map: "fk_connectors_sets")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tcg_attachments {
  id_tcg_attachment String        @id(map: "pk_tcg_attachments") @db.Uuid
  remote_id         String?
  remote_platform   String?
  file_name         String?
  file_url          String?
  uploader          String        @db.Uuid
  created_at        DateTime      @db.Timestamptz(6)
  modified_at       DateTime      @db.Timestamptz(6)
  id_linked_user    String?       @db.Uuid
  id_tcg_ticket     String?       @db.Uuid
  id_tcg_comment    String?       @db.Uuid
  id_connection     String        @db.Uuid
  tcg_tickets       tcg_tickets?  @relation(fields: [id_tcg_ticket], references: [id_tcg_ticket], onDelete: NoAction, onUpdate: NoAction, map: "fk_50")
  tcg_comments      tcg_comments? @relation(fields: [id_tcg_comment], references: [id_tcg_comment], onDelete: NoAction, onUpdate: NoAction, map: "fk_51")

  @@index([id_tcg_comment], map: "fk_tcg_attachment_tcg_commentid")
  @@index([id_tcg_ticket], map: "fk_tcg_attachment_tcg_ticketid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tcg_comments {
  id_tcg_comment    String            @id(map: "pk_tcg_comments") @db.Uuid
  body              String?
  html_body         String?
  is_private        Boolean?
  remote_id         String?
  remote_platform   String?
  creator_type      String?
  id_tcg_attachment String[]
  id_tcg_ticket     String?           @db.Uuid
  id_tcg_contact    String?           @db.Uuid
  id_tcg_user       String?           @db.Uuid
  id_linked_user    String?           @db.Uuid
  created_at        DateTime?         @db.Timestamptz(6)
  modified_at       DateTime?         @db.Timestamptz(6)
  id_connection     String            @db.Uuid
  tcg_attachments   tcg_attachments[]
  tcg_tickets       tcg_tickets?      @relation(fields: [id_tcg_ticket], references: [id_tcg_ticket], onDelete: NoAction, onUpdate: NoAction, map: "fk_40_1")
  tcg_contacts      tcg_contacts?     @relation(fields: [id_tcg_contact], references: [id_tcg_contact], onDelete: NoAction, onUpdate: NoAction, map: "fk_41")
  tcg_users         tcg_users?        @relation(fields: [id_tcg_user], references: [id_tcg_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_42")

  @@index([id_tcg_contact], map: "fk_tcg_comment_tcg_contact")
  @@index([id_tcg_ticket], map: "fk_tcg_comment_tcg_ticket")
  @@index([id_tcg_user], map: "fk_tcg_comment_tcg_userid")
}

model tcg_contacts {
  id_tcg_contact  String         @id(map: "pk_tcg_contact") @db.Uuid
  name            String?
  email_address   String?
  phone_number    String?
  details         String?
  remote_id       String?
  remote_platform String?
  created_at      DateTime?      @db.Timestamptz(6)
  modified_at     DateTime?      @db.Timestamptz(6)
  id_tcg_account  String?        @db.Uuid
  id_linked_user  String?        @db.Uuid
  id_connection   String         @db.Uuid
  tcg_comments    tcg_comments[]
  tcg_accounts    tcg_accounts?  @relation(fields: [id_tcg_account], references: [id_tcg_account], onDelete: NoAction, onUpdate: NoAction, map: "fk_49")

  @@index([id_tcg_account], map: "fk_tcg_contact_tcg_account_id")
}

model tcg_tags {
  id_tcg_tag      String       @id(map: "pk_tcg_tags") @db.Uuid
  name            String?
  remote_id       String?
  remote_platform String?
  id_tcg_ticket   String?      @db.Uuid
  created_at      DateTime     @db.Timestamptz(6)
  modified_at     DateTime     @db.Timestamptz(6)
  id_linked_user  String?      @db.Uuid
  id_connection   String       @db.Uuid
  tcg_tickets     tcg_tickets? @relation(fields: [id_tcg_ticket], references: [id_tcg_ticket], onDelete: NoAction, onUpdate: NoAction, map: "fk_48")

  @@index([id_tcg_ticket], map: "fk_tcg_tag_tcg_ticketid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tcg_tickets {
  id_tcg_ticket   String            @id(map: "pk_tcg_tickets") @db.Uuid
  name            String?
  status          String?
  description     String?
  due_date        DateTime?         @db.Timestamptz(6)
  ticket_type     String?
  parent_ticket   String?           @db.Uuid
  tags            String[]
  collections     String[]
  completed_at    DateTime?         @db.Timestamptz(6)
  priority        String?
  assigned_to     String[]
  remote_id       String?
  remote_platform String?
  creator_type    String?
  id_tcg_user     String?           @db.Uuid
  id_linked_user  String?           @db.Uuid
  created_at      DateTime          @db.Timestamptz(6)
  modified_at     DateTime          @db.Timestamptz(6)
  id_connection   String            @db.Uuid
  tcg_attachments tcg_attachments[]
  tcg_comments    tcg_comments[]
  tcg_tags        tcg_tags[]

  @@index([id_tcg_user], map: "fk_tcg_ticket_tcg_user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model value {
  id_value     String    @id(map: "pk_value") @db.Uuid
  data         String
  id_entity    String    @db.Uuid
  id_attribute String    @db.Uuid
  created_at   DateTime  @db.Timestamptz(6)
  modified_at  DateTime  @db.Timestamptz(6)
  attribute    attribute @relation(fields: [id_attribute], references: [id_attribute], onDelete: NoAction, onUpdate: NoAction, map: "fk_33")
  entity       entity    @relation(fields: [id_entity], references: [id_entity], onDelete: NoAction, onUpdate: NoAction, map: "fk_34")

  @@index([id_attribute], map: "fk_value_attributeid")
  @@index([id_entity], map: "fk_value_entityid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model webhook_delivery_attempts {
  id_webhook_delivery_attempt String             @id(map: "pk_webhook_event") @db.Uuid
  timestamp                   DateTime           @db.Timestamptz(6)
  status                      String
  next_retry                  DateTime?          @db.Timestamptz(6)
  attempt_count               BigInt
  id_webhooks_payload         String?            @db.Uuid
  id_webhook_endpoint         String?            @db.Uuid
  id_event                    String?            @db.Uuid
  id_webhooks_reponse         String?            @db.Uuid
  webhooks_payloads           webhooks_payloads? @relation(fields: [id_webhooks_payload], references: [id_webhooks_payload], onDelete: NoAction, onUpdate: NoAction, map: "fk_38_1")
  webhook_endpoints           webhook_endpoints? @relation(fields: [id_webhook_endpoint], references: [id_webhook_endpoint], onDelete: NoAction, onUpdate: NoAction, map: "fk_38_2")
  events                      events?            @relation(fields: [id_event], references: [id_event], onDelete: NoAction, onUpdate: NoAction, map: "fk_39")
  webhooks_reponses           webhooks_reponses? @relation(fields: [id_webhooks_reponse], references: [id_webhooks_reponse], onDelete: NoAction, onUpdate: NoAction, map: "fk_40")

  @@index([id_webhooks_payload], map: "fk_we_payload_webhookid")
  @@index([id_webhook_endpoint], map: "fk_we_webhookendpointid")
  @@index([id_event], map: "fk_webhook_delivery_attempt_eventid")
  @@index([id_webhooks_reponse], map: "fk_webhook_delivery_attempt_webhook_responseid")
}

model projects_pull_frequency {
  id_projects_pull_frequency String   @id(map: "pk_projects_pull_frequency") @db.Uuid
  crm                        BigInt?
  ats                        BigInt?
  hris                       BigInt?
  accounting                 BigInt?
  filestorage                BigInt?
  ecommerce                  BigInt?
  ticketing                  BigInt?
  created_at                 DateTime @default(now()) @db.Timestamptz(6)
  modified_at                DateTime @default(now()) @db.Timestamptz(6)
  id_project                 String   @unique(map: "uq_projects_pull_frequency_project") @db.Uuid
  projects                   projects @relation(fields: [id_project], references: [id_project], onDelete: NoAction, onUpdate: NoAction, map: "fk_projects_pull_frequency_project")
}

model vertical_objects_sync_track_data {
  id_vertical_objects_sync_track_data String      @id(map: "pk_vertical_objects_sync_track_data") @db.Uuid
  vertical                            String
  provider_slug                       String
  object                              String
  pagination_type                     String
  id_connection                       String      @db.Uuid
  data                                Json?       @db.Json
  connections                         connections @relation(fields: [id_connection], references: [id_connection], onDelete: NoAction, onUpdate: NoAction, map: "fk_connection")
}
