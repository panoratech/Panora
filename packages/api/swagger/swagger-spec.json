{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "getHello",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "getHealth",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "/protected": {
      "get": {
        "operationId": "getHelloProtected",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "signUp",
        "summary": "Register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "signIn",
        "summary": "Log In",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "Get users",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyUserDto"
                }
              }
            }
          },
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/api-keys": {
      "get": {
        "operationId": "getApiKeys",
        "summary": "Retrieve API Keys",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/api-keys/{id}": {
      "delete": {
        "operationId": "deleteApiKey",
        "summary": "Delete API Keys",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/generate-apikey": {
      "post": {
        "operationId": "generateApiKey",
        "summary": "Create API Key",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/refresh-token": {
      "post": {
        "operationId": "refreshAccessToken",
        "summary": "Refresh Access Token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/connections/oauth/callback": {
      "get": {
        "operationId": "handleOAuthCallback",
        "summary": "Capture oAuth callback",
        "parameters": [
          {
            "name": "state",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "connections"
        ]
      }
    },
    "/connections/gorgias/oauth/install": {
      "get": {
        "operationId": "ConnectionsController_handleGorgiasAuthUrl",
        "parameters": [
          {
            "name": "account",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nonce",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "connections"
        ]
      }
    },
    "/connections": {
      "get": {
        "operationId": "getConnections",
        "summary": "List Connections",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "connections"
        ]
      }
    },
    "/webhook": {
      "get": {
        "operationId": "getWebhooksMetadata",
        "summary": "Retrieve webhooks metadata ",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      },
      "post": {
        "operationId": "createWebhookMetadata",
        "summary": "Add webhook metadata",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/webhook/{id}": {
      "delete": {
        "operationId": "deleteWebhook",
        "summary": "Delete Webhook",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "201": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      },
      "put": {
        "operationId": "updateWebhookStatus",
        "summary": "Update webhook status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/webhook/verifyEvent": {
      "post": {
        "operationId": "verifyEvent",
        "summary": "Verify payload sgnature of the webhook",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignatureVerificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/managed-webhooks/{id_connection}": {
      "get": {
        "operationId": "getManagedWebhooks",
        "summary": "Retrieve managed webhooks",
        "parameters": [
          {
            "name": "id_connection",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "managed-webhooks"
        ]
      }
    },
    "/managed-webhooks/{id}": {
      "put": {
        "operationId": "updateManagedWebhooksStatus",
        "summary": "Update managed webhook status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "managed-webhooks"
        ]
      }
    },
    "/managed-webhooks": {
      "post": {
        "operationId": "createManagedWebhook",
        "summary": "Create managed webhook",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedWebhooksDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "managed-webhooks"
        ]
      }
    },
    "/managed-webhooks/remoteThirdPartyCreation": {
      "post": {
        "operationId": "createRemoteThirdPartyWebhook",
        "summary": "Create Remote Third Party Webhook",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteThirdPartyCreationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "managed-webhooks"
        ]
      }
    },
    "/mw/{endpoint_uuid}": {
      "post": {
        "operationId": "handleThirdPartyWebhook",
        "summary": "Handle Third Party Webhook",
        "parameters": [
          {
            "name": "uuid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "mw"
        ]
      }
    },
    "/ticketing/tickets": {
      "get": {
        "operationId": "getTickets",
        "summary": "List a batch of Tickets",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTicketOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/tickets"
        ]
      },
      "post": {
        "operationId": "addTicket",
        "summary": "Create a Ticket",
        "description": "Create a ticket in any supported Ticketing software",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTicketInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTicketOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedTicketOutput"
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/tickets"
        ]
      },
      "patch": {
        "operationId": "updateTicket",
        "summary": "Update a Ticket",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedTicketOutput"
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/tickets"
        ]
      }
    },
    "/ticketing/tickets/{id}": {
      "get": {
        "operationId": "getTicket",
        "summary": "Retrieve a Ticket",
        "description": "Retrieve a ticket from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the `ticket` you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTicketOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/tickets"
        ]
      }
    },
    "/ticketing/tickets/batch": {
      "post": {
        "operationId": "addTickets",
        "summary": "Add a batch of Tickets",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedTicketInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTicketOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedTicketOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/tickets"
        ]
      }
    },
    "/ticketing/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "List a batch of Users",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedUserOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/users"
        ]
      }
    },
    "/ticketing/users/{id}": {
      "get": {
        "operationId": "getUser",
        "summary": "Retrieve a User",
        "description": "Retrieve a user from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the user you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedUserOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/users"
        ]
      }
    },
    "/ticketing/accounts": {
      "get": {
        "operationId": "getAccounts",
        "summary": "List a batch of Accounts",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAccountOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/accounts"
        ]
      }
    },
    "/ticketing/accounts/{id}": {
      "get": {
        "operationId": "getAccount",
        "summary": "Retrieve an Account",
        "description": "Retrieve an account from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the account you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAccountOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/accounts"
        ]
      }
    },
    "/ticketing/contacts": {
      "get": {
        "operationId": "getContacts",
        "summary": "List a batch of Contacts",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/contacts"
        ]
      }
    },
    "/ticketing/contacts/{id}": {
      "get": {
        "operationId": "getContact",
        "summary": "Retrieve a Contact",
        "description": "Retrieve a contact from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the contact you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/contacts"
        ]
      }
    },
    "/crm/companies": {
      "get": {
        "operationId": "getCompanies",
        "summary": "List a batch of Companies",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCompanyOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/companies"
        ]
      },
      "post": {
        "operationId": "addCompany",
        "summary": "Create a Company",
        "description": "Create a company in any supported Crm software",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedCompanyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCompanyOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedCompanyOutput"
                }
              }
            }
          }
        },
        "tags": [
          "crm/companies"
        ]
      },
      "patch": {
        "operationId": "updateCompany",
        "summary": "Update a Company",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCompanyOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/companies"
        ]
      }
    },
    "/crm/companies/{id}": {
      "get": {
        "operationId": "getCompany",
        "summary": "Retrieve a Company",
        "description": "Retrieve a company from any connected Crm software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the company you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCompanyOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/companies"
        ]
      }
    },
    "/crm/companies/batch": {
      "post": {
        "operationId": "addCompanies",
        "summary": "Add a batch of Companies",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedCompanyInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCompanyOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedCompanyOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "crm/companies"
        ]
      }
    },
    "/crm/contacts": {
      "get": {
        "operationId": "getContacts",
        "summary": "List a batch of CRM Contacts",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original CRM software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/contacts"
        ]
      },
      "post": {
        "operationId": "addContact",
        "summary": "Create CRM Contact",
        "description": "Create a contact in any supported CRM",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original CRM software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedContactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedContactOutput"
                }
              }
            }
          }
        },
        "tags": [
          "crm/contacts"
        ]
      },
      "patch": {
        "operationId": "updateContact",
        "summary": "Update a CRM Contact",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedContactOutput"
                }
              }
            }
          }
        },
        "tags": [
          "crm/contacts"
        ]
      }
    },
    "/crm/contacts/{id}": {
      "get": {
        "operationId": "getContact",
        "summary": "Retrieve a CRM Contact",
        "description": "Retrieve a contact from any connected CRM",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the `contact` you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original CRM software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/contacts"
        ]
      }
    },
    "/crm/contacts/batch": {
      "post": {
        "operationId": "addContacts",
        "summary": "Add a batch of CRM Contacts",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original CRM software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedContactInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedContactOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "crm/contacts"
        ]
      }
    },
    "/crm/deals": {
      "get": {
        "operationId": "getDeals",
        "summary": "List a batch of Deals",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedDealOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/deals"
        ]
      },
      "post": {
        "operationId": "addDeal",
        "summary": "Create a Deal",
        "description": "Create a deal in any supported Crm software",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedDealInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedDealOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedDealOutput"
                }
              }
            }
          }
        },
        "tags": [
          "crm/deals"
        ]
      }
    },
    "/crm/deals/{id}": {
      "get": {
        "operationId": "getDeal",
        "summary": "Retrieve a Deal",
        "description": "Retrieve a deal from any connected Crm software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the deal you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedDealOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/deals"
        ]
      },
      "patch": {
        "operationId": "updateDeal",
        "summary": "Update a Deal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedDealOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/deals"
        ]
      }
    },
    "/crm/deals/batch": {
      "post": {
        "operationId": "addDeals",
        "summary": "Add a batch of Deals",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedDealInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedDealOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedDealOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "crm/deals"
        ]
      }
    },
    "/crm/engagements": {
      "get": {
        "operationId": "getEngagements",
        "summary": "List a batch of Engagements",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedEngagementOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/engagements"
        ]
      },
      "post": {
        "operationId": "addEngagement",
        "summary": "Create a Engagement",
        "description": "Create a engagement in any supported Crm software",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedEngagementInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedEngagementOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedEngagementOutput"
                }
              }
            }
          }
        },
        "tags": [
          "crm/engagements"
        ]
      },
      "patch": {
        "operationId": "updateEngagement",
        "summary": "Update a Engagement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedEngagementOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/engagements"
        ]
      }
    },
    "/crm/engagements/{id}": {
      "get": {
        "operationId": "getEngagement",
        "summary": "Retrieve a Engagement",
        "description": "Retrieve a engagement from any connected Crm software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the engagement you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedEngagementOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/engagements"
        ]
      }
    },
    "/crm/engagements/batch": {
      "post": {
        "operationId": "addEngagements",
        "summary": "Add a batch of Engagements",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedEngagementInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedEngagementOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedEngagementOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "crm/engagements"
        ]
      }
    },
    "/crm/notes": {
      "get": {
        "operationId": "getNotes",
        "summary": "List a batch of Notes",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedNoteOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/notes"
        ]
      },
      "post": {
        "operationId": "addNote",
        "summary": "Create a Note",
        "description": "Create a note in any supported Crm software",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedNoteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedNoteOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedNoteOutput"
                }
              }
            }
          }
        },
        "tags": [
          "crm/notes"
        ]
      }
    },
    "/crm/notes/{id}": {
      "get": {
        "operationId": "getNote",
        "summary": "Retrieve a Note",
        "description": "Retrieve a note from any connected Crm software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the note you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedNoteOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/notes"
        ]
      }
    },
    "/crm/notes/batch": {
      "post": {
        "operationId": "addNotes",
        "summary": "Add a batch of Notes",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedNoteInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedNoteOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedNoteOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "crm/notes"
        ]
      }
    },
    "/crm/stages": {
      "get": {
        "operationId": "getStages",
        "summary": "List a batch of Stages",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedStageOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/stages"
        ]
      }
    },
    "/crm/stages/{id}": {
      "get": {
        "operationId": "getStage",
        "summary": "Retrieve a Stage",
        "description": "Retrieve a stage from any connected Crm software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the stage you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedStageOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/stages"
        ]
      }
    },
    "/crm/tasks": {
      "get": {
        "operationId": "getTasks",
        "summary": "List a batch of Tasks",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTaskOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/tasks"
        ]
      },
      "post": {
        "operationId": "addTask",
        "summary": "Create a Task",
        "description": "Create a task in any supported Crm software",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTaskInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTaskOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedTaskOutput"
                }
              }
            }
          }
        },
        "tags": [
          "crm/tasks"
        ]
      },
      "patch": {
        "operationId": "updateTask",
        "summary": "Update a Task",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTaskOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/tasks"
        ]
      }
    },
    "/crm/tasks/{id}": {
      "get": {
        "operationId": "getTask",
        "summary": "Retrieve a Task",
        "description": "Retrieve a task from any connected Crm software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the task you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTaskOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/tasks"
        ]
      }
    },
    "/crm/tasks/batch": {
      "post": {
        "operationId": "addTasks",
        "summary": "Add a batch of Tasks",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedTaskInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTaskOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedTaskOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "crm/tasks"
        ]
      }
    },
    "/crm/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "List a batch of Users",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedUserOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/users"
        ]
      }
    },
    "/crm/users/{id}": {
      "get": {
        "operationId": "getUser",
        "summary": "Retrieve a User",
        "description": "Retrieve a user from any connected Crm software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the user you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedUserOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/users"
        ]
      }
    },
    "/ticketing/collections": {
      "get": {
        "operationId": "getCollections",
        "summary": "List a batch of Collections",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCollectionOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/collections"
        ]
      }
    },
    "/ticketing/collections/{id}": {
      "get": {
        "operationId": "getCollection",
        "summary": "Retrieve a Collection",
        "description": "Retrieve a collection from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the collection you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCollectionOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/collections"
        ]
      }
    },
    "/ticketing/comments": {
      "get": {
        "operationId": "getComments",
        "summary": "List a batch of Comments",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCommentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/comments"
        ]
      },
      "post": {
        "operationId": "addComment",
        "summary": "Create a Comment",
        "description": "Create a comment in any supported Ticketing software",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedCommentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCommentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedCommentOutput"
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/comments"
        ]
      }
    },
    "/ticketing/comments/{id}": {
      "get": {
        "operationId": "getComment",
        "summary": "Retrieve a Comment",
        "description": "Retrieve a comment from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the `comment` you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCommentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/comments"
        ]
      }
    },
    "/ticketing/comments/batch": {
      "post": {
        "operationId": "addComments",
        "summary": "Add a batch of Comments",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedCommentInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCommentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedCommentOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/comments"
        ]
      }
    },
    "/ticketing/tags": {
      "get": {
        "operationId": "getTags",
        "summary": "List a batch of Tags",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTagOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/tags"
        ]
      }
    },
    "/ticketing/tags/{id}": {
      "get": {
        "operationId": "getTag",
        "summary": "Retrieve a Tag",
        "description": "Retrieve a tag from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the tag you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTagOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/tags"
        ]
      }
    },
    "/ticketing/teams": {
      "get": {
        "operationId": "getTeams",
        "summary": "List a batch of Teams",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTeamOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/teams"
        ]
      }
    },
    "/ticketing/teams/{id}": {
      "get": {
        "operationId": "getTeam",
        "summary": "Retrieve a Team",
        "description": "Retrieve a team from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the team you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTeamOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/teams"
        ]
      }
    },
    "/linked-users": {
      "post": {
        "operationId": "addLinkedUser",
        "summary": "Add Linked User",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLinkedUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "linked-users"
        ]
      },
      "get": {
        "operationId": "fetchLinkedUsers",
        "summary": "Retrieve Linked Users",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "linked-users"
        ]
      }
    },
    "/linked-users/batch": {
      "post": {
        "operationId": "addBatchLinkedUsers",
        "summary": "Add Batch Linked Users",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBatchLinkedUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "linked-users"
        ]
      }
    },
    "/linked-users/single": {
      "get": {
        "operationId": "getLinkedUser",
        "summary": "Retrieve a Linked User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "linked-users"
        ]
      }
    },
    "/linked-users/fromRemoteId": {
      "get": {
        "operationId": "linkedUserFromRemoteId",
        "summary": "Retrieve a Linked User From A Remote Id",
        "parameters": [
          {
            "name": "remoteId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "linked-users"
        ]
      }
    },
    "/organisations": {
      "get": {
        "operationId": "getOrganisations",
        "summary": "Retrieve Organisations",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "organisations"
        ]
      }
    },
    "/organisations/create": {
      "post": {
        "operationId": "createOrganisation",
        "summary": "Create an Organisation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "organisations"
        ]
      }
    },
    "/projects": {
      "get": {
        "operationId": "getProjects",
        "summary": "Retrieve projects",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "projects"
        ]
      },
      "post": {
        "operationId": "createProject",
        "summary": "Create a project",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "projects"
        ]
      }
    },
    "/field-mappings/entities": {
      "get": {
        "operationId": "getFieldMappingsEntities",
        "summary": "Retrieve field mapping entities",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "field-mappings"
        ]
      }
    },
    "/field-mappings/attribute": {
      "get": {
        "operationId": "getFieldMappings",
        "summary": "Retrieve field mappings",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "field-mappings"
        ]
      }
    },
    "/field-mappings/value": {
      "get": {
        "operationId": "getFieldMappingValues",
        "summary": "Retrieve field mappings values",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "field-mappings"
        ]
      }
    },
    "/field-mappings/define": {
      "post": {
        "operationId": "defineTargetField",
        "summary": "Define target Field",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefineTargetFieldDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "field-mappings"
        ]
      }
    },
    "/field-mappings": {
      "post": {
        "operationId": "createCustomField",
        "summary": "Create Custom Field",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "field-mappings"
        ]
      }
    },
    "/field-mappings/map": {
      "post": {
        "operationId": "mapField",
        "summary": "Map Custom Field",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapFieldToProviderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "field-mappings"
        ]
      }
    },
    "/field-mappings/properties": {
      "get": {
        "operationId": "getCustomProviderProperties",
        "summary": "Retrieve Custom Properties",
        "parameters": [
          {
            "name": "linkedUserId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vertical",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "field-mappings"
        ]
      }
    },
    "/events": {
      "get": {
        "operationId": "getEvents",
        "summary": "Retrieve Events",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      }
    },
    "/events/count": {
      "get": {
        "operationId": "getEventsCount",
        "summary": "Retrieve Events Count",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "events"
        ]
      }
    },
    "/magic-links": {
      "post": {
        "operationId": "createMagicLink",
        "summary": "Create a Magic Link",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMagicLinkDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "magic-links"
        ]
      },
      "get": {
        "operationId": "getMagicLinks",
        "summary": "Retrieve Magic Links",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "magic-links"
        ]
      }
    },
    "/magic-links/single": {
      "get": {
        "operationId": "getMagicLink",
        "summary": "Retrieve a Magic Link",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "magic-links"
        ]
      }
    },
    "/passthrough": {
      "post": {
        "operationId": "passthroughRequest",
        "summary": "Make a passthrough request",
        "parameters": [
          {
            "name": "integrationId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedUserId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vertical",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PassThroughRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassThroughResponse"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassThroughResponse"
                }
              }
            }
          }
        },
        "tags": [
          "passthrough"
        ]
      }
    },
    "/connections-strategies/create": {
      "post": {
        "operationId": "createConnectionStrategy",
        "summary": "Create Connection Strategy",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnectionStrategyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "connections-strategies"
        ]
      }
    },
    "/connections-strategies/toggle": {
      "post": {
        "operationId": "toggleConnectionStrategy",
        "summary": "Activate/Deactivate Connection Strategy",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleStrategyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "connections-strategies"
        ]
      }
    },
    "/connections-strategies/delete": {
      "post": {
        "operationId": "deleteConnectionStrategy",
        "summary": "Delete Connection Strategy",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCSDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "connections-strategies"
        ]
      }
    },
    "/connections-strategies/update": {
      "post": {
        "operationId": "updateConnectionStrategy",
        "summary": "Update Connection Strategy",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCSDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "connections-strategies"
        ]
      }
    },
    "/connections-strategies/credentials": {
      "post": {
        "operationId": "getConnectionStrategyCredentials",
        "summary": "Get Connection Strategy Credential",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionStrategyCredentials"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "connections-strategies"
        ]
      }
    },
    "/connections-strategies/getCredentials": {
      "get": {
        "operationId": "getCredentials",
        "summary": "Fetch credentials info needed for connections",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "connections-strategies"
        ]
      }
    },
    "/connections-strategies/getConnectionStrategiesForProject": {
      "get": {
        "operationId": "getConnectionStrategiesForProject",
        "summary": "Fetch All Connection Strategies for Project",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "connections-strategies"
        ]
      }
    },
    "/syncs/status/{vertical}": {
      "get": {
        "operationId": "getSyncStatus",
        "summary": "Retrieve sync status of a certain vertical",
        "parameters": [
          {
            "name": "vertical",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "syncs"
        ]
      }
    },
    "/syncs/resyncs/{vertical}": {
      "get": {
        "operationId": "resync",
        "summary": "Resync common objects across a vertical",
        "parameters": [
          {
            "name": "vertical",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "syncs"
        ]
      }
    },
    "/project-connectors": {
      "post": {
        "operationId": "updateConnectorsToProject",
        "summary": "Update Connectors for a project",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectConnectorsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "project-connectors"
        ]
      },
      "get": {
        "operationId": "getConnectorsFromProject",
        "summary": "Retrieve connectors by Project Id",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "getConnectorsFromProject",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "project-connectors"
        ]
      }
    },
    "/project-connectors/create": {
      "post": {
        "operationId": "ProjectConnectorsController_createConnectorsToProject",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "project-connectors"
        ]
      }
    },
    "/ticketing/attachments": {
      "get": {
        "operationId": "getAttachments",
        "summary": "List a batch of Attachments",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachments"
        ]
      },
      "post": {
        "operationId": "addAttachment",
        "summary": "Create a Attachment",
        "description": "Create a attachment in any supported Ticketing software",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedAttachmentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachments"
        ]
      }
    },
    "/ticketing/attachments/{id}": {
      "get": {
        "operationId": "getAttachment",
        "summary": "Retrieve a Attachment",
        "description": "Retrieve a attachment from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the attachment you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachments"
        ]
      }
    },
    "/ticketing/attachments/{id}/download": {
      "get": {
        "operationId": "downloadAttachment",
        "summary": "Download a Attachment",
        "description": "Download a attachment from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the attachment you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachments"
        ]
      }
    },
    "/ticketing/attachments/batch": {
      "post": {
        "operationId": "addAttachments",
        "summary": "Add a batch of Attachments",
        "parameters": [
          {
            "name": "x-connection-token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedAttachmentInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachments"
        ]
      }
    }
  },
  "info": {
    "title": "Unified Panora API",
    "description": "The Panora API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "strategy": {
            "type": "string"
          },
          "password_hash": {
            "type": "string"
          },
          "id_organisation": {
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "strategy"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "id_user": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password_hash": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password_hash"
        ]
      },
      "VerifyUserDto": {
        "type": "object",
        "properties": {
          "id_user": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        },
        "required": [
          "id_user",
          "email",
          "first_name",
          "last_name"
        ]
      },
      "ApiKeyDto": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "keyName": {
            "type": "string"
          }
        },
        "required": [
          "projectId",
          "userId",
          "keyName"
        ]
      },
      "RefreshDto": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          }
        },
        "required": [
          "projectId"
        ]
      },
      "WebhookDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id_project": {
            "type": "string"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "url",
          "id_project",
          "scope"
        ]
      },
      "SignatureVerificationDto": {
        "type": "object",
        "properties": {
          "signature": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        },
        "required": [
          "signature",
          "secret"
        ]
      },
      "ManagedWebhooksDto": {
        "type": "object",
        "properties": {
          "id_connection": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "api_version": {
            "type": "string"
          },
          "remote_signature_secret": {
            "type": "string"
          }
        },
        "required": [
          "id_connection",
          "scopes"
        ]
      },
      "RemoteThirdPartyCreationDto": {
        "type": "object",
        "properties": {
          "id_connection": {
            "type": "string"
          },
          "mw_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id_connection",
          "mw_ids"
        ]
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "UnifiedCommentInput": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "The body of the comment"
          },
          "html_body": {
            "type": "string",
            "description": "The html body of the comment"
          },
          "is_private": {
            "type": "boolean",
            "description": "The public status of the comment"
          },
          "creator_type": {
            "type": "string",
            "description": "The creator type of the comment. Authorized values are either USER or CONTACT"
          },
          "ticket_id": {
            "type": "string",
            "description": "The uuid of the ticket the comment is tied to"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid of the contact which the comment belongs to (if no user_id specified)"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user which the comment belongs to (if no contact_id specified)"
          },
          "attachments": {
            "description": "The attachements uuids tied to the comment",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "body"
        ]
      },
      "UnifiedTicketOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ticket"
          },
          "status": {
            "type": "string",
            "description": "The status of the ticket. Authorized values are OPEN or CLOSED."
          },
          "description": {
            "type": "string",
            "description": "The description of the ticket"
          },
          "due_date": {
            "format": "date-time",
            "type": "string",
            "description": "The date the ticket is due"
          },
          "type": {
            "type": "string",
            "description": "The type of the ticket. Authorized values are PROBLEM, QUESTION, or TASK"
          },
          "parent_ticket": {
            "type": "string",
            "description": "The uuid of the parent ticket"
          },
          "project_id": {
            "type": "string",
            "description": "The uuid of the collection (project) the ticket belongs to"
          },
          "tags": {
            "description": "The tags names of the ticket",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "completed_at": {
            "format": "date-time",
            "type": "string",
            "description": "The date the ticket has been completed"
          },
          "priority": {
            "type": "string",
            "description": "The priority of the ticket. Authorized values are HIGH, MEDIUM or LOW."
          },
          "assigned_to": {
            "description": "The users uuids the ticket is assigned to",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "comment": {
            "description": "The comment of the ticket",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnifiedCommentInput"
              }
            ]
          },
          "account_id": {
            "type": "string",
            "description": "The uuid of the account which the ticket belongs to"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid of the contact which the ticket belongs to"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the ticket"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the ticket in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "description",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedTicketInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ticket"
          },
          "status": {
            "type": "string",
            "description": "The status of the ticket. Authorized values are OPEN or CLOSED."
          },
          "description": {
            "type": "string",
            "description": "The description of the ticket"
          },
          "due_date": {
            "format": "date-time",
            "type": "string",
            "description": "The date the ticket is due"
          },
          "type": {
            "type": "string",
            "description": "The type of the ticket. Authorized values are PROBLEM, QUESTION, or TASK"
          },
          "parent_ticket": {
            "type": "string",
            "description": "The uuid of the parent ticket"
          },
          "project_id": {
            "type": "string",
            "description": "The uuid of the collection (project) the ticket belongs to"
          },
          "tags": {
            "description": "The tags names of the ticket",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "completed_at": {
            "format": "date-time",
            "type": "string",
            "description": "The date the ticket has been completed"
          },
          "priority": {
            "type": "string",
            "description": "The priority of the ticket. Authorized values are HIGH, MEDIUM or LOW."
          },
          "assigned_to": {
            "description": "The users uuids the ticket is assigned to",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "comment": {
            "description": "The comment of the ticket",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnifiedCommentInput"
              }
            ]
          },
          "account_id": {
            "type": "string",
            "description": "The uuid of the account which the ticket belongs to"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid of the contact which the ticket belongs to"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "description",
          "field_mappings"
        ]
      },
      "UnifiedUserOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the user"
          },
          "email": {
            "type": "string",
            "description": "The email of the user"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the user"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the user in the context of the Crm 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "email",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedAccountOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the account"
          },
          "domains": {
            "description": "The domains of the account",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the account"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the account in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedContactOutput": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name of the contact"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the contact"
          },
          "email_addresses": {
            "description": "The email addresses of the contact",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "phone_numbers": {
            "description": "The phone numbers of the contact",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "addresses": {
            "description": "The addresses of the contact",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user who owns the contact"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the contact"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the contact in the context of the Crm 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "first_name",
          "last_name",
          "field_mappings",
          "remote_data"
        ]
      },
      "Email": {
        "type": "object",
        "properties": {
          "email_address": {
            "type": "string",
            "description": "The email address"
          },
          "email_address_type": {
            "type": "string",
            "description": "The email address type. Authorized values are either PERSONAL or WORK."
          },
          "owner_type": {
            "type": "string",
            "description": "The owner type of an email"
          }
        },
        "required": [
          "email_address",
          "email_address_type"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "street_1": {
            "type": "string",
            "description": "The street"
          },
          "street_2": {
            "type": "string",
            "description": "More information about the street "
          },
          "city": {
            "type": "string",
            "description": "The city"
          },
          "state": {
            "type": "string",
            "description": "The state"
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code"
          },
          "country": {
            "type": "string",
            "description": "The country."
          },
          "address_type": {
            "type": "string",
            "description": "The address type. Authorized values are either PERSONAL or WORK."
          },
          "owner_type": {
            "type": "string",
            "description": "The owner type of the address"
          }
        },
        "required": [
          "street_1",
          "street_2",
          "city",
          "state",
          "postal_code",
          "country",
          "address_type",
          "owner_type"
        ]
      },
      "Phone": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "description": "The phone number starting with a plus (+) followed by the country code (e.g +336676778890 for France)"
          },
          "phone_type": {
            "type": "string",
            "description": "The phone type. Authorized values are either MOBILE or WORK"
          },
          "owner_type": {
            "type": "string",
            "description": "The owner type of a phone number"
          }
        },
        "required": [
          "phone_number",
          "phone_type"
        ]
      },
      "UnifiedCompanyOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the company"
          },
          "industry": {
            "type": "string",
            "description": "The industry of the company. Authorized values can be found in the Industry enum."
          },
          "number_of_employees": {
            "type": "number",
            "description": "The number of employees of the company"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user who owns the company"
          },
          "email_addresses": {
            "description": "The email addresses of the company",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "addresses": {
            "description": "The addresses of the company",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "phone_numbers": {
            "description": "The phone numbers of the company",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the company"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the company in the context of the Crm 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedCompanyInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the company"
          },
          "industry": {
            "type": "string",
            "description": "The industry of the company. Authorized values can be found in the Industry enum."
          },
          "number_of_employees": {
            "type": "number",
            "description": "The number of employees of the company"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user who owns the company"
          },
          "email_addresses": {
            "description": "The email addresses of the company",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "addresses": {
            "description": "The addresses of the company",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "phone_numbers": {
            "description": "The phone numbers of the company",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "field_mappings"
        ]
      },
      "UnifiedContactInput": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name of the contact"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the contact"
          },
          "email_addresses": {
            "description": "The email addresses of the contact",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "phone_numbers": {
            "description": "The phone numbers of the contact",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "addresses": {
            "description": "The addresses of the contact",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user who owns the contact"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "first_name",
          "last_name",
          "field_mappings"
        ]
      },
      "UnifiedDealOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the deal"
          },
          "description": {
            "type": "string",
            "description": "The description of the deal"
          },
          "amount": {
            "type": "number",
            "description": "The amount of the deal"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user who is on the deal"
          },
          "stage_id": {
            "type": "string",
            "description": "The uuid of the stage of the deal"
          },
          "company_id": {
            "type": "string",
            "description": "The uuid of the company tied to the deal"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the deal"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the deal in the context of the Crm 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "description",
          "amount",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedDealInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the deal"
          },
          "description": {
            "type": "string",
            "description": "The description of the deal"
          },
          "amount": {
            "type": "number",
            "description": "The amount of the deal"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user who is on the deal"
          },
          "stage_id": {
            "type": "string",
            "description": "The uuid of the stage of the deal"
          },
          "company_id": {
            "type": "string",
            "description": "The uuid of the company tied to the deal"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "description",
          "amount",
          "field_mappings"
        ]
      },
      "UnifiedEngagementOutput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the engagement"
          },
          "direction": {
            "type": "string",
            "description": "The direction of the engagement. Authorized values are INBOUND or OUTBOUND"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the engagement"
          },
          "start_at": {
            "format": "date-time",
            "type": "string",
            "description": "The start time of the engagement"
          },
          "end_time": {
            "format": "date-time",
            "type": "string",
            "description": "The end time of the engagement"
          },
          "type": {
            "type": "string",
            "description": "The type of the engagement. Authorized values are EMAIL, CALL or MEETING"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user tied to the engagement"
          },
          "company_id": {
            "type": "string",
            "description": "The uuid of the company tied to the engagement"
          },
          "contacts": {
            "description": "The uuids of contacts tied to the engagement object",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the engagement"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the engagement in the context of the Crm 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "type",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedEngagementInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the engagement"
          },
          "direction": {
            "type": "string",
            "description": "The direction of the engagement. Authorized values are INBOUND or OUTBOUND"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the engagement"
          },
          "start_at": {
            "format": "date-time",
            "type": "string",
            "description": "The start time of the engagement"
          },
          "end_time": {
            "format": "date-time",
            "type": "string",
            "description": "The end time of the engagement"
          },
          "type": {
            "type": "string",
            "description": "The type of the engagement. Authorized values are EMAIL, CALL or MEETING"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user tied to the engagement"
          },
          "company_id": {
            "type": "string",
            "description": "The uuid of the company tied to the engagement"
          },
          "contacts": {
            "description": "The uuids of contacts tied to the engagement object",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "type",
          "field_mappings"
        ]
      },
      "UnifiedNoteOutput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the note"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user tied the note"
          },
          "company_id": {
            "type": "string",
            "description": "The uuid of the company tied to the note"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid fo the contact tied to the note"
          },
          "deal_id": {
            "type": "string",
            "description": "The uuid of the deal tied to the note"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the note"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the note in the context of the Crm 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "content",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedNoteInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the note"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user tied the note"
          },
          "company_id": {
            "type": "string",
            "description": "The uuid of the company tied to the note"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid fo the contact tied to the note"
          },
          "deal_id": {
            "type": "string",
            "description": "The uuid of the deal tied to the note"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "content",
          "field_mappings"
        ]
      },
      "UnifiedStageOutput": {
        "type": "object",
        "properties": {
          "stage_name": {
            "type": "string",
            "description": "The name of the stage"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the stage"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the stage in the context of the Crm 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "stage_name",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedTaskOutput": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "The subject of the task"
          },
          "content": {
            "type": "string",
            "description": "The content of the task"
          },
          "status": {
            "type": "string",
            "description": "The status of the task. Authorized values are PENDING, COMPLETED."
          },
          "due_date": {
            "format": "date-time",
            "type": "string",
            "description": "The due date of the task"
          },
          "finished_date": {
            "format": "date-time",
            "type": "string",
            "description": "The finished date of the task"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user tied to the task"
          },
          "company_id": {
            "type": "string",
            "description": "The uuid fo the company tied to the task"
          },
          "deal_id": {
            "type": "string",
            "description": "The uuid of the deal tied to the task"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the task"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the task in the context of the Crm 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "subject",
          "content",
          "status",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedTaskInput": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "The subject of the task"
          },
          "content": {
            "type": "string",
            "description": "The content of the task"
          },
          "status": {
            "type": "string",
            "description": "The status of the task. Authorized values are PENDING, COMPLETED."
          },
          "due_date": {
            "format": "date-time",
            "type": "string",
            "description": "The due date of the task"
          },
          "finished_date": {
            "format": "date-time",
            "type": "string",
            "description": "The finished date of the task"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user tied to the task"
          },
          "company_id": {
            "type": "string",
            "description": "The uuid fo the company tied to the task"
          },
          "deal_id": {
            "type": "string",
            "description": "The uuid of the deal tied to the task"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "subject",
          "content",
          "status",
          "field_mappings"
        ]
      },
      "UnifiedCollectionOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the collection"
          },
          "description": {
            "type": "string",
            "description": "The description of the collection"
          },
          "collection_type": {
            "type": "string",
            "description": "The type of the collection. Authorized values are either PROJECT or LIST "
          },
          "id": {
            "type": "string",
            "description": "The uuid of the collection"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the collection in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "remote_data"
        ]
      },
      "UnifiedAttachmentOutput": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The file name of the attachment"
          },
          "file_url": {
            "type": "string",
            "description": "The file url of the attachment"
          },
          "uploader": {
            "type": "string",
            "description": "The uploader's uuid of the attachment"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the attachment"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the attachment in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "file_name",
          "file_url",
          "uploader",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedCommentOutput": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "The body of the comment"
          },
          "html_body": {
            "type": "string",
            "description": "The html body of the comment"
          },
          "is_private": {
            "type": "boolean",
            "description": "The public status of the comment"
          },
          "creator_type": {
            "type": "string",
            "description": "The creator type of the comment. Authorized values are either USER or CONTACT"
          },
          "ticket_id": {
            "type": "string",
            "description": "The uuid of the ticket the comment is tied to"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid of the contact which the comment belongs to (if no user_id specified)"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user which the comment belongs to (if no contact_id specified)"
          },
          "attachments": {
            "description": "The attachemnets tied to the comment",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnifiedAttachmentOutput"
            }
          },
          "id": {
            "type": "string",
            "description": "The uuid of the comment"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the comment in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "body",
          "remote_data"
        ]
      },
      "UnifiedTagOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tag"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the tag"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the tag in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedTeamOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the team"
          },
          "description": {
            "type": "string",
            "description": "The description of the team"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the team"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the team in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "field_mappings",
          "remote_data"
        ]
      },
      "CreateLinkedUserDto": {
        "type": "object",
        "properties": {
          "linked_user_origin_id": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "id_project": {
            "type": "string"
          }
        },
        "required": [
          "linked_user_origin_id",
          "alias",
          "id_project"
        ]
      },
      "CreateBatchLinkedUserDto": {
        "type": "object",
        "properties": {
          "linked_user_origin_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "alias": {
            "type": "string"
          },
          "id_project": {
            "type": "string"
          }
        },
        "required": [
          "linked_user_origin_ids",
          "alias",
          "id_project"
        ]
      },
      "CreateOrganizationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "stripe_customer_id": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "stripe_customer_id"
        ]
      },
      "CreateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id_organization": {
            "type": "string"
          },
          "id_user": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "id_user"
        ]
      },
      "DefineTargetFieldDto": {
        "type": "object",
        "properties": {
          "object_type_owner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "data_type": {
            "type": "string"
          }
        },
        "required": [
          "object_type_owner",
          "name",
          "description",
          "data_type"
        ]
      },
      "CustomFieldCreateDto": {
        "type": "object",
        "properties": {
          "object_type_owner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "data_type": {
            "type": "string"
          },
          "source_custom_field_id": {
            "type": "string"
          },
          "source_provider": {
            "type": "string"
          },
          "linked_user_id": {
            "type": "string"
          }
        },
        "required": [
          "object_type_owner",
          "name",
          "description",
          "data_type",
          "source_custom_field_id",
          "source_provider",
          "linked_user_id"
        ]
      },
      "MapFieldToProviderDto": {
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "string"
          },
          "source_custom_field_id": {
            "type": "string"
          },
          "source_provider": {
            "type": "string"
          },
          "linked_user_id": {
            "type": "string"
          }
        },
        "required": [
          "attributeId",
          "source_custom_field_id",
          "source_provider",
          "linked_user_id"
        ]
      },
      "CreateMagicLinkDto": {
        "type": "object",
        "properties": {
          "linked_user_origin_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "id_project": {
            "type": "string"
          }
        },
        "required": [
          "linked_user_origin_id",
          "email",
          "alias",
          "id_project"
        ]
      },
      "PassThroughRequestDto": {
        "type": "object",
        "properties": {
          "method": {
            "enum": [
              "GET",
              "POST",
              "PATCH",
              "DELETE",
              "PUT"
            ],
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "headers": {
            "type": "object"
          }
        },
        "required": [
          "method",
          "path"
        ]
      },
      "PassThroughResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "url",
          "status",
          "data"
        ]
      },
      "CreateConnectionStrategyDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "attributes",
          "values"
        ]
      },
      "ToggleStrategyDto": {
        "type": "object",
        "properties": {
          "id_cs": {
            "type": "string"
          }
        },
        "required": [
          "id_cs"
        ]
      },
      "DeleteCSDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateCSDto": {
        "type": "object",
        "properties": {
          "id_cs": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id_cs",
          "status",
          "attributes",
          "values"
        ]
      },
      "ConnectionStrategyCredentials": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProjectConnectorsDto": {
        "type": "object",
        "properties": {
          "column": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          }
        },
        "required": [
          "column",
          "status"
        ]
      },
      "UnifiedAttachmentInput": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The file name of the attachment"
          },
          "file_url": {
            "type": "string",
            "description": "The file url of the attachment"
          },
          "uploader": {
            "type": "string",
            "description": "The uploader's uuid of the attachment"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "file_name",
          "file_url",
          "uploader",
          "field_mappings"
        ]
      }
    }
  }
}