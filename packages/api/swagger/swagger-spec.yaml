openapi: 3.0.0
paths:
  /:
    get:
      operationId: hello
      summary: ''
      parameters: []
      responses:
        '200':
          description: Returns a greeting message
          content:
            text/plain:
              schema:
                type: string
  /health:
    get:
      operationId: health
      summary: ''
      parameters: []
      responses:
        '200':
          description: Api is healthy
          content:
            application/json:
              schema:
                type: number
                example: 200
  /auth/login:
    post:
      operationId: signIn
      summary: Log In
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '201':
          description: ''
      tags:
        - auth
      x-speakeasy-group: auth.login
  /connections:
    get:
      operationId: getConnections
      summary: List Connections
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Connection'
      tags:
        - connections
  /webhooks:
    get:
      operationId: listWebhooks
      summary: List webhooks
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookResponse'
      tags: &ref_0
        - webhooks
      x-speakeasy-group: webhooks
    post:
      operationId: createWebhookPublic
      summary: Create webhook
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
      tags: *ref_0
      x-speakeasy-group: webhooks
  /webhooks/{id}:
    delete:
      operationId: delete
      summary: Delete Webhook
      parameters:
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the webhook to delete.
          schema:
            type: string
      responses:
        '200':
          description: ''
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
      tags: *ref_0
      x-speakeasy-group: webhooks
    put:
      operationId: updateStatus
      summary: Update webhook status
      parameters:
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the webhook to update.
          schema:
            type: string
      responses:
        '200':
          description: ''
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
      tags: *ref_0
      x-speakeasy-group: webhooks
  /webhooks/verifyEvent:
    post:
      operationId: verifyEvent
      summary: Verify payload signature of the webhook
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureVerificationDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    additionalProperties: true
                    description: Dynamic event payload
        '201':
          description: ''
      tags: *ref_0
      x-speakeasy-group: webhooks
  /ticketing/tickets:
    get:
      operationId: listTicketingTicket
      summary: List  Tickets
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedTicketingTicketOutput'
      tags: &ref_1
        - ticketing/tickets
      x-speakeasy-group: ticketing.tickets
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createTicketingTicket
      summary: Create Tickets
      description: Create Tickets in any supported Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedTicketingTicketInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingTicketOutput'
      tags: *ref_1
      x-speakeasy-group: ticketing.tickets
  /ticketing/tickets/{id}:
    get:
      operationId: retrieveTicketingTicket
      summary: Retrieve Tickets
      description: Retrieve Tickets from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the `ticket` you want to retrive.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingTicketOutput'
      tags: *ref_1
      x-speakeasy-group: ticketing.tickets
  /ticketing/users:
    get:
      operationId: listTicketingUsers
      summary: List Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedTicketingUserOutput'
      tags: &ref_2
        - ticketing/users
      x-speakeasy-group: ticketing.users
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ticketing/users/{id}:
    get:
      operationId: retrieveTicketingUser
      summary: Retrieve User
      description: Retrieve a User from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the user you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingUserOutput'
      tags: *ref_2
      x-speakeasy-group: ticketing.users
  /ticketing/accounts:
    get:
      operationId: listTicketingAccount
      summary: List  Accounts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedTicketingAccountOutput'
      tags: &ref_3
        - ticketing/accounts
      x-speakeasy-group: ticketing.accounts
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ticketing/accounts/{id}:
    get:
      operationId: retrieveTicketingAccount
      summary: Retrieve Accounts
      description: Retrieve Accounts from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the account you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingAccountOutput'
      tags: *ref_3
      x-speakeasy-group: ticketing.accounts
  /ticketing/contacts:
    get:
      operationId: listTicketingContacts
      summary: List Contacts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedTicketingContactOutput'
      tags: &ref_4
        - ticketing/contacts
      x-speakeasy-group: ticketing.contacts
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ticketing/contacts/{id}:
    get:
      operationId: retrieveTicketingContact
      summary: Retrieve Contact
      description: Retrieve a Contact from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the contact you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedTicketingContactOutput'
      tags: *ref_4
      x-speakeasy-group: ticketing.contacts
  /sync/status/{vertical}:
    get:
      operationId: status
      summary: Retrieve sync status of a certain vertical
      parameters:
        - name: vertical
          required: true
          in: path
          example: ticketing
          schema:
            enum:
              - ticketing
              - marketingautomation
              - crm
              - filestorage
              - ats
              - hris
              - accounting
              - ecommerce
            type: string
      responses:
        '200':
          description: ''
      tags: &ref_5
        - sync
      x-speakeasy-group: sync
  /sync/resync:
    post:
      operationId: resync
      summary: Resync common objects across a vertical
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResyncStatusDto'
      tags: *ref_5
      x-speakeasy-group: sync
  /crm/companies:
    get:
      operationId: listCrmCompany
      summary: List Companies
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedCrmCompanyOutput'
      tags: &ref_6
        - crm/companies
      x-speakeasy-group: crm.companies
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createCrmCompany
      summary: Create Companies
      description: Create Companies in any supported CRM software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original CRM software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCrmCompanyInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmCompanyOutput'
      tags: *ref_6
      x-speakeasy-group: crm.companies
  /crm/companies/{id}:
    get:
      operationId: retrieveCrmCompany
      summary: Retrieve Companies
      description: Retrieve Companies from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the company you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmCompanyOutput'
      tags: *ref_6
      x-speakeasy-group: crm.companies
  /crm/contacts:
    get:
      operationId: listCrmContacts
      summary: List CRM Contacts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedCrmContactOutput'
      tags: &ref_7
        - crm/contacts
      x-speakeasy-group: crm.contacts
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createCrmContact
      summary: Create Contacts
      description: Create Contacts in any supported CRM
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original CRM software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCrmContactInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmContactOutput'
      tags: *ref_7
      x-speakeasy-group: crm.contacts
  /crm/contacts/{id}:
    get:
      operationId: retrieveCrmContact
      summary: Retrieve Contacts
      description: Retrieve Contacts from any connected CRM
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the `contact` you want to retrive.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original CRM software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmContactOutput'
      tags: *ref_7
      x-speakeasy-group: crm.contacts
  /crm/deals:
    get:
      operationId: listCrmDeals
      summary: List Deals
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedCrmDealOutput'
      tags: &ref_8
        - crm/deals
      x-speakeasy-group: crm.deals
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createCrmDeal
      summary: Create Deals
      description: Create Deals in any supported Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCrmDealInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmDealOutput'
      tags: *ref_8
      x-speakeasy-group: crm.deals
  /crm/deals/{id}:
    get:
      operationId: retrieveCrmDeal
      summary: Retrieve Deals
      description: Retrieve Deals from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the deal you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmDealOutput'
      tags: *ref_8
      x-speakeasy-group: crm.deals
  /crm/engagements:
    get:
      operationId: listCrmEngagements
      summary: List Engagements
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedCrmEngagementOutput'
      tags: &ref_9
        - crm/engagements
      x-speakeasy-group: crm.engagements
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createCrmEngagement
      summary: Create Engagements
      description: Create Engagements in any supported Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCrmEngagementInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmEngagementOutput'
      tags: *ref_9
      x-speakeasy-group: crm.engagements
  /crm/engagements/{id}:
    get:
      operationId: retrieveCrmEngagement
      summary: Retrieve Engagements
      description: Retrieve Engagements from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the engagement you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmEngagementOutput'
      tags: *ref_9
      x-speakeasy-group: crm.engagements
  /crm/notes:
    get:
      operationId: listCrmNote
      summary: List Notes
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedCrmNoteOutput'
      tags: &ref_10
        - crm/notes
      x-speakeasy-group: crm.notes
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createCrmNote
      summary: Create Notes
      description: Create Notes in any supported Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCrmNoteInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmNoteOutput'
      tags: *ref_10
      x-speakeasy-group: crm.notes
  /crm/notes/{id}:
    get:
      operationId: retrieveCrmNote
      summary: Retrieve Notes
      description: Retrieve Notes from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the note you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmNoteOutput'
      tags: *ref_10
      x-speakeasy-group: crm.notes
  /crm/stages:
    get:
      operationId: listCrmStages
      summary: List  Stages
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedCrmStageOutput'
      tags: &ref_11
        - crm/stages
      x-speakeasy-group: crm.stages
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /crm/stages/{id}:
    get:
      operationId: retrieveCrmStage
      summary: Retrieve Stages
      description: Retrieve Stages from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the stage you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmStageOutput'
      tags: *ref_11
      x-speakeasy-group: crm.stages
  /crm/tasks:
    get:
      operationId: listCrmTask
      summary: List Tasks
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedCrmTaskOutput'
      tags: &ref_12
        - crm/tasks
      x-speakeasy-group: crm.tasks
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createCrmTask
      summary: Create Tasks
      description: Create Tasks in any supported Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCrmTaskInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmTaskOutput'
      tags: *ref_12
      x-speakeasy-group: crm.tasks
  /crm/tasks/{id}:
    get:
      operationId: retrieveCrmTask
      summary: Retrieve Tasks
      description: Retrieve Tasks from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the task you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmTaskOutput'
      tags: *ref_12
      x-speakeasy-group: crm.tasks
  /crm/users:
    get:
      operationId: listCrmUsers
      summary: List  Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedCrmUserOutput'
      tags: &ref_13
        - crm/users
      x-speakeasy-group: crm.users
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /crm/users/{id}:
    get:
      operationId: retrieveCrmUser
      summary: Retrieve Users
      description: Retrieve Users from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: b008e199-eda9-4629-bd41-a01b6195864a
          description: id of the user you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCrmUserOutput'
      tags: *ref_13
      x-speakeasy-group: crm.users
  /ticketing/collections:
    get:
      operationId: listTicketingCollections
      summary: List Collections
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedTicketingCollectionOutput
      tags: &ref_14
        - ticketing/collections
      x-speakeasy-group: ticketing.collections
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ticketing/collections/{id}:
    get:
      operationId: retrieveCollection
      summary: Retrieve Collections
      description: Retrieve Collections from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the collection you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingCollectionOutput'
      tags: *ref_14
      x-speakeasy-group: ticketing.collections
  /ticketing/comments:
    get:
      operationId: listTicketingComments
      summary: List Comments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedTicketingCommentOutput'
      tags: &ref_15
        - ticketing/comments
      x-speakeasy-group: ticketing.comments
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createTicketingComment
      summary: Create Comments
      description: Create Comments in any supported Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedTicketingCommentInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingCommentOutput'
      tags: *ref_15
      x-speakeasy-group: ticketing.comments
  /ticketing/comments/{id}:
    get:
      operationId: retrieveTicketingComment
      summary: Retrieve Comment
      description: Retrieve a Comment from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the `comment` you want to retrive.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedTicketingCommentOutput'
      tags: *ref_15
      x-speakeasy-group: ticketing.comments
  /ticketing/tags:
    get:
      operationId: listTicketingTags
      summary: List Tags
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedTicketingTagOutput'
      tags: &ref_16
        - ticketing/tags
      x-speakeasy-group: ticketing.tags
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ticketing/tags/{id}:
    get:
      operationId: retrieveTicketingTag
      summary: Retrieve Tag
      description: Retrieve a Tag from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the tag you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingTagOutput'
      tags: *ref_16
      x-speakeasy-group: ticketing.tags
  /ticketing/teams:
    get:
      operationId: listTicketingTeams
      summary: List  Teams
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedTicketingTeamOutput'
      tags: &ref_17
        - ticketing/teams
      x-speakeasy-group: ticketing.teams
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ticketing/teams/{id}:
    get:
      operationId: retrieveTicketingTeam
      summary: Retrieve Teams
      description: Retrieve Teams from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the team you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingTeamOutput'
      tags: *ref_17
      x-speakeasy-group: ticketing.teams
  /linked_users:
    post:
      operationId: createLinkedUser
      summary: Create Linked Users
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLinkedUserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedUserResponse'
      tags: &ref_18
        - linkedUsers
      x-speakeasy-group: linkedUsers
    get:
      operationId: listLinkedUsers
      summary: List Linked Users
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedUserResponse'
      tags: *ref_18
      x-speakeasy-group: linkedUsers
  /linked_users/batch:
    post:
      operationId: importBatch
      summary: Add Batch Linked Users
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBatchLinkedUserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedUserResponse'
      tags: *ref_18
      x-speakeasy-group: linkedUsers
  /linked_users/{id}:
    get:
      operationId: retrieveLinkedUser
      summary: Retrieve Linked Users
      parameters:
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedUserResponse'
      tags: *ref_18
      x-speakeasy-group: linkedUsers
  /linked_users/fromRemoteId:
    get:
      operationId: remoteId
      summary: Retrieve a Linked User From A Remote Id
      parameters:
        - name: remoteId
          required: true
          in: query
          example: id_1
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedUserResponse'
      tags: *ref_18
      x-speakeasy-group: linkedUsers
  /projects:
    get:
      operationId: getProjects
      summary: Retrieve projects
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
      tags: &ref_19
        - projects
    post:
      operationId: createProject
      summary: Create a project
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
      tags: *ref_19
  /field_mappings/values:
    get:
      operationId: getFieldMappingValues
      summary: Retrieve field mappings values
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_20
        - fieldMappings
      x-speakeasy-group: fieldMappings
  /field_mappings/entities:
    get:
      operationId: getFieldMappingsEntities
      summary: Retrieve field mapping entities
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_20
      x-speakeasy-group: fieldMappings
  /field_mappings/attributes:
    get:
      operationId: getFieldMappings
      summary: Retrieve field mappings
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_20
      x-speakeasy-group: fieldMappings
  /field_mappings/define:
    post:
      operationId: definitions
      summary: Define target Field
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefineTargetFieldDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldResponse'
      tags: *ref_20
      x-speakeasy-group: fieldMappings
  /field_mappings:
    post:
      operationId: defineCustomField
      summary: Create Custom Field
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldCreateDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldResponse'
      tags: *ref_20
      x-speakeasy-group: fieldMappings
  /field_mappings/map:
    post:
      operationId: map
      summary: Map Custom Field
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapFieldToProviderDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldResponse'
      tags: *ref_20
      x-speakeasy-group: fieldMappings
  /events:
    get:
      operationId: getPanoraCoreEvents
      summary: List Events
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            default: 10
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponse'
      tags:
        - events
  /passthrough:
    post:
      operationId: request
      summary: Make a passthrough request
      parameters:
        - name: x-connection-token
          required: true
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassThroughRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: &ref_21
        - passthrough
      x-speakeasy-group: passthrough
  /passthrough/{retryId}:
    get:
      operationId: getRetriedRequestResponse
      summary: Retrieve response of a failed passthrough request due to rate limits
      parameters:
        - name: retryId
          required: true
          in: path
          description: >-
            id of the retryJob returned when you initiated a passthrough
            request.
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_21
      x-speakeasy-group: passthrough.{retryid}
  /hris/bankinfos:
    get:
      operationId: listHrisBankInfo
      summary: List Bank Info
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisBankinfoOutput'
      tags: &ref_22
        - hris/bankinfos
      x-speakeasy-group: hris.bankinfos
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/bankinfos/{id}:
    get:
      operationId: retrieveHrisBankInfo
      summary: Retrieve Bank Info
      description: Retrieve Bank Info from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the bank info you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisBankinfoOutput'
      tags: *ref_22
      x-speakeasy-group: hris.bankinfos
  /hris/benefits:
    get:
      operationId: listHrisBenefits
      summary: List Benefits
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisBenefitOutput'
      tags: &ref_23
        - hris/benefits
      x-speakeasy-group: hris.benefits
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/benefits/{id}:
    get:
      operationId: retrieveHrisBenefit
      summary: Retrieve Benefit
      description: Retrieve a Benefit from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the benefit you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisBenefitOutput'
      tags: *ref_23
      x-speakeasy-group: hris.benefits
  /hris/companies:
    get:
      operationId: listHrisCompanies
      summary: List Companies
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisCompanyOutput'
      tags: &ref_24
        - hris/companies
      x-speakeasy-group: hris.companies
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/companies/{id}:
    get:
      operationId: retrieveHrisCompany
      summary: Retrieve Company
      description: Retrieve a Company from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the company you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisCompanyOutput'
      tags: *ref_24
      x-speakeasy-group: hris.companies
  /hris/dependents:
    get:
      operationId: listHrisDependents
      summary: List Dependents
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisDependentOutput'
      tags: &ref_25
        - hris/dependents
      x-speakeasy-group: hris.dependents
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/dependents/{id}:
    get:
      operationId: retrieveHrisDependent
      summary: Retrieve Dependent
      description: Retrieve a Dependent from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the dependent you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisDependentOutput'
      tags: *ref_25
      x-speakeasy-group: hris.dependents
  /hris/employeepayrollruns:
    get:
      operationId: listHrisEmployeePayrollRun
      summary: List Employee Payroll Runs
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedHrisEmployeepayrollrunOutput
      tags: &ref_26
        - hris/employeepayrollruns
      x-speakeasy-group: hris.employeepayrollruns
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/employeepayrollruns/{id}:
    get:
      operationId: retrieveHrisEmployeePayrollRun
      summary: Retrieve Employee Payroll Run
      description: Retrieve Employee Payroll Run from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the employeepayrollrun you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisEmployeepayrollrunOutput'
      tags: *ref_26
      x-speakeasy-group: hris.employeepayrollruns
  /hris/employees:
    get:
      operationId: listHrisEmployees
      summary: List Employees
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisEmployeeOutput'
      tags: &ref_27
        - hris/employees
      x-speakeasy-group: hris.employees
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createHrisEmployee
      summary: Create Employees
      description: Create Employees in any supported Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedHrisEmployeeInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisEmployeeOutput'
      tags: *ref_27
      x-speakeasy-group: hris.employees
  /hris/employees/{id}:
    get:
      operationId: retrieveHrisEmployee
      summary: Retrieve Employee
      description: Retrieve an Employee from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the employee you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisEmployeeOutput'
      tags: *ref_27
      x-speakeasy-group: hris.employees
  /hris/employerbenefits:
    get:
      operationId: listHrisEmployerBenefits
      summary: List Employer Benefits
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedHrisEmployerbenefitOutput
      tags: &ref_28
        - hris/employerbenefits
      x-speakeasy-group: hris.employerbenefits
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/employerbenefits/{id}:
    get:
      operationId: retrieveHrisEmployerBenefit
      summary: Retrieve Employer Benefit
      description: Retrieve an Employer Benefit from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the employer benefit you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisEmployerbenefitOutput'
      tags: *ref_28
      x-speakeasy-group: hris.employerbenefits
  /hris/employments:
    get:
      operationId: listHrisEmployments
      summary: List Employments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisEmploymentOutput'
      tags: &ref_29
        - hris/employments
      x-speakeasy-group: hris.employments
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/employments/{id}:
    get:
      operationId: retrieveHrisEmployment
      summary: Retrieve Employment
      description: Retrieve an Employment from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the employment you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisEmploymentOutput'
      tags: *ref_29
      x-speakeasy-group: hris.employments
  /hris/groups:
    get:
      operationId: listHrisGroups
      summary: List Groups
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisGroupOutput'
      tags: &ref_30
        - hris/groups
      x-speakeasy-group: hris.groups
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/groups/{id}:
    get:
      operationId: retrieveHrisGroup
      summary: Retrieve Group
      description: Retrieve a Group from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the group you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisGroupOutput'
      tags: *ref_30
      x-speakeasy-group: hris.groups
  /hris/locations:
    get:
      operationId: listHrisLocations
      summary: List Locations
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisLocationOutput'
      tags: &ref_31
        - hris/locations
      x-speakeasy-group: hris.locations
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/locations/{id}:
    get:
      operationId: retrieveHrisLocation
      summary: Retrieve Location
      description: Retrieve a Location from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the location you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisLocationOutput'
      tags: *ref_31
      x-speakeasy-group: hris.locations
  /hris/paygroups:
    get:
      operationId: listHrisPaygroups
      summary: List Pay Groups
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisPaygroupOutput'
      tags: &ref_32
        - hris/paygroups
      x-speakeasy-group: hris.paygroups
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/paygroups/{id}:
    get:
      operationId: retrieveHrisPaygroup
      summary: Retrieve Pay Group
      description: Retrieve a Pay Group from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the paygroup you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisPaygroupOutput'
      tags: *ref_32
      x-speakeasy-group: hris.paygroups
  /hris/payrollruns:
    get:
      operationId: listHrisPayrollRuns
      summary: List Payroll Runs
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisPayrollrunOutput'
      tags: &ref_33
        - hris/payrollruns
      x-speakeasy-group: hris.payrollruns
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/payrollruns/{id}:
    get:
      operationId: retrieveHrisPayrollRun
      summary: Retrieve Payroll Run
      description: Retrieve a Payroll Run from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the payroll run you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisPayrollrunOutput'
      tags: *ref_33
      x-speakeasy-group: hris.payrollruns
  /hris/timeoffs:
    get:
      operationId: listHrisTimeoffs
      summary: List Time Offs
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisTimeoffOutput'
      tags: &ref_34
        - hris/timeoffs
      x-speakeasy-group: hris.timeoffs
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createHrisTimeoff
      summary: Create Timeoffs
      description: Create Timeoffs in any supported Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedHrisTimeoffInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisTimeoffOutput'
      tags: *ref_34
      x-speakeasy-group: hris.timeoffs
  /hris/timeoffs/{id}:
    get:
      operationId: retrieveHrisTimeoff
      summary: Retrieve Time Off
      description: Retrieve a Time Off from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the time off you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisTimeoffOutput'
      tags: *ref_34
      x-speakeasy-group: hris.timeoffs
  /hris/timeoffbalances:
    get:
      operationId: listHrisTimeoffbalances
      summary: List  TimeoffBalances
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedHrisTimeoffbalanceOutput'
      tags: &ref_35
        - hris/timeoffbalances
      x-speakeasy-group: hris.timeoffbalances
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /hris/timeoffbalances/{id}:
    get:
      operationId: retrieveHrisTimeoffbalance
      summary: Retrieve Time off Balances
      description: Retrieve Time off Balances from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the timeoffbalance you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedHrisTimeoffbalanceOutput'
      tags: *ref_35
      x-speakeasy-group: hris.timeoffbalances
  /marketingautomation/actions:
    get:
      operationId: listMarketingautomationAction
      summary: List Actions
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationActionOutput
      tags: &ref_36
        - marketingautomation/actions
      x-speakeasy-group: marketingautomation.actions
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createMarketingautomationAction
      summary: Create Action
      description: Create a action in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedMarketingautomationActionInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationActionOutput'
      tags: *ref_36
      x-speakeasy-group: marketingautomation.actions
  /marketingautomation/actions/{id}:
    get:
      operationId: retrieveMarketingautomationAction
      summary: Retrieve Actions
      description: Retrieve Actions from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the action you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationActionOutput'
      tags: *ref_36
      x-speakeasy-group: marketingautomation.actions
  /marketingautomation/automations:
    get:
      operationId: listMarketingautomationAutomations
      summary: List Automations
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationAutomationOutput
      tags: &ref_37
        - marketingautomation/automations
      x-speakeasy-group: marketingautomation.automations
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createMarketingautomationAutomation
      summary: Create Automation
      description: Create a automation in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedMarketingautomationAutomationInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UnifiedMarketingautomationAutomationOutput
      tags: *ref_37
      x-speakeasy-group: marketingautomation.automations
  /marketingautomation/automations/{id}:
    get:
      operationId: retrieveMarketingautomationAutomation
      summary: Retrieve Automation
      description: Retrieve an Automation from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the automation you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UnifiedMarketingautomationAutomationOutput
      tags: *ref_37
      x-speakeasy-group: marketingautomation.automations
  /marketingautomation/campaigns:
    get:
      operationId: listMarketingautomationCampaigns
      summary: List Campaigns
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationCampaignOutput
      tags: &ref_38
        - marketingautomation/campaigns
      x-speakeasy-group: marketingautomation.campaigns
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createMarketingautomationCampaign
      summary: Create Campaign
      description: Create a campaign in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedMarketingautomationCampaignInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationCampaignOutput'
      tags: *ref_38
      x-speakeasy-group: marketingautomation.campaigns
  /marketingautomation/campaigns/{id}:
    get:
      operationId: retrieveMarketingautomationCampaign
      summary: Retrieve Campaign
      description: Retrieve a Campaign from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the campaign you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationCampaignOutput'
      tags: *ref_38
      x-speakeasy-group: marketingautomation.campaigns
  /marketingautomation/contacts:
    get:
      operationId: listMarketingAutomationContacts
      summary: List  Contacts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationContactOutput
      tags: &ref_39
        - marketingautomation/contacts
      x-speakeasy-group: marketingautomation.contacts
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createMarketingAutomationContact
      summary: Create Contact
      description: Create a contact in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedMarketingautomationContactInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationContactOutput'
      tags: *ref_39
      x-speakeasy-group: marketingautomation.contacts
  /marketingautomation/contacts/{id}:
    get:
      operationId: retrieveMarketingAutomationContact
      summary: Retrieve Contacts
      description: Retrieve Contacts from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the contact you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationContactOutput'
      tags: *ref_39
      x-speakeasy-group: marketingautomation.contacts
  /marketingautomation/emails:
    get:
      operationId: listMarketingautomationEmails
      summary: List Emails
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationEmailOutput
      tags: &ref_40
        - marketingautomation/emails
      x-speakeasy-group: marketingautomation.emails
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /marketingautomation/emails/{id}:
    get:
      operationId: retrieveMarketingautomationEmail
      summary: Retrieve Email
      description: Retrieve an Email from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the email you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationEmailOutput'
      tags: *ref_40
      x-speakeasy-group: marketingautomation.emails
  /marketingautomation/events:
    get:
      operationId: listMarketingAutomationEvents
      summary: List Events
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationEventOutput
      tags: &ref_41
        - marketingautomation/events
      x-speakeasy-group: marketingautomation.events
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /marketingautomation/events/{id}:
    get:
      operationId: retrieveMarketingautomationEvent
      summary: Retrieve Event
      description: Retrieve an Event from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the event you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationEventOutput'
      tags: *ref_41
      x-speakeasy-group: marketingautomation.events
  /marketingautomation/lists:
    get:
      operationId: listMarketingautomationLists
      summary: List Lists
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationListOutput
      tags: &ref_42
        - marketingautomation/lists
      x-speakeasy-group: marketingautomation.lists
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createMarketingautomationList
      summary: Create Lists
      description: Create Lists in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedMarketingautomationListInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationListOutput'
      tags: *ref_42
      x-speakeasy-group: marketingautomation.lists
  /marketingautomation/lists/{id}:
    get:
      operationId: retrieveMarketingautomationList
      summary: Retrieve List
      description: Retrieve a List from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the list you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationListOutput'
      tags: *ref_42
      x-speakeasy-group: marketingautomation.lists
  /marketingautomation/messages:
    get:
      operationId: listMarketingautomationMessages
      summary: List Messages
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationMessageOutput
      tags: &ref_43
        - marketingautomation/messages
      x-speakeasy-group: marketingautomation.messages
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /marketingautomation/messages/{id}:
    get:
      operationId: retrieveMarketingautomationMessage
      summary: Retrieve Messages
      description: Retrieve Messages from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the message you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationMessageOutput'
      tags: *ref_43
      x-speakeasy-group: marketingautomation.messages
  /marketingautomation/templates:
    get:
      operationId: listMarketingautomationTemplates
      summary: List Templates
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationTemplateOutput
      tags: &ref_44
        - marketingautomation/templates
      x-speakeasy-group: marketingautomation.templates
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createMarketingautomationTemplate
      summary: Create Template
      description: Create a template in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedMarketingautomationTemplateInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationTemplateOutput'
      tags: *ref_44
      x-speakeasy-group: marketingautomation.templates
  /marketingautomation/templates/{id}:
    get:
      operationId: retrieveMarketingautomationTemplate
      summary: Retrieve Template
      description: Retrieve a Template from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the template you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationTemplateOutput'
      tags: *ref_44
      x-speakeasy-group: marketingautomation.templates
  /marketingautomation/users:
    get:
      operationId: listMarketingAutomationUsers
      summary: List  Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedMarketingautomationUserOutput
      tags: &ref_45
        - marketingautomation/users
      x-speakeasy-group: marketingautomation.users
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /marketingautomation/users/{id}:
    get:
      operationId: retrieveMarketingAutomationUser
      summary: Retrieve Users
      description: Retrieve Users from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the user you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedMarketingautomationUserOutput'
      tags: *ref_45
      x-speakeasy-group: marketingautomation.users
  /ats/activities:
    get:
      operationId: listAtsActivity
      summary: List  Activities
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsActivityOutput'
      tags: &ref_46
        - ats/activities
      x-speakeasy-group: ats.activities
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAtsActivity
      summary: Create Activities
      description: Create Activities in any supported Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAtsActivityInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsActivityOutput'
      tags: *ref_46
      x-speakeasy-group: ats.activities
  /ats/activities/{id}:
    get:
      operationId: retrieveAtsActivity
      summary: Retrieve Activities
      description: Retrieve Activities from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the activity you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsActivityOutput'
      tags: *ref_46
      x-speakeasy-group: ats.activities
  /ats/applications:
    get:
      operationId: listAtsApplication
      summary: List  Applications
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsApplicationOutput'
      tags: &ref_47
        - ats/applications
      x-speakeasy-group: ats.applications
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAtsApplication
      summary: Create Applications
      description: Create Applications in any supported Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAtsApplicationInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsApplicationOutput'
      tags: *ref_47
      x-speakeasy-group: ats.applications
  /ats/applications/{id}:
    get:
      operationId: retrieveAtsApplication
      summary: Retrieve Applications
      description: Retrieve Applications from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the application you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsApplicationOutput'
      tags: *ref_47
      x-speakeasy-group: ats.applications
  /ats/attachments:
    get:
      operationId: listAtsAttachment
      summary: List  Attachments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsAttachmentOutput'
      tags: &ref_48
        - ats/attachments
      x-speakeasy-group: ats.attachments
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAtsAttachment
      summary: Create Attachments
      description: Create Attachments in any supported ATS software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAtsAttachmentInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsAttachmentOutput'
      tags: *ref_48
      x-speakeasy-group: ats.attachments
  /ats/attachments/{id}:
    get:
      operationId: retrieveAtsAttachment
      summary: Retrieve Attachments
      description: Retrieve Attachments from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the attachment you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsAttachmentOutput'
      tags: *ref_48
      x-speakeasy-group: ats.attachments
  /ats/candidates:
    get:
      operationId: listAtsCandidate
      summary: List  Candidates
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsCandidateOutput'
      tags: &ref_49
        - ats/candidates
      x-speakeasy-group: ats.candidates
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAtsCandidate
      summary: Create Candidates
      description: Create Candidates in any supported Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAtsCandidateInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsCandidateOutput'
      tags: *ref_49
      x-speakeasy-group: ats.candidates
  /ats/candidates/{id}:
    get:
      operationId: retrieveAtsCandidate
      summary: Retrieve Candidates
      description: Retrieve Candidates from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the candidate you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsCandidateOutput'
      tags: *ref_49
      x-speakeasy-group: ats.candidates
  /ats/departments:
    get:
      operationId: listAtsDepartments
      summary: List  Departments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsDepartmentOutput'
      tags: &ref_50
        - ats/departments
      x-speakeasy-group: ats.departments
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/departments/{id}:
    get:
      operationId: retrieveAtsDepartment
      summary: Retrieve Departments
      description: Retrieve Departments from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the department you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsDepartmentOutput'
      tags: *ref_50
      x-speakeasy-group: ats.departments
  /ats/interviews:
    get:
      operationId: listAtsInterview
      summary: List  Interviews
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsInterviewOutput'
      tags: &ref_51
        - ats/interviews
      x-speakeasy-group: ats.interviews
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAtsInterview
      summary: Create Interviews
      description: Create Interviews in any supported Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAtsInterviewInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsInterviewOutput'
      tags: *ref_51
      x-speakeasy-group: ats.interviews
  /ats/interviews/{id}:
    get:
      operationId: retrieveAtsInterview
      summary: Retrieve Interviews
      description: Retrieve Interviews from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the interview you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsInterviewOutput'
      tags: *ref_51
      x-speakeasy-group: ats.interviews
  /ats/jobinterviewstages:
    get:
      operationId: listAtsJobInterviewStage
      summary: List  JobInterviewStages
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAtsJobinterviewstageOutput
      tags: &ref_52
        - ats/jobinterviewstages
      x-speakeasy-group: ats.jobinterviewstages
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/jobinterviewstages/{id}:
    get:
      operationId: retrieveAtsJobInterviewStage
      summary: Retrieve Job Interview Stages
      description: Retrieve Job Interview Stages from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the jobinterviewstage you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsJobinterviewstageOutput'
      tags: *ref_52
      x-speakeasy-group: ats.jobinterviewstages
  /ats/jobs:
    get:
      operationId: listAtsJob
      summary: List  Jobs
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsJobOutput'
      tags: &ref_53
        - ats/jobs
      x-speakeasy-group: ats.jobs
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/jobs/{id}:
    get:
      operationId: retrieveAtsJob
      summary: Retrieve Jobs
      description: Retrieve Jobs from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the job you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsJobOutput'
      tags: *ref_53
      x-speakeasy-group: ats.jobs
  /ats/offers:
    get:
      operationId: listAtsOffer
      summary: List  Offers
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsOfferOutput'
      tags: &ref_54
        - ats/offers
      x-speakeasy-group: ats.offers
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/offers/{id}:
    get:
      operationId: retrieveAtsOffer
      summary: Retrieve Offers
      description: Retrieve Offers from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the offer you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsOfferOutput'
      tags: *ref_54
      x-speakeasy-group: ats.offers
  /ats/offices:
    get:
      operationId: listAtsOffice
      summary: List Offices
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsOfficeOutput'
      tags: &ref_55
        - ats/offices
      x-speakeasy-group: ats.offices
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/offices/{id}:
    get:
      operationId: retrieveAtsOffice
      summary: Retrieve Offices
      description: Retrieve Offices from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the office you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsOfficeOutput'
      tags: *ref_55
      x-speakeasy-group: ats.offices
  /ats/rejectreasons:
    get:
      operationId: listAtsRejectReasons
      summary: List  RejectReasons
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsRejectreasonOutput'
      tags: &ref_56
        - ats/rejectreasons
      x-speakeasy-group: ats.rejectreasons
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/rejectreasons/{id}:
    get:
      operationId: retrieveAtsRejectReason
      summary: Retrieve Reject Reasons
      description: Retrieve Reject Reasons from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the rejectreason you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsRejectreasonOutput'
      tags: *ref_56
      x-speakeasy-group: ats.rejectreasons
  /ats/scorecards:
    get:
      operationId: listAtsScorecard
      summary: List  ScoreCards
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsScorecardOutput'
      tags: &ref_57
        - ats/scorecards
      x-speakeasy-group: ats.scorecards
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/scorecards/{id}:
    get:
      operationId: retrieveAtsScorecard
      summary: Retrieve Score Cards
      description: Retrieve Score Cards from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the scorecard you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsScorecardOutput'
      tags: *ref_57
      x-speakeasy-group: ats.scorecards
  /ats/tags:
    get:
      operationId: listAtsTags
      summary: List  Tags
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsTagOutput'
      tags: &ref_58
        - ats/tags
      x-speakeasy-group: ats.tags
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/tags/{id}:
    get:
      operationId: retrieveAtsTag
      summary: Retrieve Tags
      description: Retrieve Tags from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the tag you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsTagOutput'
      tags: *ref_58
      x-speakeasy-group: ats.tags
  /ats/users:
    get:
      operationId: listAtsUsers
      summary: List  Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsUserOutput'
      tags: &ref_59
        - ats/users
      x-speakeasy-group: ats.users
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/users/{id}:
    get:
      operationId: retrieveAtsUser
      summary: Retrieve Users
      description: Retrieve Users from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the user you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsUserOutput'
      tags: *ref_59
      x-speakeasy-group: ats.users
  /ats/eeocs:
    get:
      operationId: listAtsEeocs
      summary: List  Eeocss
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAtsEeocsOutput'
      tags: &ref_60
        - ats/eeocs
      x-speakeasy-group: ats.eeocs
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ats/eeocs/{id}:
    get:
      operationId: retrieveAtsEeocs
      summary: Retrieve Eeocs
      description: Retrieve a eeocs from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the eeocs you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAtsEeocsOutput'
      tags: *ref_60
      x-speakeasy-group: ats.eeocs
  /accounting/accounts:
    get:
      operationId: listAccountingAccounts
      summary: List  Accounts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAccountingAccountOutput'
      tags: &ref_61
        - accounting/accounts
      x-speakeasy-group: accounting.accounts
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAccountingAccount
      summary: Create Accounts
      description: Create accounts in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAccountingAccountInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingAccountOutput'
      tags: *ref_61
      x-speakeasy-group: accounting.accounts
  /accounting/accounts/{id}:
    get:
      operationId: retrieveAccountingAccount
      summary: Retrieve Accounts
      description: Retrieve Accounts from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the account you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingAccountOutput'
      tags: *ref_61
      x-speakeasy-group: accounting.accounts
  /accounting/addresses:
    get:
      operationId: listAccountingAddress
      summary: List  Addresss
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAccountingAddressOutput'
      tags: &ref_62
        - accounting/addresses
      x-speakeasy-group: accounting.addresses
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/addresses/{id}:
    get:
      operationId: retrieveAccountingAddress
      summary: Retrieve Addresses
      description: Retrieve Addresses from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the address you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingAddressOutput'
      tags: *ref_62
      x-speakeasy-group: accounting.addresses
  /accounting/attachments:
    get:
      operationId: listAccountingAttachments
      summary: List  Attachments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingAttachmentOutput
      tags: &ref_63
        - accounting/attachments
      x-speakeasy-group: accounting.attachments
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAccountingAttachment
      summary: Create Attachments
      description: Create attachments in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAccountingAttachmentInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingAttachmentOutput'
      tags: *ref_63
      x-speakeasy-group: accounting.attachments
  /accounting/attachments/{id}:
    get:
      operationId: retrieveAccountingAttachment
      summary: Retrieve Attachments
      description: Retrieve attachments from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the attachment you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingAttachmentOutput'
      tags: *ref_63
      x-speakeasy-group: accounting.attachments
  /accounting/balancesheets:
    get:
      operationId: listAccountingBalanceSheets
      summary: List  BalanceSheets
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingBalancesheetOutput
      tags: &ref_64
        - accounting/balancesheets
      x-speakeasy-group: accounting.balancesheets
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/balancesheets/{id}:
    get:
      operationId: retrieveAccountingBalanceSheet
      summary: Retrieve BalanceSheets
      description: Retrieve BalanceSheets from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the balancesheet you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingBalancesheetOutput'
      tags: *ref_64
      x-speakeasy-group: accounting.balancesheets
  /accounting/cashflowstatements:
    get:
      operationId: listAccountingCashflowStatement
      summary: List  CashflowStatements
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingCashflowstatementOutput
      tags: &ref_65
        - accounting/cashflowstatements
      x-speakeasy-group: accounting.cashflowstatements
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/cashflowstatements/{id}:
    get:
      operationId: retrieveAccountingCashflowStatement
      summary: Retrieve Cashflow Statements
      description: Retrieve Cashflow Statements from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the cashflowstatement you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingCashflowstatementOutput'
      tags: *ref_65
      x-speakeasy-group: accounting.cashflowstatements
  /accounting/companyinfos:
    get:
      operationId: listAccountingCompanyInfos
      summary: List  CompanyInfos
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingCompanyinfoOutput
      tags: &ref_66
        - accounting/companyinfos
      x-speakeasy-group: accounting.companyinfos
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/companyinfos/{id}:
    get:
      operationId: retrieveAccountingCompanyInfo
      summary: Retrieve Company Infos
      description: Retrieve Company Infos from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the companyinfo you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingCompanyinfoOutput'
      tags: *ref_66
      x-speakeasy-group: accounting.companyinfos
  /accounting/contacts:
    get:
      operationId: listAccountingContacts
      summary: List  Contacts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAccountingContactOutput'
      tags: &ref_67
        - accounting/contacts
      x-speakeasy-group: accounting.contacts
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAccountingContact
      summary: Create Contacts
      description: Create contacts in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAccountingContactInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingContactOutput'
      tags: *ref_67
      x-speakeasy-group: accounting.contacts
  /accounting/contacts/{id}:
    get:
      operationId: retrieveAccountingContact
      summary: Retrieve Contacts
      description: Retrieve Contacts from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the contact you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingContactOutput'
      tags: *ref_67
      x-speakeasy-group: accounting.contacts
  /accounting/creditnotes:
    get:
      operationId: listAccountingCreditNote
      summary: List  CreditNotes
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingCreditnoteOutput
      tags: &ref_68
        - accounting/creditnotes
      x-speakeasy-group: accounting.creditnotes
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/creditnotes/{id}:
    get:
      operationId: retrieveAccountingCreditNote
      summary: Retrieve Credit Notes
      description: Retrieve Credit Notes from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the creditnote you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingCreditnoteOutput'
      tags: *ref_68
      x-speakeasy-group: accounting.creditnotes
  /accounting/expenses:
    get:
      operationId: listAccountingExpense
      summary: List  Expenses
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAccountingExpenseOutput'
      tags: &ref_69
        - accounting/expenses
      x-speakeasy-group: accounting.expenses
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAccountingExpense
      summary: Create Expenses
      description: Create Expenses in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAccountingExpenseInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingExpenseOutput'
      tags: *ref_69
      x-speakeasy-group: accounting.expenses
  /accounting/expenses/{id}:
    get:
      operationId: retrieveAccountingExpense
      summary: Retrieve Expenses
      description: Retrieve Expenses from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the expense you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingExpenseOutput'
      tags: *ref_69
      x-speakeasy-group: accounting.expenses
  /accounting/incomestatements:
    get:
      operationId: listAccountingIncomeStatement
      summary: List  IncomeStatements
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingIncomestatementOutput
      tags: &ref_70
        - accounting/incomestatements
      x-speakeasy-group: accounting.incomestatements
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/incomestatements/{id}:
    get:
      operationId: retrieveAccountingIncomeStatement
      summary: Retrieve Income Statements
      description: Retrieve Income Statements from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the incomestatement you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingIncomestatementOutput'
      tags: *ref_70
      x-speakeasy-group: accounting.incomestatements
  /accounting/invoices:
    get:
      operationId: listAccountingInvoice
      summary: List  Invoices
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAccountingInvoiceOutput'
      tags: &ref_71
        - accounting/invoices
      x-speakeasy-group: accounting.invoices
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAccountingInvoice
      summary: Create Invoices
      description: Create invoices in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAccountingInvoiceInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingInvoiceOutput'
      tags: *ref_71
      x-speakeasy-group: accounting.invoices
  /accounting/invoices/{id}:
    get:
      operationId: retrieveAccountingInvoice
      summary: Retrieve Invoices
      description: Retrieve Invoices from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the invoice you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingInvoiceOutput'
      tags: *ref_71
      x-speakeasy-group: accounting.invoices
  /accounting/items:
    get:
      operationId: listAccountingItem
      summary: List  Items
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAccountingItemOutput'
      tags: &ref_72
        - accounting/items
      x-speakeasy-group: accounting.items
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/items/{id}:
    get:
      operationId: retrieveAccountingItem
      summary: Retrieve Items
      description: Retrieve Items from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the item you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingItemOutput'
      tags: *ref_72
      x-speakeasy-group: accounting.items
  /accounting/journalentries:
    get:
      operationId: listAccountingJournalEntry
      summary: List  JournalEntrys
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingJournalentryOutput
      tags: &ref_73
        - accounting/journalentries
      x-speakeasy-group: accounting.journalentries
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAccountingJournalEntry
      summary: Create Journal Entries
      description: Create Journal Entries in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAccountingJournalentryInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingJournalentryOutput'
      tags: *ref_73
      x-speakeasy-group: accounting.journalentries
  /accounting/journalentries/{id}:
    get:
      operationId: retrieveAccountingJournalEntry
      summary: Retrieve Journal Entries
      description: Retrieve Journal Entries from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the journalentry you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingJournalentryOutput'
      tags: *ref_73
      x-speakeasy-group: accounting.journalentries
  /accounting/payments:
    get:
      operationId: listAccountingPayment
      summary: List  Payments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAccountingPaymentOutput'
      tags: &ref_74
        - accounting/payments
      x-speakeasy-group: accounting.payments
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAccountingPayment
      summary: Create Payments
      description: Create Payments in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAccountingPaymentInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingPaymentOutput'
      tags: *ref_74
      x-speakeasy-group: accounting.payments
  /accounting/payments/{id}:
    get:
      operationId: retrieveAccountingPayment
      summary: Retrieve Payments
      description: Retrieve Payments from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the payment you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingPaymentOutput'
      tags: *ref_74
      x-speakeasy-group: accounting.payments
  /accounting/phonenumbers:
    get:
      operationId: listAccountingPhonenumber
      summary: List  PhoneNumbers
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingPhonenumberOutput
      tags: &ref_75
        - accounting/phonenumbers
      x-speakeasy-group: accounting.phonenumbers
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/phonenumbers/{id}:
    get:
      operationId: retrieveAccountingPhonenumber
      summary: Retrieve Phone Numbers
      description: Retrieve Phone Numbers from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the phonenumber you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingPhonenumberOutput'
      tags: *ref_75
      x-speakeasy-group: accounting.phonenumbers
  /accounting/purchaseorders:
    get:
      operationId: listAccountingPurchaseOrder
      summary: List  PurchaseOrders
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingPurchaseorderOutput
      tags: &ref_76
        - accounting/purchaseorders
      x-speakeasy-group: accounting.purchaseorders
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createAccountingPurchaseOrder
      summary: Create Purchase Orders
      description: Create Purchase Orders in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAccountingPurchaseorderInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingPurchaseorderOutput'
      tags: *ref_76
      x-speakeasy-group: accounting.purchaseorders
  /accounting/purchaseorders/{id}:
    get:
      operationId: retrieveAccountingPurchaseOrder
      summary: Retrieve Purchase Orders
      description: Retrieve Purchase Orders from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the purchaseorder you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingPurchaseorderOutput'
      tags: *ref_76
      x-speakeasy-group: accounting.purchaseorders
  /accounting/taxrates:
    get:
      operationId: listAccountingTaxRate
      summary: List  TaxRates
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedAccountingTaxrateOutput'
      tags: &ref_77
        - accounting/taxrates
      x-speakeasy-group: accounting.taxrates
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/taxrates/{id}:
    get:
      operationId: retrieveAccountingTaxRate
      summary: Retrieve Tax Rates
      description: Retrieve Tax Rates from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the taxrate you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingTaxrateOutput'
      tags: *ref_77
      x-speakeasy-group: accounting.taxrates
  /accounting/trackingcategories:
    get:
      operationId: listAccountingTrackingCategorys
      summary: List  TrackingCategorys
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingTrackingcategoryOutput
      tags: &ref_78
        - accounting/trackingcategories
      x-speakeasy-group: accounting.trackingcategories
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/trackingcategories/{id}:
    get:
      operationId: retrieveAccountingTrackingCategory
      summary: Retrieve Tracking Categories
      description: Retrieve Tracking Categories from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the trackingcategory you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingTrackingcategoryOutput'
      tags: *ref_78
      x-speakeasy-group: accounting.trackingcategories
  /accounting/transactions:
    get:
      operationId: listAccountingTransaction
      summary: List  Transactions
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingTransactionOutput
      tags: &ref_79
        - accounting/transactions
      x-speakeasy-group: accounting.transactions
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/transactions/{id}:
    get:
      operationId: retrieveAccountingTransaction
      summary: Retrieve Transactions
      description: Retrieve Transactions from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the transaction you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingTransactionOutput'
      tags: *ref_79
      x-speakeasy-group: accounting.transactions
  /accounting/vendorcredits:
    get:
      operationId: listAccountingVendorCredit
      summary: List  VendorCredits
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedAccountingVendorcreditOutput
      tags: &ref_80
        - accounting/vendorcredits
      x-speakeasy-group: accounting.vendorcredits
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /accounting/vendorcredits/{id}:
    get:
      operationId: retrieveAccountingVendorCredit
      summary: Retrieve Vendor Credits
      description: Retrieve Vendor Credits from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: id of the vendorcredit you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountingVendorcreditOutput'
      tags: *ref_80
      x-speakeasy-group: accounting.vendorcredits
  /filestorage/drives:
    get:
      operationId: listFilestorageDrives
      summary: List Drives
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedFilestorageDriveOutput'
      tags: &ref_81
        - filestorage/drives
      x-speakeasy-group: filestorage.drives
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /filestorage/drives/{id}:
    get:
      operationId: retrieveFilestorageDrive
      summary: Retrieve Drive
      description: Retrieve a Drive from any connected file storage service
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the drive you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original file storage service.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFilestorageDriveOutput'
      tags: *ref_81
      x-speakeasy-group: filestorage.drives
  /filestorage/files:
    get:
      operationId: listFilestorageFile
      summary: List  Files
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedFilestorageFileOutput'
      tags: &ref_82
        - filestorage/files
      x-speakeasy-group: filestorage.files
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createFilestorageFile
      summary: Create Files
      description: Create Files in any supported Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedFilestorageFileInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFilestorageFileOutput'
      tags: *ref_82
      x-speakeasy-group: filestorage.files
  /filestorage/files/{id}:
    get:
      operationId: retrieveFilestorageFile
      summary: Retrieve Files
      description: Retrieve Files from any connected Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the file you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original File Storage software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFilestorageFileOutput'
      tags: *ref_82
      x-speakeasy-group: filestorage.files
  /filestorage/folders:
    get:
      operationId: listFilestorageFolder
      summary: List  Folders
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedFilestorageFolderOutput'
      tags: &ref_83
        - filestorage/folders
      x-speakeasy-group: filestorage.folders
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createFilestorageFolder
      summary: Create Folders
      description: Create Folders in any supported Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedFilestorageFolderInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFilestorageFolderOutput'
      tags: *ref_83
      x-speakeasy-group: filestorage.folders
  /filestorage/folders/{id}:
    get:
      operationId: retrieveFilestorageFolder
      summary: Retrieve Folders
      description: Retrieve Folders from any connected Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the folder you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original File Storage software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFilestorageFolderOutput'
      tags: *ref_83
      x-speakeasy-group: filestorage.folders
  /filestorage/groups:
    get:
      operationId: listFilestorageGroup
      summary: List  Groups
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedFilestorageGroupOutput'
      tags: &ref_84
        - filestorage/groups
      x-speakeasy-group: filestorage.groups
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /filestorage/groups/{id}:
    get:
      operationId: retrieveFilestorageGroup
      summary: Retrieve Groups
      description: Retrieve Groups from any connected Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the permission you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original File Storage software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFilestorageGroupOutput'
      tags: *ref_84
      x-speakeasy-group: filestorage.groups
  /filestorage/users:
    get:
      operationId: listFilestorageUsers
      summary: List Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedFilestorageUserOutput'
      tags: &ref_85
        - filestorage/users
      x-speakeasy-group: filestorage.users
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /filestorage/users/{id}:
    get:
      operationId: retrieveFilestorageUser
      summary: Retrieve Users
      description: Retrieve Users from any connected Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the permission you want to retrieve.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original File Storage software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFilestorageUserOutput'
      tags: *ref_85
      x-speakeasy-group: filestorage.users
  /ecommerce/products:
    get:
      operationId: listEcommerceProducts
      summary: List Products
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedEcommerceProductOutput'
      tags: &ref_86
        - ecommerce/products
      x-speakeasy-group: ecommerce.products
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createEcommerceProduct
      summary: Create Products
      description: Create Products in any supported Ecommerce software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedEcommerceProductInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedEcommerceProductOutput'
      tags: *ref_86
      x-speakeasy-group: ecommerce.products
  /ecommerce/products/{id}:
    get:
      operationId: retrieveEcommerceProduct
      summary: Retrieve Products
      description: Retrieve products from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the product you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedEcommerceProductOutput'
      tags: *ref_86
      x-speakeasy-group: ecommerce.products
  /ecommerce/orders:
    get:
      operationId: listEcommerceOrders
      summary: List Orders
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedEcommerceOrderOutput'
      tags: &ref_87
        - ecommerce/orders
      x-speakeasy-group: ecommerce.orders
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createEcommerceOrder
      summary: Create Orders
      description: Create Orders in any supported Ecommerce software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: false
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedEcommerceOrderInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedEcommerceOrderOutput'
      tags: *ref_87
      x-speakeasy-group: ecommerce.orders
  /ecommerce/orders/{id}:
    get:
      operationId: retrieveEcommerceOrder
      summary: Retrieve Orders
      description: Retrieve orders from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the order you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedEcommerceOrderOutput'
      tags: *ref_87
      x-speakeasy-group: ecommerce.orders
  /ecommerce/customers:
    get:
      operationId: listEcommerceCustomers
      summary: List Customers
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnifiedEcommerceCustomerOutput'
      tags: &ref_88
        - ecommerce/customers
      x-speakeasy-group: ecommerce.customers
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ecommerce/customers/{id}:
    get:
      operationId: retrieveEcommerceCustomer
      summary: Retrieve Customers
      description: Retrieve customers from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the customer you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedEcommerceCustomerOutput'
      tags: *ref_88
      x-speakeasy-group: ecommerce.customers
  /ecommerce/fulfillments:
    get:
      operationId: listEcommerceFulfillments
      summary: List Fulfillments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedEcommerceFulfillmentOutput
      tags: &ref_89
        - ecommerce/fulfillments
      x-speakeasy-group: ecommerce.fulfillments
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
  /ecommerce/fulfillments/{id}:
    get:
      operationId: retrieveEcommerceFulfillment
      summary: Retrieve Fulfillments
      description: Retrieve fulfillments from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the fulfillment you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedEcommerceFulfillmentOutput'
      tags: *ref_89
      x-speakeasy-group: ecommerce.fulfillments
  /ticketing/attachments:
    get:
      operationId: listTicketingAttachments
      summary: List  Attachments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          example: true
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          example: 10
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          example: 1b8b05bb-5273-4012-b520-8657b0b90874
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UnifiedTicketingAttachmentOutput
      tags: &ref_90
        - ticketing/attachments
      x-speakeasy-group: ticketing.attachments
      x-speakeasy-pagination:
        type: cursor
        inputs:
          - name: cursor
            in: parameters
            type: cursor
        outputs:
          nextCursor: $.next_cursor
    post:
      operationId: createTicketingAttachment
      summary: Create Attachments
      description: Create Attachments in any supported Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedTicketingAttachmentInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingAttachmentOutput'
      tags: *ref_90
      x-speakeasy-group: ticketing.attachments
  /ticketing/attachments/{id}:
    get:
      operationId: retrieveTicketingAttachment
      summary: Retrieve Attachments
      description: Retrieve Attachments from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the attachment you want to retrive.
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketingAttachmentOutput'
      tags: *ref_90
      x-speakeasy-group: ticketing.attachments
info:
  title: Panora API
  description: A unified API to ship integrations
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: https://api.panora.dev
    description: Production server
  - url: https://api-sandbox.panora.dev
    description: Sandbox server
  - url: https://api-dev.panora.dev
    description: Development server
components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    LoginDto:
      type: object
      properties:
        id_user:
          type: string
        email:
          type: string
        password_hash:
          type: string
      required:
        - email
        - password_hash
    Connection:
      type: object
      properties:
        id_connection:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Unique identifier for the connection
        status:
          type: string
          example: active
          description: Status of the connection
        provider_slug:
          type: string
          example: hubspot
          description: Slug for the provider
        vertical:
          type: string
          example: crm
          description: Vertical category of the connection
        account_url:
          type: string
          example: https://example.com/account
          description: URL of the account
        token_type:
          type: string
          example: oauth2
          enum:
            - oauth2
            - apikey
            - basic
          description: Strategy type
        access_token:
          type: string
          example: access_token_example
          description: Access token for the connection
        refresh_token:
          type: string
          example: refresh_token_example
          description: Refresh token for the connection
        expiration_timestamp:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: Expiration timestamp of the access token
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: Timestamp when the connection was created
        connection_token:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: UUID Token for the connection
        id_project:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174001
          description: Project ID associated with the connection
        id_linked_user:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174002
          description: Linked user ID associated with the connection
      required:
        - id_connection
        - status
        - provider_slug
        - vertical
        - account_url
        - token_type
        - access_token
        - refresh_token
        - expiration_timestamp
        - created_at
        - connection_token
        - id_project
        - id_linked_user
    WebhookResponse:
      type: object
      properties:
        id_webhook_endpoint:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The unique UUID of the webhook.
        endpoint_description:
          type: string
          nullable: true
          example: Webhook to receive connection events
          description: The description of the webhook.
        url:
          type: string
          example: https://acme.com/webhook_receiver
          nullable: true
          description: The endpoint url of the webhook.
        secret:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The secret of the webhook.
        active:
          type: boolean
          example: true
          nullable: true
          description: The status of the webhook.
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The created date of the webhook.
          nullable: true
        scope:
          example:
            - connection.created
          nullable: true
          description: The events that the webhook listen to.
          type: array
          items:
            type: string
        id_project:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The project id tied to the webhook.
        last_update:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The last update date of the webhook.
      required:
        - id_webhook_endpoint
        - endpoint_description
        - url
        - secret
        - active
        - created_at
        - scope
        - id_project
        - last_update
    WebhookDto:
      type: object
      properties:
        url:
          type: string
          example: https://acme.com/webhook_receiver
          nullable: true
          description: The endpoint url of the webhook.
        description:
          type: string
          example: Webhook to receive connection events
          nullable: true
          description: The description of the webhook.
        scope:
          example:
            - connection.created
          nullable: true
          description: The events that the webhook listen to.
          type: array
          items:
            type: string
      required:
        - url
        - scope
    SignatureVerificationDto:
      type: object
      properties:
        payload:
          type: object
          additionalProperties: true
          nullable: true
          description: The payload event of the webhook.
        signature:
          type: string
          nullable: true
          description: The signature of the webhook.
        secret:
          type: string
          nullable: true
          description: The secret of the webhook.
      required:
        - payload
        - signature
        - secret
    PaginatedDto:
      type: object
      properties:
        prev_cursor:
          type: string
          nullable: true
        next_cursor:
          type: string
          nullable: true
        data:
          type: array
          items:
            type: object
      required:
        - prev_cursor
        - next_cursor
        - data
    UnifiedTicketingCommentInput:
      type: object
      properties:
        body:
          type: string
          nullable: true
          example: Assigned to Eric !
          description: The body of the comment
        html_body:
          type: string
          nullable: true
          example: <p>Assigned to Eric !</p>
          description: The html body of the comment
        is_private:
          type: boolean
          nullable: true
          example: false
          description: The public status of the comment
        creator_type:
          type: string
          nullable: true
          example: USER
          enum: &ref_120
            - USER
            - CONTACT
          description: >-
            The creator type of the comment. Authorized values are either USER
            or CONTACT
        ticket_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the ticket the comment is tied to
        contact_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: >-
            The UUID of the contact which the comment belongs to (if no user_id
            specified)
        user_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: >-
            The UUID of the user which the comment belongs to (if no contact_id
            specified)
        attachments:
          type: array
          items: &ref_121
            oneOf:
              - type: string
              - $ref: '#/components/schemas/UnifiedTicketingAttachmentOutput'
          nullable: true
          example: &ref_122
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The attachements UUIDs tied to the comment
      required:
        - body
    UnifiedTicketingTicketOutput:
      type: object
      properties:
        name:
          type: string
          example: Customer Service Inquiry
          nullable: true
          description: The name of the ticket
        status:
          type: string
          example: OPEN
          enum: &ref_91
            - OPEN
            - CLOSED
          nullable: true
          description: The status of the ticket. Authorized values are OPEN or CLOSED.
        description:
          type: string
          example: Help customer
          nullable: true
          description: The description of the ticket
        due_date:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The date the ticket is due
        type:
          type: string
          example: BUG
          enum: &ref_92
            - BUG
            - SUBTASK
            - TASK
            - TO-DO
          nullable: true
          description: >-
            The type of the ticket. Authorized values are PROBLEM, QUESTION, or
            TASK
        parent_ticket:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the parent ticket
        collections:
          type: array
          items: &ref_93
            oneOf:
              - type: string
              - $ref: '#/components/schemas/UnifiedTicketingCollectionOutput'
          example: &ref_94
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The collection UUIDs the ticket belongs to
        tags:
          type: array
          items: &ref_95
            oneOf:
              - type: string
              - $ref: '#/components/schemas/UnifiedTicketingTagOutput'
          example: &ref_96
            - my_tag
            - urgent_tag
          nullable: true
          description: The tags names of the ticket
        completed_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The date the ticket has been completed
        priority:
          type: string
          example: HIGH
          enum: &ref_97
            - HIGH
            - MEDIUM
            - LOW
          nullable: true
          description: >-
            The priority of the ticket. Authorized values are HIGH, MEDIUM or
            LOW.
        assigned_to:
          example: &ref_98
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The users UUIDs the ticket is assigned to
          type: array
          items:
            type: string
        comment:
          example: &ref_99
            content: Assigned the issue !
          nullable: true
          description: The comment of the ticket
          allOf:
            - $ref: '#/components/schemas/UnifiedTicketingCommentInput'
        account_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the account which the ticket belongs to
        contact_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the contact which the ticket belongs to
        attachments:
          type: array
          items: &ref_100
            oneOf:
              - type: string
              - $ref: '#/components/schemas/UnifiedTicketingAttachmentInput'
          example: &ref_101
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The attachements UUIDs tied to the ticket
          nullable: true
        field_mappings:
          type: object
          example: &ref_102
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the ticket between the remote 3rd party
            & Panora
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the ticket
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The id of the ticket in the context of the 3rd Party
        remote_data:
          type: object
          example:
            key1: value1
            key2: 42
            key3: true
          nullable: true
          additionalProperties: true
          description: The remote data of the ticket in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
      required:
        - name
        - description
    UnifiedTicketingTicketInput:
      type: object
      properties:
        name:
          type: string
          example: Customer Service Inquiry
          nullable: true
          description: The name of the ticket
        status:
          type: string
          example: OPEN
          enum: *ref_91
          nullable: true
          description: The status of the ticket. Authorized values are OPEN or CLOSED.
        description:
          type: string
          example: Help customer
          nullable: true
          description: The description of the ticket
        due_date:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The date the ticket is due
        type:
          type: string
          example: BUG
          enum: *ref_92
          nullable: true
          description: >-
            The type of the ticket. Authorized values are PROBLEM, QUESTION, or
            TASK
        parent_ticket:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the parent ticket
        collections:
          type: array
          items: *ref_93
          example: *ref_94
          nullable: true
          description: The collection UUIDs the ticket belongs to
        tags:
          type: array
          items: *ref_95
          example: *ref_96
          nullable: true
          description: The tags names of the ticket
        completed_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The date the ticket has been completed
        priority:
          type: string
          example: HIGH
          enum: *ref_97
          nullable: true
          description: >-
            The priority of the ticket. Authorized values are HIGH, MEDIUM or
            LOW.
        assigned_to:
          example: *ref_98
          nullable: true
          description: The users UUIDs the ticket is assigned to
          type: array
          items:
            type: string
        comment:
          example: *ref_99
          nullable: true
          description: The comment of the ticket
          allOf:
            - $ref: '#/components/schemas/UnifiedTicketingCommentInput'
        account_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the account which the ticket belongs to
        contact_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the contact which the ticket belongs to
        attachments:
          type: array
          items: *ref_100
          example: *ref_101
          description: The attachements UUIDs tied to the ticket
          nullable: true
        field_mappings:
          type: object
          example: *ref_102
          nullable: true
          description: >-
            The custom field mappings of the ticket between the remote 3rd party
            & Panora
          additionalProperties: true
      required:
        - name
        - description
    UnifiedTicketingUserOutput:
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: The name of the user
          example: John Doe
        email_address:
          type: string
          nullable: true
          description: The email address of the user
          example: john.doe@example.com
        teams:
          nullable: true
          description: The teams whose the user is part of
          example:
            - team1
            - team2
          type: array
          items:
            type: string
        account_id:
          type: string
          nullable: true
          description: The account or organization the user is part of
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the user between the remote 3rd party &
            Panora
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the user
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The id of the user in the context of the 3rd Party
        remote_data:
          type: object
          example:
            key1: value1
            key2: 42
            key3: true
          nullable: true
          additionalProperties: true
          description: The remote data of the user in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2023-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
      required:
        - name
        - email_address
    UnifiedTicketingAccountOutput:
      type: object
      properties:
        name:
          type: string
          example: My Personal Account
          nullable: true
          description: The name of the account
        domains:
          example:
            - acme.com
            - acme-test.com
          nullable: true
          description: The domains of the account
          type: array
          items:
            type: string
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the account between the remote 3rd
            party & Panora
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the account
        remote_id:
          type: string
          example: id_1
          description: The remote ID of the account in the context of the 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the account in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The created date of the account
          nullable: true
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the account
          nullable: true
      required:
        - name
    UnifiedTicketingContactOutput:
      type: object
      properties:
        name:
          type: string
          example: Joe
          nullable: true
          description: The name of the contact
        email_address:
          type: string
          example: joedoe@acme.org
          nullable: true
          description: The email address of the contact
        phone_number:
          type: string
          example: +33 6 50 11 11 10
          nullable: true
          description: The phone number of the contact
        details:
          type: string
          example: Contact Details
          nullable: true
          description: The details of the contact
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the contact between the remote 3rd
            party & Panora
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the contact
        remote_id:
          type: string
          example: id_1
          description: The remote ID of the contact in the context of the 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the contact in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
      required:
        - name
        - email_address
    ResyncStatusDto:
      type: object
      properties:
        timestamp:
          format: date-time
          type: string
          example: ''
          nullable: true
        vertical:
          type: string
          example: ticketing
          enum:
            - ticketing
            - ats
            - accounting
            - hris
            - crm
            - filestorage
            - ecommerce
            - marketingautomation
          nullable: true
        provider:
          type: string
          example: gitlab
          nullable: true
        status:
          type: string
          example: success
          enum:
            - success
            - fail
          nullable: true
      required:
        - timestamp
        - vertical
        - provider
        - status
    Email:
      type: object
      properties:
        email_address:
          type: string
          nullable: true
          description: The email address
        email_address_type:
          type: string
          enum:
            - PERSONAL
            - WORK
          nullable: true
          description: >-
            The email address type. Authorized values are either PERSONAL or
            WORK.
        owner_type:
          type: string
          enum:
            - COMPANY
            - CONTACT
          nullable: true
          description: The owner type of an email
      required:
        - email_address
        - email_address_type
    Address:
      type: object
      properties:
        street_1:
          type: string
          nullable: true
          example: 5th Avenue
          description: The street
        street_2:
          type: string
          nullable: true
          example: Street 2
          description: 'More information about the street '
        city:
          type: string
          nullable: true
          example: New York
          description: The city
        state:
          type: string
          example: New York
          nullable: true
          description: The state
        postal_code:
          type: string
          example: '10001'
          nullable: true
          description: The postal code
        country:
          type: string
          example: United States of America
          nullable: true
          description: The country
        address_type:
          type: string
          enum:
            - PERSONAL
            - WORK
          nullable: true
          example: PERSONAL
          description: The address type. Authorized values are either PERSONAL or WORK.
        owner_type:
          type: string
          nullable: true
          description: The owner type of the address
      required:
        - street_1
        - street_2
        - city
        - state
        - postal_code
        - country
        - address_type
        - owner_type
    Phone:
      type: object
      properties:
        phone_number:
          type: string
          nullable: true
          description: >-
            The phone number starting with a plus (+) followed by the country
            code (e.g +336676778890 for France)
        phone_type:
          type: string
          enum:
            - MOBILE
            - WORK
          nullable: true
          description: The phone type. Authorized values are either MOBILE or WORK
        owner_type:
          type: string
          nullable: true
          description: The owner type of a phone number
      required:
        - phone_number
        - phone_type
    UnifiedCrmCompanyOutput:
      type: object
      properties:
        name:
          type: string
          example: Acme
          description: The name of the company
          nullable: true
        industry:
          type: string
          example: ACCOUNTING
          enum: &ref_103
            - ACCOUNTING
            - AIRLINES_AVIATION
            - ALTERNATIVE_DISPUTE_RESOLUTION
            - ALTERNATIVE_MEDICINE
            - ANIMATION
            - APPAREL_FASHION
            - ARCHITECTURE_PLANNING
            - ARTS_AND_CRAFTS
            - AUTOMOTIVE
            - AVIATION_AEROSPACE
            - BANKING
            - BIOTECHNOLOGY
            - BROADCAST_MEDIA
            - BUILDING_MATERIALS
            - BUSINESS_SUPPLIES_AND_EQUIPMENT
            - CAPITAL_MARKETS
            - CHEMICALS
            - CIVIC_SOCIAL_ORGANIZATION
            - CIVIL_ENGINEERING
            - COMMERCIAL_REAL_ESTATE
            - COMPUTER_NETWORK_SECURITY
            - COMPUTER_GAMES
            - COMPUTER_HARDWARE
            - COMPUTER_NETWORKING
            - COMPUTER_SOFTWARE
            - INTERNET
            - CONSTRUCTION
            - CONSUMER_ELECTRONICS
            - CONSUMER_GOODS
            - CONSUMER_SERVICES
            - COSMETICS
            - DAIRY
            - DEFENSE_SPACE
            - DESIGN
            - EDUCATION_MANAGEMENT
            - E_LEARNING
            - ELECTRICAL_ELECTRONIC_MANUFACTURING
            - ENTERTAINMENT
            - ENVIRONMENTAL_SERVICES
            - EVENTS_SERVICES
            - EXECUTIVE_OFFICE
            - FACILITIES_SERVICES
            - FARMING
            - FINANCIAL_SERVICES
            - FINE_ART
            - FISHERY
            - FOOD_BEVERAGES
            - FOOD_PRODUCTION
            - FUND_RAISING
            - FURNITURE
            - GAMBLING_CASINOS
            - GLASS_CERAMICS_CONCRETE
            - GOVERNMENT_ADMINISTRATION
            - GOVERNMENT_RELATIONS
            - GRAPHIC_DESIGN
            - HEALTH_WELLNESS_AND_FITNESS
            - HIGHER_EDUCATION
            - HOSPITAL_HEALTH_CARE
            - HOSPITALITY
            - HUMAN_RESOURCES
            - IMPORT_AND_EXPORT
            - INDIVIDUAL_FAMILY_SERVICES
            - INDUSTRIAL_AUTOMATION
            - INFORMATION_SERVICES
            - INFORMATION_TECHNOLOGY_AND_SERVICES
            - INSURANCE
            - INTERNATIONAL_AFFAIRS
            - INTERNATIONAL_TRADE_AND_DEVELOPMENT
            - INVESTMENT_BANKING
            - INVESTMENT_MANAGEMENT
            - JUDICIARY
            - LAW_ENFORCEMENT
            - LAW_PRACTICE
            - LEGAL_SERVICES
            - LEGISLATIVE_OFFICE
            - LEISURE_TRAVEL_TOURISM
            - LIBRARIES
            - LOGISTICS_AND_SUPPLY_CHAIN
            - LUXURY_GOODS_JEWELRY
            - MACHINERY
            - MANAGEMENT_CONSULTING
            - MARITIME
            - MARKET_RESEARCH
            - MARKETING_AND_ADVERTISING
            - MECHANICAL_OR_INDUSTRIAL_ENGINEERING
            - MEDIA_PRODUCTION
            - MEDICAL_DEVICES
            - MEDICAL_PRACTICE
            - MENTAL_HEALTH_CARE
            - MILITARY
            - MINING_METALS
            - MOTION_PICTURES_AND_FILM
            - MUSEUMS_AND_INSTITUTIONS
            - MUSIC
            - NANOTECHNOLOGY
            - NEWSPAPERS
            - NON_PROFIT_ORGANIZATION_MANAGEMENT
            - OIL_ENERGY
            - ONLINE_MEDIA
            - OUTSOURCING_OFFSHORING
            - PACKAGE_FREIGHT_DELIVERY
            - PACKAGING_AND_CONTAINERS
            - PAPER_FOREST_PRODUCTS
            - PERFORMING_ARTS
            - PHARMACEUTICALS
            - PHILANTHROPY
            - PHOTOGRAPHY
            - PLASTICS
            - POLITICAL_ORGANIZATION
            - PRIMARY_SECONDARY_EDUCATION
            - PRINTING
            - PROFESSIONAL_TRAINING_COACHING
            - PROGRAM_DEVELOPMENT
            - PUBLIC_POLICY
            - PUBLIC_RELATIONS_AND_COMMUNICATIONS
            - PUBLIC_SAFETY
            - PUBLISHING
            - RAILROAD_MANUFACTURE
            - RANCHING
            - REAL_ESTATE
            - RECREATIONAL_FACILITIES_AND_SERVICES
            - RELIGIOUS_INSTITUTIONS
            - RENEWABLES_ENVIRONMENT
            - RESEARCH
            - RESTAURANTS
            - RETAIL
            - SECURITY_AND_INVESTIGATIONS
            - SEMICONDUCTORS
            - SHIPBUILDING
            - SPORTING_GOODS
            - SPORTS
            - STAFFING_AND_RECRUITING
            - SUPERMARKETS
            - TELECOMMUNICATIONS
            - TEXTILES
            - THINK_TANKS
            - TOBACCO
            - TRANSLATION_AND_LOCALIZATION
            - TRANSPORTATION_TRUCKING_RAILROAD
            - UTILITIES
            - VENTURE_CAPITAL_PRIVATE_EQUITY
            - VETERINARY
            - WAREHOUSING
            - WHOLESALE
            - WINE_AND_SPIRITS
            - WIRELESS
            - WRITING_AND_EDITING
          description: >-
            The industry of the company. Authorized values can be found in the
            Industry enum.
          nullable: true
        number_of_employees:
          type: number
          example: 10
          description: The number of employees of the company
          nullable: true
        user_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user who owns the company
          nullable: true
        email_addresses:
          description: The email addresses of the company
          example: &ref_104
            - email_address: acme@gmail.com
              email_address_type: WORK
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Email'
        addresses:
          description: The addresses of the company
          example: &ref_105
            - street_1: 5th Avenue
              city: New York
              state: NY
              country: USA
              address_type: WORK
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phone_numbers:
          description: The phone numbers of the company
          example: &ref_106
            - phone_number: '+33660606067'
              phone_type: WORK
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        field_mappings:
          type: object
          example: &ref_107
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the company between the remote 3rd
            party & Panora
          nullable: true
          additionalProperties: true
        id:
          type: string
          description: The UUID of the company
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
        remote_id:
          type: string
          example: id_1
          description: The id of the company in the context of the Crm 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: The remote data of the company in the context of the Crm 3rd Party
          nullable: true
          additionalProperties: true
        created_at:
          type: object
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
          nullable: true
        modified_at:
          type: object
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
          nullable: true
      required:
        - name
    UnifiedCrmCompanyInput:
      type: object
      properties:
        name:
          type: string
          example: Acme
          description: The name of the company
          nullable: true
        industry:
          type: string
          example: ACCOUNTING
          enum: *ref_103
          description: >-
            The industry of the company. Authorized values can be found in the
            Industry enum.
          nullable: true
        number_of_employees:
          type: number
          example: 10
          description: The number of employees of the company
          nullable: true
        user_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user who owns the company
          nullable: true
        email_addresses:
          description: The email addresses of the company
          example: *ref_104
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Email'
        addresses:
          description: The addresses of the company
          example: *ref_105
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phone_numbers:
          description: The phone numbers of the company
          example: *ref_106
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        field_mappings:
          type: object
          example: *ref_107
          description: >-
            The custom field mappings of the company between the remote 3rd
            party & Panora
          nullable: true
          additionalProperties: true
      required:
        - name
    UnifiedCrmContactOutput:
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the contact
          example: John
          nullable: true
        last_name:
          type: string
          description: The last name of the contact
          example: Doe
          nullable: true
        email_addresses:
          nullable: true
          description: The email addresses of the contact
          example: &ref_108
            - email: john.doe@example.com
              type: WORK
          type: array
          items:
            $ref: '#/components/schemas/Email'
        phone_numbers:
          nullable: true
          description: The phone numbers of the contact
          example: &ref_109
            - phone: '1234567890'
              type: WORK
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        addresses:
          nullable: true
          description: The addresses of the contact
          example: &ref_110
            - street: 123 Main St
              city: Anytown
              state: CA
              zip: '12345'
              country: USA
              type: WORK
          type: array
          items:
            $ref: '#/components/schemas/Address'
        user_id:
          type: string
          nullable: true
          description: The UUID of the user who owns the contact
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        field_mappings:
          type: object
          example: &ref_111
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the contact between the remote 3rd
            party & Panora
          additionalProperties: true
        id:
          type: string
          description: The UUID of the contact
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The id of the contact in the context of the Crm 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the contact in the context of the Crm 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
      required:
        - first_name
        - last_name
    UnifiedCrmContactInput:
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the contact
          example: John
          nullable: true
        last_name:
          type: string
          description: The last name of the contact
          example: Doe
          nullable: true
        email_addresses:
          nullable: true
          description: The email addresses of the contact
          example: *ref_108
          type: array
          items:
            $ref: '#/components/schemas/Email'
        phone_numbers:
          nullable: true
          description: The phone numbers of the contact
          example: *ref_109
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        addresses:
          nullable: true
          description: The addresses of the contact
          example: *ref_110
          type: array
          items:
            $ref: '#/components/schemas/Address'
        user_id:
          type: string
          nullable: true
          description: The UUID of the user who owns the contact
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        field_mappings:
          type: object
          example: *ref_111
          nullable: true
          description: >-
            The custom field mappings of the contact between the remote 3rd
            party & Panora
          additionalProperties: true
      required:
        - first_name
        - last_name
    UnifiedCrmDealOutput:
      type: object
      properties:
        name:
          type: string
          example: Huge Contract with Acme
          description: The name of the deal
          nullable: true
        description:
          type: string
          example: Contract with Sales Operations Team
          description: The description of the deal
          nullable: true
        amount:
          type: number
          example: 1000
          description: The amount of the deal
          nullable: true
        user_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user who is on the deal
        stage_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the stage of the deal
        company_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the company tied to the deal
        field_mappings:
          type: object
          nullable: true
          example: &ref_112
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the company between the remote 3rd
            party & Panora
          additionalProperties: true
        id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the deal
        remote_id:
          type: string
          nullable: true
          example: id_1
          description: The id of the deal in the context of the Crm 3rd Party
        remote_data:
          type: object
          nullable: true
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          description: The remote data of the deal in the context of the Crm 3rd Party
        created_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
      required:
        - name
        - description
        - amount
    UnifiedCrmDealInput:
      type: object
      properties:
        name:
          type: string
          example: Huge Contract with Acme
          description: The name of the deal
          nullable: true
        description:
          type: string
          example: Contract with Sales Operations Team
          description: The description of the deal
          nullable: true
        amount:
          type: number
          example: 1000
          description: The amount of the deal
          nullable: true
        user_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user who is on the deal
        stage_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the stage of the deal
        company_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the company tied to the deal
        field_mappings:
          type: object
          nullable: true
          example: *ref_112
          description: >-
            The custom field mappings of the company between the remote 3rd
            party & Panora
          additionalProperties: true
      required:
        - name
        - description
        - amount
    UnifiedCrmEngagementOutput:
      type: object
      properties:
        content:
          type: string
          nullable: true
          example: Meeting call with CTO
          description: The content of the engagement
        direction:
          type: string
          nullable: true
          example: INBOUND
          enum: &ref_113
            - INBOUND
            - OUTBOUND
          description: >-
            The direction of the engagement. Authorized values are INBOUND or
            OUTBOUND
        subject:
          type: string
          example: Technical features planning
          nullable: true
          description: The subject of the engagement
        start_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The start time of the engagement
        end_time:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T22:00:00Z'
          description: The end time of the engagement
        type:
          type: string
          nullable: true
          example: MEETING
          enum: &ref_114
            - EMAIL
            - CALL
            - MEETING
          description: >-
            The type of the engagement. Authorized values are EMAIL, CALL or
            MEETING
        user_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user tied to the engagement
        company_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the company tied to the engagement
        contacts:
          nullable: true
          example: &ref_115
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUIDs of contacts tied to the engagement object
          type: array
          items:
            type: string
        field_mappings:
          type: object
          nullable: true
          example: &ref_116
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the engagement between the remote 3rd
            party & Panora
          additionalProperties: true
        id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the engagement
        remote_id:
          type: string
          nullable: true
          example: id_1
          description: The id of the engagement in the context of the Crm 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The remote data of the engagement in the context of the Crm 3rd
            Party
        created_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
      required:
        - type
    UnifiedCrmEngagementInput:
      type: object
      properties:
        content:
          type: string
          nullable: true
          example: Meeting call with CTO
          description: The content of the engagement
        direction:
          type: string
          nullable: true
          example: INBOUND
          enum: *ref_113
          description: >-
            The direction of the engagement. Authorized values are INBOUND or
            OUTBOUND
        subject:
          type: string
          example: Technical features planning
          nullable: true
          description: The subject of the engagement
        start_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The start time of the engagement
        end_time:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T22:00:00Z'
          description: The end time of the engagement
        type:
          type: string
          nullable: true
          example: MEETING
          enum: *ref_114
          description: >-
            The type of the engagement. Authorized values are EMAIL, CALL or
            MEETING
        user_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user tied to the engagement
        company_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the company tied to the engagement
        contacts:
          nullable: true
          example: *ref_115
          description: The UUIDs of contacts tied to the engagement object
          type: array
          items:
            type: string
        field_mappings:
          type: object
          nullable: true
          example: *ref_116
          description: >-
            The custom field mappings of the engagement between the remote 3rd
            party & Panora
          additionalProperties: true
      required:
        - type
    UnifiedCrmNoteOutput:
      type: object
      properties:
        content:
          type: string
          example: My notes taken during the meeting
          description: The content of the note
          nullable: true
        user_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user tied to the note
          nullable: true
        company_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the company tied to the note
        contact_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the contact tied to the note
          nullable: true
        deal_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the deal tied to the note
        field_mappings:
          type: object
          example: &ref_117
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the note between the remote 3rd party &
            Panora
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the note
        remote_id:
          type: string
          example: id_1
          description: The ID of the note in the context of the Crm 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the note in the context of the Crm 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
      required:
        - content
    UnifiedCrmNoteInput:
      type: object
      properties:
        content:
          type: string
          example: My notes taken during the meeting
          description: The content of the note
          nullable: true
        user_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user tied to the note
          nullable: true
        company_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the company tied to the note
        contact_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the contact tied to the note
          nullable: true
        deal_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the deal tied to the note
        field_mappings:
          type: object
          example: *ref_117
          nullable: true
          description: >-
            The custom field mappings of the note between the remote 3rd party &
            Panora
          additionalProperties: true
      required:
        - content
    UnifiedCrmStageOutput:
      type: object
      properties:
        stage_name:
          type: string
          example: Qualified
          description: The name of the stage
          nullable: true
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the stage between the remote 3rd party
            & Panora
          nullable: true
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the stage
          nullable: true
        remote_id:
          type: string
          example: id_1
          description: The ID of the stage in the context of the Crm 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: The remote data of the stage in the context of the Crm 3rd Party
          nullable: true
          additionalProperties: true
        created_at:
          type: object
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
          nullable: true
        modified_at:
          type: object
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
          nullable: true
      required:
        - stage_name
    UnifiedCrmTaskOutput:
      type: object
      properties:
        subject:
          type: string
          example: Answer customers
          description: The subject of the task
          nullable: true
        content:
          type: string
          example: Prepare email campaign
          description: The content of the task
          nullable: true
        status:
          type: string
          example: PENDING
          enum: &ref_118
            - PENDING
            - COMPLETED
          description: The status of the task. Authorized values are PENDING, COMPLETED.
          nullable: true
        due_date:
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The due date of the task
          nullable: true
        finished_date:
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The finished date of the task
          nullable: true
        user_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user tied to the task
          nullable: true
        company_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the company tied to the task
          nullable: true
        deal_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the deal tied to the task
          nullable: true
        field_mappings:
          type: object
          example: &ref_119
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the task between the remote 3rd party &
            Panora
          nullable: true
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the task
          nullable: true
        remote_id:
          type: string
          example: id_1
          description: The ID of the task in the context of the Crm 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            key1: value1
            key2: 42
            key3: true
          description: The remote data of the task in the context of the Crm 3rd Party
          nullable: true
          additionalProperties: true
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
          nullable: true
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
          nullable: true
      required:
        - subject
        - content
        - status
    UnifiedCrmTaskInput:
      type: object
      properties:
        subject:
          type: string
          example: Answer customers
          description: The subject of the task
          nullable: true
        content:
          type: string
          example: Prepare email campaign
          description: The content of the task
          nullable: true
        status:
          type: string
          example: PENDING
          enum: *ref_118
          description: The status of the task. Authorized values are PENDING, COMPLETED.
          nullable: true
        due_date:
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The due date of the task
          nullable: true
        finished_date:
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The finished date of the task
          nullable: true
        user_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user tied to the task
          nullable: true
        company_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the company tied to the task
          nullable: true
        deal_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the deal tied to the task
          nullable: true
        field_mappings:
          type: object
          example: *ref_119
          description: >-
            The custom field mappings of the task between the remote 3rd party &
            Panora
          nullable: true
          additionalProperties: true
      required:
        - subject
        - content
        - status
    UnifiedCrmUserOutput:
      type: object
      properties:
        name:
          type: string
          example: Jane Doe
          description: The name of the user
          nullable: true
        email:
          type: string
          example: jane.doe@example.com
          description: The email of the user
          nullable: true
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the user between the remote 3rd party &
            Panora
          nullable: true
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user
          nullable: true
        remote_id:
          type: string
          example: id_1
          description: The id of the user in the context of the Crm 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: The remote data of the user in the context of the Crm 3rd Party
          nullable: true
          additionalProperties: true
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
          nullable: true
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
          nullable: true
      required:
        - name
        - email
    UnifiedTicketingCollectionOutput:
      type: object
      properties:
        name:
          type: string
          example: My Personal Collection
          nullable: true
          description: The name of the collection
        description:
          type: string
          example: Collect issues
          nullable: true
          description: The description of the collection
        collection_type:
          type: string
          example: PROJECT
          enum:
            - PROJECT
            - LIST
          nullable: true
          description: >-
            The type of the collection. Authorized values are either PROJECT or
            LIST 
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the collection
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The id of the collection in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the collection in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
      required:
        - name
    UnifiedTicketingCommentOutput:
      type: object
      properties:
        body:
          type: string
          nullable: true
          example: Assigned to Eric !
          description: The body of the comment
        html_body:
          type: string
          nullable: true
          example: <p>Assigned to Eric !</p>
          description: The html body of the comment
        is_private:
          type: boolean
          nullable: true
          example: false
          description: The public status of the comment
        creator_type:
          type: string
          nullable: true
          example: USER
          enum: *ref_120
          description: >-
            The creator type of the comment. Authorized values are either USER
            or CONTACT
        ticket_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the ticket the comment is tied to
        contact_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: >-
            The UUID of the contact which the comment belongs to (if no user_id
            specified)
        user_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: >-
            The UUID of the user which the comment belongs to (if no contact_id
            specified)
        attachments:
          type: array
          items: *ref_121
          nullable: true
          example: *ref_122
          description: The attachements UUIDs tied to the comment
        id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the comment
        remote_id:
          type: string
          nullable: true
          example: id_1
          description: The id of the comment in the context of the 3rd Party
        remote_data:
          type: object
          nullable: true
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          description: The remote data of the comment in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
      required:
        - body
    UnifiedTicketingTagOutput:
      type: object
      properties:
        name:
          type: string
          example: urgent_tag
          nullable: true
          description: The name of the tag
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the tag between the remote 3rd party &
            Panora
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the tag
        remote_id:
          type: string
          example: id_1
          description: The remote ID of the tag in the context of the 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the tag in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The created date of the tag
          nullable: true
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the tag
          nullable: true
      required:
        - name
    UnifiedTicketingTeamOutput:
      type: object
      properties:
        name:
          type: string
          example: My team
          nullable: true
          description: The name of the team
        description:
          type: string
          example: Internal members
          nullable: true
          description: The description of the team
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the team between the remote 3rd party &
            Panora
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the team
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The id of the team in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the team in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
      required:
        - name
    LinkedUserResponse:
      type: object
      properties:
        id_linked_user:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
        linked_user_origin_id:
          type: string
          example: id_1
          nullable: true
        alias:
          type: string
          example: acme
          nullable: true
        id_project:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
      required:
        - id_linked_user
        - linked_user_origin_id
        - alias
        - id_project
    CreateLinkedUserDto:
      type: object
      properties:
        linked_user_origin_id:
          type: string
          description: The id of the user in the context of your own software
          example: id_1
        alias:
          type: string
          nullable: true
          description: Your company alias
          example: acme
      required:
        - linked_user_origin_id
        - alias
    CreateBatchLinkedUserDto:
      type: object
      properties:
        linked_user_origin_ids:
          nullable: true
          description: The ids of the users in the context of your own software
          example:
            - id_1
          type: array
          items:
            type: string
        alias:
          type: string
          nullable: true
          description: Your company alias
          example: acme
      required:
        - linked_user_origin_ids
        - alias
    ProjectResponse:
      type: object
      properties:
        id_project:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Unique identifier for the project
        name:
          type: string
          example: My Project
          description: Name of the project
        sync_mode:
          type: string
          example: automatic
          description: Synchronization mode of the project
        pull_frequency:
          type: number
          example: 3600
          description: Frequency of pulling data in seconds
        redirect_url:
          type: string
          example: https://example.com/redirect
          description: Redirect URL for the project
        id_user:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174001
          description: User ID associated with the project
        id_connector_set:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174002
          description: Connector set ID associated with the project
      required:
        - id_project
        - name
        - sync_mode
        - id_user
        - id_connector_set
    CreateProjectDto:
      type: object
      properties:
        name:
          type: string
          example: Project Name
          description: The name of the project
        id_organization:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The organization ID
        id_user:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The user ID
      required:
        - name
        - id_user
    CustomFieldResponse:
      type: object
      properties:
        id_attribute:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: Attribute Id
        status:
          type: string
          nullable: true
          example: ''
          description: Attribute Status
        ressource_owner_type:
          type: string
          example: ''
          nullable: true
          description: Attribute Ressource Owner Type
        slug:
          type: string
          nullable: true
          example: fav_dish
          description: Attribute Slug
        description:
          type: string
          nullable: true
          example: My favorite dish
          description: Attribute Description
        data_type:
          type: string
          nullable: true
          example: string
          enum:
            - string
            - number
          description: Attribute Data Type
        remote_id:
          type: string
          nullable: true
          example: id_1
          description: Attribute Remote Id
        source:
          type: string
          nullable: true
          example: hubspot
          description: Attribute Source
        id_entity:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: Attribute Entity Id
        id_project:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: Attribute Project Id
        scope:
          type: string
          nullable: true
          example: ''
          description: Attribute Scope
        id_consumer:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: Attribute Consumer Id
        created_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: Attribute Created Date
        modified_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: Attribute Modified Date
      required:
        - id_attribute
        - status
        - ressource_owner_type
        - slug
        - description
        - data_type
        - remote_id
        - source
        - id_entity
        - id_project
        - scope
        - id_consumer
        - created_at
        - modified_at
    DefineTargetFieldDto:
      type: object
      properties:
        object_type_owner:
          type: string
          example: company
          enum:
            - company
            - contact
            - deal
            - lead
            - note
            - task
            - engagement
            - stage
            - user
          nullable: true
        name:
          type: string
          nullable: true
          example: fav_dish
          description: The name of the target field
        description:
          type: string
          nullable: true
          example: My favorite dish
          description: The description of the target field
        data_type:
          type: string
          nullable: true
          example: string
          enum:
            - string
            - number
          description: The data type of the target field
      required:
        - object_type_owner
        - name
        - description
        - data_type
    CustomFieldCreateDto:
      type: object
      properties:
        object_type_owner:
          type: string
          example: company
          enum:
            - company
            - contact
            - deal
            - lead
            - note
            - task
            - engagement
            - stage
            - user
          nullable: true
        name:
          type: string
          nullable: true
          example: my_favorite_dish
          description: The name of the custom field
        description:
          type: string
          nullable: true
          example: Favorite Dish
          description: The description of the custom field
        data_type:
          type: string
          example: string
          nullable: true
          enum:
            - string
            - number
          description: The data type of the custom field
        source_custom_field_id:
          type: string
          nullable: true
          example: id_1
          description: The source custom field ID
        source_provider:
          type: string
          nullable: true
          example: hubspot
          description: The name of the source software/provider
        linked_user_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The linked user ID
      required:
        - object_type_owner
        - name
        - description
        - data_type
        - source_custom_field_id
        - source_provider
        - linked_user_id
    MapFieldToProviderDto:
      type: object
      properties:
        attributeId:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The attribute ID
        source_custom_field_id:
          type: string
          nullable: true
          example: id_1
          description: The source custom field ID
        source_provider:
          type: string
          nullable: true
          example: hubspot
          description: The source provider
        linked_user_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The linked user ID
      required:
        - attributeId
        - source_custom_field_id
        - source_provider
        - linked_user_id
    EventResponse:
      type: object
      properties:
        id_event:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Unique identifier for the event
        id_connection:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174001
          description: Connection ID associated with the event
        id_project:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174002
          description: Project ID associated with the event
        type:
          type: string
          example: connection.created
          enum:
            - crm.contact.created
            - crm.contact.pulled
            - crm.company.created
            - crm.company.pulled
            - crm.deal.created
            - crm.deal.pulled
            - crm.engagement.created
            - crm.engagement.pulled
            - crm.note.created
            - crm.note.pulled
            - crm.stage.pulled
            - crm.task.pulled
            - crm.task.created
            - crm.user.pulled
            - ticketing.ticket.created
            - ticketing.ticket.pulled
            - ticketing.comment.created
            - ticketing.comment.pulled
            - ticketing.attachment.created
            - ticketing.attachment.pulled
            - ticketing.collection.pulled
            - ticketing.account.pulled
            - ticketing.contact.pulled
            - ticketing.tag.pulled
            - ticketing.team.pulled
            - ticketing.user.pulled
            - ats.activity.created
            - ats.activity.pulled
            - ats.application.created
            - ats.application.pulled
            - ats.attachment.created
            - ats.attachment.pulled
            - ats.candidate.created
            - ats.candidate.pulled
            - ats.department.pulled
            - ats.eecos.pulled
            - ats.interview.created
            - ats.interview.pulled
            - ats.job.pulled
            - ats.jobinterviewstage.pulled
            - ats.offer.created
            - ats.office.pulled
            - ats.rejectreason.pulled
            - ats.scorecard.pulled
            - ats.tag.pulled
            - ats.user.pulled
            - filestorage.file.created
            - filestorage.file.pulled
            - filestorage.folder.created
            - filestorage.folder.pulled
            - filestorage.group.pulled
            - filestorage.user.pulled
            - filestorage.drive.pulled
            - filestorage.permission.pulled
            - filestorage.sharedlink.pulled
            - connection.created
          description: Scope of the event
        status:
          type: string
          example: success
          enum:
            - success
            - fail
          description: Status of the event
        direction:
          type: string
          example: '0'
          description: Direction of the event
        method:
          type: string
          example: POST
          enum:
            - GET
            - POST
            - PUT
            - DELETE
          description: HTTP method used for the event
        url:
          type: string
          example: /crm/companies
          description: URL associated with the event
        provider:
          type: string
          example: hubspot
          description: Provider associated with the event
        timestamp:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: Timestamp of the event
        id_linked_user:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174003
          description: Linked user ID associated with the event
      required:
        - id_event
        - id_connection
        - id_project
        - type
        - status
        - direction
        - method
        - url
        - provider
        - timestamp
        - id_linked_user
    PassThroughRequestDto:
      type: object
      properties:
        method:
          enum:
            - GET
            - POST
          type: string
        path:
          type: string
          nullable: true
        data:
          type: object
        request_format:
          oneOf:
            - type: object
              additionalProperties: true
            - type: array
              items:
                type: object
                additionalProperties: true
          nullable: true
        overrideBaseUrl:
          type: object
          additionalProperties: true
          nullable: true
        headers:
          type: object
      required:
        - method
        - path
    UnifiedHrisBankinfoOutput:
      type: object
      properties: {}
    UnifiedHrisBenefitOutput:
      type: object
      properties: {}
    UnifiedHrisCompanyOutput:
      type: object
      properties: {}
    UnifiedHrisDependentOutput:
      type: object
      properties: {}
    UnifiedHrisEmployeepayrollrunOutput:
      type: object
      properties: {}
    UnifiedHrisEmployeeOutput:
      type: object
      properties: {}
    UnifiedHrisEmployeeInput:
      type: object
      properties: {}
    UnifiedHrisEmployerbenefitOutput:
      type: object
      properties: {}
    UnifiedHrisEmploymentOutput:
      type: object
      properties: {}
    UnifiedHrisGroupOutput:
      type: object
      properties: {}
    UnifiedHrisLocationOutput:
      type: object
      properties: {}
    UnifiedHrisPaygroupOutput:
      type: object
      properties: {}
    UnifiedHrisPayrollrunOutput:
      type: object
      properties: {}
    UnifiedHrisTimeoffOutput:
      type: object
      properties: {}
    UnifiedHrisTimeoffInput:
      type: object
      properties: {}
    UnifiedHrisTimeoffbalanceOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationActionOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationActionInput:
      type: object
      properties: {}
    UnifiedMarketingautomationAutomationOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationAutomationInput:
      type: object
      properties: {}
    UnifiedMarketingautomationCampaignOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationCampaignInput:
      type: object
      properties: {}
    UnifiedMarketingautomationContactOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationContactInput:
      type: object
      properties: {}
    UnifiedMarketingautomationEmailOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationEventOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationListOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationListInput:
      type: object
      properties: {}
    UnifiedMarketingautomationMessageOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationTemplateOutput:
      type: object
      properties: {}
    UnifiedMarketingautomationTemplateInput:
      type: object
      properties: {}
    UnifiedMarketingautomationUserOutput:
      type: object
      properties: {}
    UnifiedAtsActivityOutput:
      type: object
      properties:
        activity_type:
          type: string
          enum: &ref_123
            - NOTE
            - EMAIL
            - OTHER
          example: NOTE
          nullable: true
          description: The type of activity
        subject:
          type: string
          example: Email subject
          nullable: true
          description: The subject of the activity
        body:
          type: string
          example: Dear Diana, I love you
          nullable: true
          description: The body of the activity
        visibility:
          type: string
          enum: &ref_124
            - ADMIN_ONLY
            - PUBLIC
            - PRIVATE
          example: PUBLIC
          nullable: true
          description: The visibility of the activity
        candidate_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the candidate
        remote_created_at:
          type: string
          format: date-time
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The remote creation date of the activity
        field_mappings:
          type: object
          example: &ref_125
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the activity
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the activity in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the activity in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsActivityInput:
      type: object
      properties:
        activity_type:
          type: string
          enum: *ref_123
          example: NOTE
          nullable: true
          description: The type of activity
        subject:
          type: string
          example: Email subject
          nullable: true
          description: The subject of the activity
        body:
          type: string
          example: Dear Diana, I love you
          nullable: true
          description: The body of the activity
        visibility:
          type: string
          enum: *ref_124
          example: PUBLIC
          nullable: true
          description: The visibility of the activity
        candidate_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the candidate
        remote_created_at:
          type: string
          format: date-time
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The remote creation date of the activity
        field_mappings:
          type: object
          example: *ref_125
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
    UnifiedAtsApplicationOutput:
      type: object
      properties:
        applied_at:
          format: date-time
          type: string
          nullable: true
          description: The application date
          example: '2024-10-01T12:00:00Z'
        rejected_at:
          format: date-time
          type: string
          nullable: true
          description: The rejection date
          example: '2024-10-01T12:00:00Z'
        offers:
          nullable: true
          description: The offers UUIDs for the application
          example: &ref_126
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
            - 12345678-1234-1234-1234-123456789012
          type: array
          items:
            type: string
        source:
          type: string
          nullable: true
          description: The source of the application
          example: Source Name
        credited_to:
          type: string
          nullable: true
          description: The UUID of the person credited for the application
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        current_stage:
          type: string
          nullable: true
          description: The UUID of the current stage of the application
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        reject_reason:
          type: string
          nullable: true
          description: The rejection reason for the application
          example: Candidate not experienced enough
        candidate_id:
          type: string
          nullable: true
          description: The UUID of the candidate
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        job_id:
          type: string
          description: The UUID of the job
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        field_mappings:
          type: object
          example: &ref_127
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          nullable: true
          description: The UUID of the application
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        remote_id:
          type: string
          nullable: true
          description: The remote ID of the application in the context of the 3rd Party
          example: id_1
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the application in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
        remote_created_at:
          format: date-time
          type: string
          nullable: true
          description: The remote created date of the object
        remote_modified_at:
          format: date-time
          type: string
          nullable: true
          description: The remote modified date of the object
    UnifiedAtsApplicationInput:
      type: object
      properties:
        applied_at:
          format: date-time
          type: string
          nullable: true
          description: The application date
          example: '2024-10-01T12:00:00Z'
        rejected_at:
          format: date-time
          type: string
          nullable: true
          description: The rejection date
          example: '2024-10-01T12:00:00Z'
        offers:
          nullable: true
          description: The offers UUIDs for the application
          example: *ref_126
          type: array
          items:
            type: string
        source:
          type: string
          nullable: true
          description: The source of the application
          example: Source Name
        credited_to:
          type: string
          nullable: true
          description: The UUID of the person credited for the application
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        current_stage:
          type: string
          nullable: true
          description: The UUID of the current stage of the application
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        reject_reason:
          type: string
          nullable: true
          description: The rejection reason for the application
          example: Candidate not experienced enough
        candidate_id:
          type: string
          nullable: true
          description: The UUID of the candidate
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        job_id:
          type: string
          description: The UUID of the job
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        field_mappings:
          type: object
          example: *ref_127
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
    UnifiedAtsAttachmentOutput:
      type: object
      properties:
        file_url:
          type: string
          example: https://example.com/file.pdf
          nullable: true
          description: The URL of the file
        file_name:
          type: string
          example: file.pdf
          nullable: true
          description: The name of the file
        attachment_type:
          type: string
          example: RESUME
          enum: &ref_128
            - RESUME
            - COVER_LETTER
            - OFFER_LETTER
            - OTHER
          nullable: true
          description: The type of the file
        remote_created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote creation date of the attachment
        remote_modified_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote modification date of the attachment
        candidate_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the candidate
        field_mappings:
          type: object
          example: &ref_129
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the attachment
        remote_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The remote ID of the attachment
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the attachment in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsAttachmentInput:
      type: object
      properties:
        file_url:
          type: string
          example: https://example.com/file.pdf
          nullable: true
          description: The URL of the file
        file_name:
          type: string
          example: file.pdf
          nullable: true
          description: The name of the file
        attachment_type:
          type: string
          example: RESUME
          enum: *ref_128
          nullable: true
          description: The type of the file
        remote_created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote creation date of the attachment
        remote_modified_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote modification date of the attachment
        candidate_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the candidate
        field_mappings:
          type: object
          example: *ref_129
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
    Url:
      type: object
      properties:
        url:
          type: string
          nullable: true
          description: The url.
        url_type:
          type: string
          nullable: true
          description: The url type. It takes [WEBSITE | BLOG | LINKEDIN | GITHUB | OTHER]
      required:
        - url
        - url_type
    UnifiedAtsCandidateOutput:
      type: object
      properties:
        first_name:
          type: string
          example: Joe
          nullable: true
          description: The first name of the candidate
        last_name:
          type: string
          example: Doe
          nullable: true
          description: The last name of the candidate
        company:
          type: string
          example: Acme
          nullable: true
          description: The company of the candidate
        title:
          type: string
          example: Analyst
          nullable: true
          description: The title of the candidate
        locations:
          type: string
          example: New York
          nullable: true
          description: The locations of the candidate
        is_private:
          type: boolean
          example: false
          nullable: true
          description: Whether the candidate is private
        email_reachable:
          type: boolean
          example: true
          nullable: true
          description: Whether the candidate is reachable by email
        remote_created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote creation date of the candidate
        remote_modified_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote modification date of the candidate
        last_interaction_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The last interaction date with the candidate
        attachments:
          type: array
          items: &ref_130
            oneOf:
              - type: string
              - $ref: '#/components/schemas/UnifiedAtsAttachmentOutput'
          example: &ref_131
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The attachments UUIDs of the candidate
        applications:
          type: array
          items: &ref_132
            oneOf:
              - type: string
              - $ref: '#/components/schemas/UnifiedAtsApplicationOutput'
          example: &ref_133
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The applications UUIDs of the candidate
        tags:
          type: array
          items: &ref_134
            oneOf:
              - type: string
              - $ref: '#/components/schemas/UnifiedAtsTagOutput'
          example: &ref_135
            - tag_1
            - tag_2
          nullable: true
          description: The tags of the candidate
        urls:
          example: &ref_136
            - url: mywebsite.com
              url_type: WEBSITE
          nullable: true
          description: >-
            The urls of the candidate, possible values for Url type are WEBSITE,
            BLOG, LINKEDIN, GITHUB, or OTHER
          type: array
          items:
            $ref: '#/components/schemas/Url'
        phone_numbers:
          example: &ref_137
            - phone_number: '+33660688899'
              phone_type: WORK
          nullable: true
          description: The phone numbers of the candidate
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        email_addresses:
          example: &ref_138
            - email_address: joedoe@gmail.com
              email_address_type: WORK
          nullable: true
          description: The email addresses of the candidate
          type: array
          items:
            $ref: '#/components/schemas/Email'
        field_mappings:
          type: object
          example: &ref_139
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the candidate
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The id of the candidate in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the candidate in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsCandidateInput:
      type: object
      properties:
        first_name:
          type: string
          example: Joe
          nullable: true
          description: The first name of the candidate
        last_name:
          type: string
          example: Doe
          nullable: true
          description: The last name of the candidate
        company:
          type: string
          example: Acme
          nullable: true
          description: The company of the candidate
        title:
          type: string
          example: Analyst
          nullable: true
          description: The title of the candidate
        locations:
          type: string
          example: New York
          nullable: true
          description: The locations of the candidate
        is_private:
          type: boolean
          example: false
          nullable: true
          description: Whether the candidate is private
        email_reachable:
          type: boolean
          example: true
          nullable: true
          description: Whether the candidate is reachable by email
        remote_created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote creation date of the candidate
        remote_modified_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote modification date of the candidate
        last_interaction_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The last interaction date with the candidate
        attachments:
          type: array
          items: *ref_130
          example: *ref_131
          nullable: true
          description: The attachments UUIDs of the candidate
        applications:
          type: array
          items: *ref_132
          example: *ref_133
          nullable: true
          description: The applications UUIDs of the candidate
        tags:
          type: array
          items: *ref_134
          example: *ref_135
          nullable: true
          description: The tags of the candidate
        urls:
          example: *ref_136
          nullable: true
          description: >-
            The urls of the candidate, possible values for Url type are WEBSITE,
            BLOG, LINKEDIN, GITHUB, or OTHER
          type: array
          items:
            $ref: '#/components/schemas/Url'
        phone_numbers:
          example: *ref_137
          nullable: true
          description: The phone numbers of the candidate
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        email_addresses:
          example: *ref_138
          nullable: true
          description: The email addresses of the candidate
          type: array
          items:
            $ref: '#/components/schemas/Email'
        field_mappings:
          type: object
          example: *ref_139
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
    UnifiedAtsDepartmentOutput:
      type: object
      properties:
        name:
          type: string
          example: Sales
          nullable: true
          description: The name of the department
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the department
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the department in the context of the 3rd Party
        remote_data:
          type: object
          example:
            key1: value1
            key2: 42
            key3: true
          nullable: true
          additionalProperties: true
          description: The remote data of the department in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2023-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsInterviewOutput:
      type: object
      properties:
        status:
          type: string
          enum: &ref_140
            - SCHEDULED
            - AWAITING_FEEDBACK
            - COMPLETED
          example: SCHEDULED
          nullable: true
          description: The status of the interview
        application_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the application
        job_interview_stage_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the job interview stage
        organized_by:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the organizer
        interviewers:
          example: &ref_141
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUIDs of the interviewers
          type: array
          items:
            type: string
        location:
          type: string
          example: San Francisco
          nullable: true
          description: The location of the interview
        start_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The start date and time of the interview
        end_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The end date and time of the interview
        remote_created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The remote creation date of the interview
        remote_updated_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The remote modification date of the interview
        field_mappings:
          type: object
          example: &ref_142
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the interview
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the interview in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the interview in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsInterviewInput:
      type: object
      properties:
        status:
          type: string
          enum: *ref_140
          example: SCHEDULED
          nullable: true
          description: The status of the interview
        application_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the application
        job_interview_stage_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the job interview stage
        organized_by:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the organizer
        interviewers:
          example: *ref_141
          nullable: true
          description: The UUIDs of the interviewers
          type: array
          items:
            type: string
        location:
          type: string
          example: San Francisco
          nullable: true
          description: The location of the interview
        start_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The start date and time of the interview
        end_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The end date and time of the interview
        remote_created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The remote creation date of the interview
        remote_updated_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The remote modification date of the interview
        field_mappings:
          type: object
          example: *ref_142
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
    UnifiedAtsJobinterviewstageOutput:
      type: object
      properties:
        name:
          type: string
          example: Second Call
          nullable: true
          description: The name of the job interview stage
        stage_order:
          type: number
          example: 1
          nullable: true
          description: The order of the stage
        job_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the job
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the job interview stage
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: >-
            The remote ID of the job interview stage in the context of the 3rd
            Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: >-
            The remote data of the job interview stage in the context of the 3rd
            Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsJobOutput:
      type: object
      properties:
        name:
          type: string
          example: Financial Analyst
          nullable: true
          description: The name of the job
        description:
          type: string
          example: Extract financial data and write detailed investment thesis
          nullable: true
          description: The description of the job
        code:
          type: string
          example: JOB123
          nullable: true
          description: The code of the job
        status:
          type: string
          enum:
            - OPEN
            - CLOSED
            - DRAFT
            - ARCHIVED
            - PENDING
          example: OPEN
          nullable: true
          description: The status of the job
        type:
          type: string
          example: POSTING
          enum:
            - POSTING
            - REQUISITION
            - PROFILE
          nullable: true
          description: The type of the job
        confidential:
          type: boolean
          example: true
          nullable: true
          description: Whether the job is confidential
        departments:
          example:
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The departments UUIDs associated with the job
          type: array
          items:
            type: string
        offices:
          example:
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The offices UUIDs associated with the job
          type: array
          items:
            type: string
        managers:
          example:
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The managers UUIDs associated with the job
          type: array
          items:
            type: string
        recruiters:
          example:
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The recruiters UUIDs associated with the job
          type: array
          items:
            type: string
        remote_created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote creation date of the job
        remote_updated_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote modification date of the job
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the job
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the job in the context of the 3rd Party
        remote_data:
          type: object
          example:
            key1: value1
            key2: 42
            key3: true
          nullable: true
          additionalProperties: true
          description: The remote data of the job in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2023-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsOfferOutput:
      type: object
      properties:
        created_by:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the creator
          nullable: true
        remote_created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The remote creation date of the offer
          nullable: true
        closed_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The closing date of the offer
          nullable: true
        sent_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The sending date of the offer
          nullable: true
        start_date:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The start date of the offer
          nullable: true
        status:
          type: string
          example: DRAFT
          enum:
            - DRAFT
            - APPROVAL_SENT
            - APPROVED
            - SENT
            - SENT_MANUALLY
            - OPENED
            - DENIED
            - SIGNED
            - DEPRECATED
          description: The status of the offer
          nullable: true
        application_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the application
          nullable: true
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
          nullable: true
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the offer
          nullable: true
        remote_id:
          type: string
          example: id_1
          description: The remote ID of the offer in the context of the 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: The remote data of the offer in the context of the 3rd Party
          nullable: true
          additionalProperties: true
        created_at:
          type: object
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
          nullable: true
        modified_at:
          type: object
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
          nullable: true
    UnifiedAtsOfficeOutput:
      type: object
      properties:
        name:
          type: string
          example: Condo Office 5th
          nullable: true
          description: The name of the office
        location:
          type: string
          example: New York
          nullable: true
          description: The location of the office
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the office
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the office in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the office in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsRejectreasonOutput:
      type: object
      properties:
        name:
          type: string
          example: Candidate inexperienced
          nullable: true
          description: The name of the reject reason
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          nullable: true
          description: The UUID of the reject reason
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
        remote_id:
          type: string
          nullable: true
          description: The remote ID of the reject reason in the context of the 3rd Party
          example: id_1
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the reject reason in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsScorecardOutput:
      type: object
      properties:
        overall_recommendation:
          type: string
          enum:
            - DEFINITELY_NO
            - 'NO'
            - 'YES'
            - STRONG_YES
            - NO_DECISION
          example: 'YES'
          nullable: true
          description: The overall recommendation
        application_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the application
        interview_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the interview
        remote_created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The remote creation date of the scorecard
        submitted_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The submission date of the scorecard
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the scorecard
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the scorecard in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the scorecard in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAtsTagOutput:
      type: object
      properties:
        name:
          type: string
          example: Important
          nullable: true
          description: The name of the tag
        id_ats_candidate:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the candidate
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the tag
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the tag in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the tag in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The creation date of the tag
        modified_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The modification date of the tag
    UnifiedAtsUserOutput:
      type: object
      properties:
        first_name:
          type: string
          example: John
          description: The first name of the user
          nullable: true
        last_name:
          type: string
          example: Doe
          description: The last name of the user
          nullable: true
        email:
          type: string
          example: john.doe@example.com
          description: The email of the user
          nullable: true
        disabled:
          type: boolean
          example: false
          description: Whether the user is disabled
          nullable: true
        access_role:
          type: string
          example: ADMIN
          enum:
            - SUPER_ADMIN
            - ADMIN
            - TEAM_MEMBER
            - LIMITED_TEAM_MEMBER
            - INTERVIEWER
          description: The access role of the user
          nullable: true
        remote_created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The remote creation date of the user
          nullable: true
        remote_modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The remote modification date of the user
          nullable: true
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
          nullable: true
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user
          nullable: true
        remote_id:
          type: string
          example: id_1
          description: The remote ID of the user in the context of the 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: The remote data of the user in the context of the 3rd Party
          nullable: true
          additionalProperties: true
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
          nullable: true
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
          nullable: true
    UnifiedAtsEeocsOutput:
      type: object
      properties:
        candidate_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the candidate
        submitted_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          format: date-time
          nullable: true
          description: The submission date of the EEOC
        race:
          type: string
          enum:
            - AMERICAN_INDIAN_OR_ALASKAN_NATIVE
            - ASIAN
            - BLACK_OR_AFRICAN_AMERICAN
            - HISPANIC_OR_LATINO
            - WHITE
            - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
            - TWO_OR_MORE_RACES
            - DECLINE_TO_SELF_IDENTIFY
          example: AMERICAN_INDIAN_OR_ALASKAN_NATIVE
          nullable: true
          description: The race of the candidate
        gender:
          type: string
          example: MALE
          enum:
            - MALE
            - FEMALE
            - NON_BINARY
            - OTHER
            - DECLINE_TO_SELF_IDENTIFY
          nullable: true
          description: The gender of the candidate
        veteran_status:
          type: string
          example: I_AM_NOT_A_PROTECTED_VETERAN
          enum:
            - I_AM_NOT_A_PROTECTED_VETERAN
            - >-
              I_IDENTIFY_AS_ONE_OR_MORE_OF_THE_CLASSIFICATIONS_OF_A_PROTECTED_VETERAN
            - I_DONT_WISH_TO_ANSWER
          nullable: true
          description: The veteran status of the candidate
        disability_status:
          type: string
          enum:
            - YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY
            - NO_I_DONT_HAVE_A_DISABILITY
            - I_DONT_WISH_TO_ANSWER
          example: YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY
          nullable: true
          description: The disability status of the candidate
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the EEOC
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the EEOC in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the EEOC in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedAccountingAccountOutput:
      type: object
      properties: {}
    UnifiedAccountingAccountInput:
      type: object
      properties: {}
    UnifiedAccountingAddressOutput:
      type: object
      properties: {}
    UnifiedAccountingAttachmentOutput:
      type: object
      properties: {}
    UnifiedAccountingAttachmentInput:
      type: object
      properties: {}
    UnifiedAccountingBalancesheetOutput:
      type: object
      properties: {}
    UnifiedAccountingCashflowstatementOutput:
      type: object
      properties: {}
    UnifiedAccountingCompanyinfoOutput:
      type: object
      properties: {}
    UnifiedAccountingContactOutput:
      type: object
      properties: {}
    UnifiedAccountingContactInput:
      type: object
      properties: {}
    UnifiedAccountingCreditnoteOutput:
      type: object
      properties: {}
    UnifiedAccountingExpenseOutput:
      type: object
      properties: {}
    UnifiedAccountingExpenseInput:
      type: object
      properties: {}
    UnifiedAccountingIncomestatementOutput:
      type: object
      properties: {}
    UnifiedAccountingInvoiceOutput:
      type: object
      properties: {}
    UnifiedAccountingInvoiceInput:
      type: object
      properties: {}
    UnifiedAccountingItemOutput:
      type: object
      properties: {}
    UnifiedAccountingJournalentryOutput:
      type: object
      properties: {}
    UnifiedAccountingJournalentryInput:
      type: object
      properties: {}
    UnifiedAccountingPaymentOutput:
      type: object
      properties: {}
    UnifiedAccountingPaymentInput:
      type: object
      properties: {}
    UnifiedAccountingPhonenumberOutput:
      type: object
      properties: {}
    UnifiedAccountingPurchaseorderOutput:
      type: object
      properties: {}
    UnifiedAccountingPurchaseorderInput:
      type: object
      properties: {}
    UnifiedAccountingTaxrateOutput:
      type: object
      properties: {}
    UnifiedAccountingTrackingcategoryOutput:
      type: object
      properties: {}
    UnifiedAccountingTransactionOutput:
      type: object
      properties: {}
    UnifiedAccountingVendorcreditOutput:
      type: object
      properties: {}
    UnifiedFilestorageDriveOutput:
      type: object
      properties:
        name:
          type: string
          nullable: true
          example: school
          description: The name of the drive
        remote_created_at:
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: When the third party s drive was created.
        drive_url:
          type: string
          nullable: true
          example: https://example.com/school
          description: The url of the drive
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the drive
        remote_id:
          type: string
          nullable: true
          example: id_1
          description: The id of the drive in the context of the 3rd Party
        remote_data:
          type: object
          nullable: true
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          description: The remote data of the drive in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
      required:
        - name
        - remote_created_at
        - drive_url
    UnifiedFilestorageFileOutput:
      type: object
      properties:
        name:
          type: string
          example: my_paris_photo.png
          description: The name of the file
          nullable: true
        file_url:
          type: string
          example: https://example.com/my_paris_photo.png
          description: The url of the file
          nullable: true
        mime_type:
          type: string
          example: application/pdf
          description: The mime type of the file
          nullable: true
        size:
          type: string
          example: '1024'
          description: The size of the file
          nullable: true
        folder_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the folder tied to the file
          nullable: true
        permission:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the permission tied to the file
          nullable: true
        shared_link:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the shared link tied to the file
          nullable: true
        field_mappings:
          type: object
          example: &ref_143
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
          nullable: true
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the file
          nullable: true
        remote_id:
          type: string
          example: id_1
          description: The id of the file in the context of the 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          description: The remote data of the file in the context of the 3rd Party
          nullable: true
          additionalProperties: true
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
          nullable: true
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
          nullable: true
      required:
        - name
        - file_url
        - mime_type
        - size
        - folder_id
        - permission
        - shared_link
    UnifiedFilestorageFileInput:
      type: object
      properties:
        name:
          type: string
          example: my_paris_photo.png
          description: The name of the file
          nullable: true
        file_url:
          type: string
          example: https://example.com/my_paris_photo.png
          description: The url of the file
          nullable: true
        mime_type:
          type: string
          example: application/pdf
          description: The mime type of the file
          nullable: true
        size:
          type: string
          example: '1024'
          description: The size of the file
          nullable: true
        folder_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the folder tied to the file
          nullable: true
        permission:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the permission tied to the file
          nullable: true
        shared_link:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the shared link tied to the file
          nullable: true
        field_mappings:
          type: object
          example: *ref_143
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
          nullable: true
          additionalProperties: true
      required:
        - name
        - file_url
        - mime_type
        - size
        - folder_id
        - permission
        - shared_link
    UnifiedFilestorageFolderOutput:
      type: object
      properties:
        name:
          type: string
          example: school
          nullable: true
          description: The name of the folder
        size:
          type: string
          example: '2048'
          nullable: true
          description: The size of the folder
        folder_url:
          type: string
          example: https://example.com/school
          nullable: true
          description: The url of the folder
        description:
          type: string
          example: All things school related
          description: The description of the folder
        drive_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the drive tied to the folder
        parent_folder_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the parent folder
        shared_link:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the shared link tied to the folder
        permission:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the permission tied to the folder
        field_mappings:
          type: object
          example: &ref_144
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the folder
        remote_id:
          type: string
          example: id_1
          description: The remote ID of the folder in the context of the 3rd Party
          nullable: true
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: The remote data of the folder in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The created date of the folder
          nullable: true
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the folder
          nullable: true
      required:
        - name
        - size
        - folder_url
        - description
        - drive_id
        - parent_folder_id
        - shared_link
        - permission
    UnifiedFilestorageFolderInput:
      type: object
      properties:
        name:
          type: string
          example: school
          nullable: true
          description: The name of the folder
        size:
          type: string
          example: '2048'
          nullable: true
          description: The size of the folder
        folder_url:
          type: string
          example: https://example.com/school
          nullable: true
          description: The url of the folder
        description:
          type: string
          example: All things school related
          description: The description of the folder
        drive_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the drive tied to the folder
        parent_folder_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the parent folder
        shared_link:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the shared link tied to the folder
        permission:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the permission tied to the folder
        field_mappings:
          type: object
          example: *ref_144
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
      required:
        - name
        - size
        - folder_url
        - description
        - drive_id
        - parent_folder_id
        - shared_link
        - permission
    UnifiedFilestorageGroupOutput:
      type: object
      properties:
        name:
          type: string
          example: My group
          nullable: true
          description: The name of the group
        users:
          type: array
          items:
            oneOf:
              - type: string
              - $ref: '#/components/schemas/UnifiedFilestorageUserOutput'
          example:
            - 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: Uuids of users of the group
        remote_was_deleted:
          type: boolean
          example: false
          nullable: true
          description: >-
            Indicates whether or not this object has been deleted in the third
            party platform.
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the group
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The id of the group in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          additionalProperties: true
          description: The remote data of the group in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
      required:
        - name
        - users
        - remote_was_deleted
    UnifiedFilestorageUserOutput:
      type: object
      properties:
        name:
          type: string
          nullable: true
          example: Joe Doe
          description: The name of the user
        email:
          type: string
          nullable: true
          example: joe.doe@gmail.com
          description: The email of the user
        is_me:
          type: boolean
          nullable: true
          example: true
          description: Whether the user is the one who linked this account.
        field_mappings:
          type: object
          nullable: true
          example:
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
          additionalProperties: true
        id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the user
        remote_id:
          type: string
          nullable: true
          example: id_1
          description: The id of the user in the context of the 3rd Party
        remote_data:
          type: object
          nullable: true
          example:
            fav_dish: broccoli
            fav_color: red
          additionalProperties: true
          description: The remote data of the user in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          nullable: true
          example: '2024-10-01T12:00:00Z'
          description: The modified date of the object
      required:
        - name
        - email
        - is_me
    Variant:
      type: object
      properties: {}
    UnifiedEcommerceProductOutput:
      type: object
      properties:
        product_url:
          type: string
          example: https://product_url/tee
          nullable: true
          description: The URL of the product
        product_type:
          type: string
          example: teeshirt
          nullable: true
          description: The type of the product
        product_status:
          type: string
          example: ACTIVE
          nullable: true
          enum: &ref_145
            - ARCHIVED
            - ACTIVE
            - DRAFT
          description: The status of the product. Either ACTIVE, DRAFT OR ARCHIVED.
        images_urls:
          example: &ref_146
            - https://myproduct/image
          nullable: true
          description: The URLs of the product images
          type: array
          items:
            type: string
        description:
          type: string
          example: best tee ever
          nullable: true
          description: The description of the product
        vendor:
          type: string
          example: vendor_extern
          nullable: true
          description: The vendor of the product
        variants:
          example: &ref_147
            - title: teeshirt
              price: 20
              sku: '3'
              options: null
              weight: 10
              inventory_quantity: 100
          description: The variants of the product
          type: array
          items:
            $ref: '#/components/schemas/Variant'
        tags:
          example: &ref_148
            - tag_1
          nullable: true
          description: The tags associated with the product
          type: array
          items:
            type: string
        field_mappings:
          type: object
          example: &ref_149
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the product
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the product in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: The remote data of the customer in the context of the 3rd Party
        created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedEcommerceProductInput:
      type: object
      properties:
        product_url:
          type: string
          example: https://product_url/tee
          nullable: true
          description: The URL of the product
        product_type:
          type: string
          example: teeshirt
          nullable: true
          description: The type of the product
        product_status:
          type: string
          example: ACTIVE
          nullable: true
          enum: *ref_145
          description: The status of the product. Either ACTIVE, DRAFT OR ARCHIVED.
        images_urls:
          example: *ref_146
          nullable: true
          description: The URLs of the product images
          type: array
          items:
            type: string
        description:
          type: string
          example: best tee ever
          nullable: true
          description: The description of the product
        vendor:
          type: string
          example: vendor_extern
          nullable: true
          description: The vendor of the product
        variants:
          example: *ref_147
          description: The variants of the product
          type: array
          items:
            $ref: '#/components/schemas/Variant'
        tags:
          example: *ref_148
          nullable: true
          description: The tags associated with the product
          type: array
          items:
            type: string
        field_mappings:
          type: object
          example: *ref_149
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
    UnifiedEcommerceOrderOutput:
      type: object
      properties:
        order_status:
          type: string
          example: PAID
          nullable: true
          description: The status of the order
        order_number:
          type: string
          example: 19823838833
          nullable: true
          description: The number of the order
        payment_status:
          type: string
          example: SUCCESS
          nullable: true
          description: The payment status of the order
        currency:
          type: string
          nullable: true
          example: AUD
          enum: &ref_150
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BZD
            - CAD
            - CDF
            - CHF
            - CLP
            - CNY
            - COP
            - CRC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - FOK
            - GBP
            - GEL
            - GGP
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - IMP
            - INR
            - IQD
            - IRR
            - ISK
            - JEP
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KID
            - KMF
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLE
            - SLL
            - SOS
            - SRD
            - SSP
            - STN
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TVD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - UYU
            - UZS
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XCD
            - XDR
            - XOF
            - XPF
            - YER
            - ZAR
            - ZMW
            - ZWL
          description: >-
            The currency of the order. Authorized value must be of type
            CurrencyCode (ISO 4217)
        total_price:
          type: number
          example: 300
          nullable: true
          description: The total price of the order
        total_discount:
          type: number
          example: 10
          nullable: true
          description: The total discount on the order
        total_shipping:
          type: number
          example: 120
          nullable: true
          description: The total shipping cost of the order
        total_tax:
          type: number
          example: 120
          nullable: true
          description: The total tax on the order
        fulfillment_status:
          type: string
          nullable: true
          example: delivered
          description: The fulfillment status of the order
        customer_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the customer associated with the order
        items:
          type: object
          nullable: true
          example: &ref_151 {}
          description: The items in the order
        field_mappings:
          type: object
          example: &ref_152
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the order
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the order in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: The remote data of the customer in the context of the 3rd Party
        created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedEcommerceOrderInput:
      type: object
      properties:
        order_status:
          type: string
          example: PAID
          nullable: true
          description: The status of the order
        order_number:
          type: string
          example: 19823838833
          nullable: true
          description: The number of the order
        payment_status:
          type: string
          example: SUCCESS
          nullable: true
          description: The payment status of the order
        currency:
          type: string
          nullable: true
          example: AUD
          enum: *ref_150
          description: >-
            The currency of the order. Authorized value must be of type
            CurrencyCode (ISO 4217)
        total_price:
          type: number
          example: 300
          nullable: true
          description: The total price of the order
        total_discount:
          type: number
          example: 10
          nullable: true
          description: The total discount on the order
        total_shipping:
          type: number
          example: 120
          nullable: true
          description: The total shipping cost of the order
        total_tax:
          type: number
          example: 120
          nullable: true
          description: The total tax on the order
        fulfillment_status:
          type: string
          nullable: true
          example: delivered
          description: The fulfillment status of the order
        customer_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the customer associated with the order
        items:
          type: object
          nullable: true
          example: *ref_151
          description: The items in the order
        field_mappings:
          type: object
          example: *ref_152
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
    UnifiedEcommerceCustomerOutput:
      type: object
      properties:
        email:
          type: string
          example: joedoe@gmail.com
          nullable: true
          description: The email of the customer
        first_name:
          type: string
          example: Joe
          nullable: true
          description: The first name of the customer
        last_name:
          type: string
          example: Doe
          nullable: true
          description: The last name of the customer
        phone_number:
          type: string
          example: '+336666666'
          nullable: true
          description: The phone number of the customer
        addresses:
          example:
            - address_type: PERSONAL
              street_1: 5th Avenue
              state: New York
              city: New York
              country: United States of America
          nullable: true
          description: The addresses of the customer
          type: array
          items:
            $ref: '#/components/schemas/Address'
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the customer
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the customer in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: The remote data of the customer in the context of the 3rd Party
        created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedEcommerceFulfillmentOutput:
      type: object
      properties:
        carrier:
          type: string
          nullable: true
          example: DHL
          description: The carrier of the fulfilment
        tracking_urls:
          nullable: true
          example:
            - https://tracing-url.sf.com
          description: The tracking URLs of the fulfilment
          type: array
          items:
            type: string
        tracking_numbers:
          nullable: true
          example:
            - track_1029_191919
          description: The tracking numbers of the fulfilment
          type: array
          items:
            type: string
        items:
          type: object
          nullable: true
          example: {}
          description: The items in the fulfilment
        order_id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the order associated with the fulfilment
        field_mappings:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: >-
            The custom field mappings of the object between the remote 3rd party
            & Panora
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the fulfilment
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The remote ID of the fulfilment in the context of the 3rd Party
        remote_data:
          type: object
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: The remote data of the customer in the context of the 3rd Party
        created_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
    UnifiedTicketingAttachmentOutput:
      type: object
      properties:
        file_name:
          type: string
          example: features_planning.pdf
          nullable: true
          description: The file name of the attachment
        file_url:
          type: string
          example: https://example.com/features_planning.pdf
          nullable: true
          description: The file url of the attachment
        uploader:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The uploader's UUID of the attachment
        ticket_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the ticket the attachment is tied to
        comment_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the comment the attachment is tied to
        field_mappings:
          type: object
          nullable: true
          example: &ref_153
            fav_dish: broccoli
            fav_color: red
          description: >-
            The custom field mappings of the attachment between the remote 3rd
            party & Panora
          additionalProperties: true
        id:
          type: string
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          nullable: true
          description: The UUID of the attachment
        remote_id:
          type: string
          example: id_1
          nullable: true
          description: The id of the attachment in the context of the 3rd Party
        remote_data:
          type: object
          additionalProperties: true
          example:
            fav_dish: broccoli
            fav_color: red
          nullable: true
          description: The remote data of the attachment in the context of the 3rd Party
        created_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The created date of the object
        modified_at:
          format: date-time
          type: string
          example: '2024-10-01T12:00:00Z'
          nullable: true
          description: The modified date of the object
      required:
        - file_name
        - file_url
        - uploader
    UnifiedTicketingAttachmentInput:
      type: object
      properties:
        file_name:
          type: string
          example: features_planning.pdf
          nullable: true
          description: The file name of the attachment
        file_url:
          type: string
          example: https://example.com/features_planning.pdf
          nullable: true
          description: The file url of the attachment
        uploader:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The uploader's UUID of the attachment
        ticket_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the ticket the attachment is tied to
        comment_id:
          type: string
          nullable: true
          example: 801f9ede-c698-4e66-a7fc-48d19eebaa4f
          description: The UUID of the comment the attachment is tied to
        field_mappings:
          type: object
          nullable: true
          example: *ref_153
          description: >-
            The custom field mappings of the attachment between the remote 3rd
            party & Panora
          additionalProperties: true
      required:
        - file_name
        - file_url
        - uploader
security:
  - api_key: []
x-speakeasy-name-override:
  - operationId: ^retrieve.*
    methodNameOverride: retrieve
  - operationId: ^list.*
    methodNameOverride: list
  - operationId: ^create.*
    methodNameOverride: create
