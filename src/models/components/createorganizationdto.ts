/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type CreateOrganizationDto = {
    name: string;
    stripeCustomerId: string;
};

/** @internal */
export namespace CreateOrganizationDto$ {
    export const inboundSchema: z.ZodType<CreateOrganizationDto, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string(),
            stripe_customer_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                stripe_customer_id: "stripeCustomerId",
            });
        });

    export type Outbound = {
        name: string;
        stripe_customer_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateOrganizationDto> = z
        .object({
            name: z.string(),
            stripeCustomerId: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                stripeCustomerId: "stripe_customer_id",
            });
        });
}
