/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type CreateProjectDto = {
    name: string;
    idOrganization?: string | undefined;
    idUser: string;
};

/** @internal */
export namespace CreateProjectDto$ {
    export const inboundSchema: z.ZodType<CreateProjectDto, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string(),
            id_organization: z.string().optional(),
            id_user: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                id_organization: "idOrganization",
                id_user: "idUser",
            });
        });

    export type Outbound = {
        name: string;
        id_organization?: string | undefined;
        id_user: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateProjectDto> = z
        .object({
            name: z.string(),
            idOrganization: z.string().optional(),
            idUser: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                idOrganization: "id_organization",
                idUser: "id_user",
            });
        });
}
