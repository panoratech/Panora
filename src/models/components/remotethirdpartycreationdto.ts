/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type RemoteThirdPartyCreationDto = {
    idConnection: string;
    mwIds: Array<string>;
};

/** @internal */
export namespace RemoteThirdPartyCreationDto$ {
    export const inboundSchema: z.ZodType<RemoteThirdPartyCreationDto, z.ZodTypeDef, unknown> = z
        .object({
            id_connection: z.string(),
            mw_ids: z.array(z.string()),
        })
        .transform((v) => {
            return remap$(v, {
                id_connection: "idConnection",
                mw_ids: "mwIds",
            });
        });

    export type Outbound = {
        id_connection: string;
        mw_ids: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RemoteThirdPartyCreationDto> = z
        .object({
            idConnection: z.string(),
            mwIds: z.array(z.string()),
        })
        .transform((v) => {
            return remap$(v, {
                idConnection: "id_connection",
                mwIds: "mw_ids",
            });
        });
}
