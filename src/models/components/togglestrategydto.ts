/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ToggleStrategyDto = {
    idCs: string;
};

/** @internal */
export namespace ToggleStrategyDto$ {
    export const inboundSchema: z.ZodType<ToggleStrategyDto, z.ZodTypeDef, unknown> = z
        .object({
            id_cs: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                id_cs: "idCs",
            });
        });

    export type Outbound = {
        id_cs: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ToggleStrategyDto> = z
        .object({
            idCs: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                idCs: "id_cs",
            });
        });
}
