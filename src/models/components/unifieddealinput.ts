/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedDealInputFieldMappings = {};

export type UnifiedDealInput = {
    /**
     * The name of the deal
     */
    name: string;
    /**
     * The description of the deal
     */
    description: string;
    /**
     * The amount of the deal
     */
    amount: number;
    /**
     * The uuid of the user who is on the deal
     */
    userId?: string | undefined;
    /**
     * The uuid of the stage of the deal
     */
    stageId?: string | undefined;
    /**
     * The uuid of the company tied to the deal
     */
    companyId?: string | undefined;
    fieldMappings: UnifiedDealInputFieldMappings;
};

/** @internal */
export namespace UnifiedDealInputFieldMappings$ {
    export const inboundSchema: z.ZodType<UnifiedDealInputFieldMappings, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedDealInputFieldMappings> =
        z.object({});
}

/** @internal */
export namespace UnifiedDealInput$ {
    export const inboundSchema: z.ZodType<UnifiedDealInput, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string(),
            description: z.string(),
            amount: z.number(),
            user_id: z.string().optional(),
            stage_id: z.string().optional(),
            company_id: z.string().optional(),
            field_mappings: z.lazy(() => UnifiedDealInputFieldMappings$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                user_id: "userId",
                stage_id: "stageId",
                company_id: "companyId",
                field_mappings: "fieldMappings",
            });
        });

    export type Outbound = {
        name: string;
        description: string;
        amount: number;
        user_id?: string | undefined;
        stage_id?: string | undefined;
        company_id?: string | undefined;
        field_mappings: UnifiedDealInputFieldMappings$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedDealInput> = z
        .object({
            name: z.string(),
            description: z.string(),
            amount: z.number(),
            userId: z.string().optional(),
            stageId: z.string().optional(),
            companyId: z.string().optional(),
            fieldMappings: z.lazy(() => UnifiedDealInputFieldMappings$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                userId: "user_id",
                stageId: "stage_id",
                companyId: "company_id",
                fieldMappings: "field_mappings",
            });
        });
}
