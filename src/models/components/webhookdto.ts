/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type WebhookDto = {
    url: string;
    description?: string | undefined;
    idProject: string;
    scope: Array<string>;
};

/** @internal */
export namespace WebhookDto$ {
    export const inboundSchema: z.ZodType<WebhookDto, z.ZodTypeDef, unknown> = z
        .object({
            url: z.string(),
            description: z.string().optional(),
            id_project: z.string(),
            scope: z.array(z.string()),
        })
        .transform((v) => {
            return remap$(v, {
                id_project: "idProject",
            });
        });

    export type Outbound = {
        url: string;
        description?: string | undefined;
        id_project: string;
        scope: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookDto> = z
        .object({
            url: z.string(),
            description: z.string().optional(),
            idProject: z.string(),
            scope: z.array(z.string()),
        })
        .transform((v) => {
            return remap$(v, {
                idProject: "id_project",
            });
        });
}
