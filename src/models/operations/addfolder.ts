/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddFolderRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Filestorage software.
     */
    remoteData?: boolean | undefined;
    unifiedFolderInput: components.UnifiedFolderInput;
};

export type AddFolderResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedFolderOutput | undefined;
};

export type AddFolderResponse = components.UnifiedFolderOutput | AddFolderResponseBody;

/** @internal */
export namespace AddFolderRequest$ {
    export const inboundSchema: z.ZodType<AddFolderRequest, z.ZodTypeDef, unknown> = z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
            UnifiedFolderInput: components.UnifiedFolderInput$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedFolderInput: "unifiedFolderInput",
            });
        });

    export type Outbound = {
        "x-connection-token": string;
        remote_data?: boolean | undefined;
        UnifiedFolderInput: components.UnifiedFolderInput$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddFolderRequest> = z
        .object({
            xConnectionToken: z.string(),
            remoteData: z.boolean().optional(),
            unifiedFolderInput: components.UnifiedFolderInput$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                xConnectionToken: "x-connection-token",
                remoteData: "remote_data",
                unifiedFolderInput: "UnifiedFolderInput",
            });
        });
}

/** @internal */
export namespace AddFolderResponseBody$ {
    export const inboundSchema: z.ZodType<AddFolderResponseBody, z.ZodTypeDef, unknown> = z.object({
        message: z.string().optional(),
        error: z.string().optional(),
        statusCode: z.number(),
        data: components.UnifiedFolderOutput$.inboundSchema.optional(),
    });

    export type Outbound = {
        message?: string | undefined;
        error?: string | undefined;
        statusCode: number;
        data?: components.UnifiedFolderOutput$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddFolderResponseBody> =
        z.object({
            message: z.string().optional(),
            error: z.string().optional(),
            statusCode: z.number(),
            data: components.UnifiedFolderOutput$.outboundSchema.optional(),
        });
}

/** @internal */
export namespace AddFolderResponse$ {
    export const inboundSchema: z.ZodType<AddFolderResponse, z.ZodTypeDef, unknown> = z.union([
        components.UnifiedFolderOutput$.inboundSchema,
        z.lazy(() => AddFolderResponseBody$.inboundSchema),
    ]);

    export type Outbound =
        | components.UnifiedFolderOutput$.Outbound
        | AddFolderResponseBody$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddFolderResponse> = z.union([
        components.UnifiedFolderOutput$.outboundSchema,
        z.lazy(() => AddFolderResponseBody$.outboundSchema),
    ]);
}
